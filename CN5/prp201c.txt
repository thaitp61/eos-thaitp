When Python is running in the interactive mode and displaying the chevron prompt (>>>) - what question is Python asking you?

A. What Python script would you like me to run?
B. What is your favourite color?
C. What Python statement would you like me to run?
D. What is the next machine language instruction to run?<term>C<row>What will the following program print out:
>>> x = 15
>>> x = x + 5
>>> print(x)

A. 20
B. 5
C. 15
D. "print x"
E. x + 5<term>A<row>Python scripts (files) have names that end with:

A) .py
B) .exe
C) .png
D) .doc<term>A<row>Which of these words is a reserved word in Python ?

A. While
B. payroll
C. names
D. pizza<term>A<row>What is the proper way to say "good-bye" to Python?

A. while
B. // stop
C. #EXIT
D. quit()<term>D<row>Which of the parts of a computer actually executes the program instructions?

A. Main Memory
B. Central Processing Unit
C. Input/Output Devices
D. Secondary Memory<term>B<row>What is "code" in the context of this course?

A. A password we use to unlock Python features
B. A sequence of instructions in a programming language
C. A way to encrypt data during World War II
D. A set of rules that govern the style of programs<term>B<row>A USB memory stick is an example of which of the following components of computer architecture?

A. Central Processing Unit
B. Main Memory
C. Output Device
D. Secondary Memory<term>D<row>What is the best way to think about a "Syntax Error" while programming?

A. The computer is overheating and just wants you to stop to let it cool down
B. The computer has used GPS to find your location and hates everyone from your town
C. The computer did not understand the statement that you entered
D. The computer needs to have its software upgraded<term>C<row>Which of the following is not one of the programming patterns covered in Chapter 1?

A. Random steps
B. Sequential Steps
C. Conditional Steps
D. Repeated Steps<term>A<row>Which of the following is a comment in Python?

A. // This is a test
B. * This is a test
C. /** This is a test **/
D. # This is a test<term>D<row>What does the following code print out?

print("123" + "abc")

A. 123+abc
B. This is a syntax error because you cannot add strings
C. 123abc
D. hello world<term>C<row>Which of the following variables is the "most mnemonic"?

A. x
B. x1q3z9ocd
C. hours
D. variable_173<term>C<row>Which of the following is not a Python reserved word?

A. spam
B. break
C. continue
D. for<term>A<row>Assume the variable x has been initialized to an integer value (e.g., x = 3). What does the following statement do?

x = x + 2

A. Create a function called "x" and put the value 2 in the function
B. Produce the value "false" because "x" can never equal "x+2"
C. This would fail as it is a syntax error
D. Retrieve the current value for x, add two to it and put the sum back into x<term>D<row>Which of the following elements of a mathematical expression in Python is evaluated first?

A. Addition +
B. Subtraction -
C. Parentheses ( )
D. Multiplication *<term>C<row>What is the value of the following expression

42 % 10

Hint - the "%" is the remainder operator

A. 4210
B. 2
C. 0.42
D. 10<term>B<row>What will be the value of x after the following statement executes:

x = 1 + 2 * 3 - 8 / 4

A. 2.0
B. 5.0
C. 8
D. 4<term>B<row>What will be the value of x when the following statement is executed:

x = int(98.6)

A. 98
B. 6
C. 100
D. 99<term>A<row>What does the Python input() function do?

A. Pause the program and read data from the user
B. Connect to the network and retrieve a web page.
C. Read the memory of the running program
D. Take a screen shot from an area of the screen<term>A<row>What do we do to a Python statement that is immediately after an if statement to indicate that the statement is to be executed only when the if statement is true?

A. Indent the line below the if statement
B. Underline all of the conditional code
C. Start the statement with a "#" character
D. Begin the statement with a curly brace {<term>A<row>Which of these operators is not a comparison / logical operator?
A. <
B. =
C. !=
D. ==
E. >=<term>B<row>What is true about the following code segment:

if x == 5 :
 print('Is 5')
 print('Is Still 5')
 print('Third 5')

A. Depending on the value of x, either all three of the print statements will execute or none of the statements will execute
B. The string 'Is 5' will always print out regardless of the value for x.
C. The string 'Is 5' will never print out regardless of the value for x.
D. Only two of the three print statements will print out if the value of x is less than zero.<term>A<row>When you have multiple lines in an if block, how do you indicate the end of the if block?

A. You de-indent the next line past the if block to the same level of indent as the original if statement
B. You omit the semicolon ; on the last line of the if block
C. You use a curly brace { after the last line of the if block
D. You put the colon : character on a line by itself to indicate we are done with the if block<term>A<row>You look at the following text:

if x == 6 :
 print('Is 6')
 print('Is Still 6')
 print('Third 6')

It looks perfect but Python is giving you an 'Indentation Error' on the second print statement. What is the most likely reason?

A. You have mixed tabs and spaces in the file
B. Python thinks 'Still' is a mis-spelled word in the string
C. Python has reached its limit on the largest Python program that can be run
D. In order to make humans feel inadequate, Python randomly emits 'Indentation Errors' on perfectly good code - after about an hour the error will just go away without any changes to your program<term>A<row>What is the Python reserved word that we use in two-way if tests to indicate the block of code that is to be executed if the logical test is false?

A. A closing curly brace followed by an open curly brace like this }{
B. else
C. otherwise
D. iterate<term>B<row>What will the following code print out?

x = 0
if x < 2 :
 print('Small')
elif x < 10 :
 print('Medium')
else :
 print('LARGE')

print('All done')

A. All done
B. Small
 Medium
 LARGE
 All done
C. Small
 All done
D. LARGE
 All done<term>C<row>For the following code,

if x < 2 :
 print('Below 2')
elif x >= 2 :
 print('Two or more')
else :
 print('Something else')

What value of 'x' will cause 'Something else' to print out?

A. x = 2.0
B. This code will never print 'Something else' regardless of the value for 'x'
C. x = 2
D. x = -2<term>B<row>In the following code (numbers added) - which will be the last line to execute successfully?

(1) astr = 'Hello Bob'
(2) istr = int(astr)
(3) print('First', istr)
(4) astr = '123'
(5) istr = int(astr)
(6) print('Second', istr)

A. 2
B. 1
C. 5
D. 4<term>B<row>For the following code:

astr = 'Hello Bob'
istr = 0
try:
 istr = int(astr)
except:
 istr = -1

What will the value be for istr after this code executes?

A. The istr variable will not have a value
B. It will be the 'Not a number' value (i.e. NaN)
C. -1
D. It depends on the position in the collating sequence for the letter 'H'<term>C<row>Which Python keyword indicates the start of a function definition?

A. return
B. rad
C. def
D. continue<term>C<row>In Python, how do you indicate the end of the block of code that makes up the function?

A. You add a line that has at least 10 dashes
B. You put the colon character (:) in the first column of a line
C. You add the matching curly brace that was used to start the function }
D. You de-indent a line of code to the same indent level as the def keyword<term>D<row>In Python what is the input() feature best described as?

A. A reserved word
B. A data structure that can hold multiple values using strings as keys
C. A user-defined function
D. A built-in function<term>D<row>What does the following code print out?

def thing():
 print('Hello')

print('There')

A. Hello
B. There
C. Hello
 There
D. thing
 Hello
 There<term>B<row>In the following Python code, which of the following is an "argument" to a function?

x = 'banana'
y = max(x)
print(y)

A. max
B. 'banana'
C. print
D. x<term>D<row>What will the following Python code print out?

def func(x) :
 print(x)

func(10)
func(20)

A. x
 10
 x
 20
B. func
 func
C. 10
 20
D. x
 20<term>C<row>Which line of the following Python program will never execute?

def stuff():
 print('Hello')
 return
 print('World')

stuff()

A. print('Hello')
B. stuff()
C. print ('World')
D. return
E. def stuff():<term>C<row>What will the following Python program print out?

def greet(lang):
 if lang == 'es':
 return 'Hola'
 elif lang == 'fr':
 return 'Bonjour'
 else:
 return 'Hello'

print(greet('fr'),'Michael')

A. Bonjour Michael
B. Hola Michael
C. Hello Michael
D. def
 Hola
 Bonjour
 Hello
 Michael<term>A<row>What does the following Python code print out? (Note that this is a bit of a trick question and the code has what many would consider to be a flaw/bug - so read carefully).

def addtwo(a, b):
 added = a + b
 return a

x = addtwo(2, 7)
print(x)

A. 9
B. 7
C. 14
D. 2<term>D<row>What is the most important benefit of writing your own functions?

A. Following the rule that no function can have more than 10 statements in it
B. Avoiding writing the same non-trivial code more than once in your program
C. To avoid having more than 10 lines of sequential code without an indent or de-indent
D. Following the rule that whenever a program is more than 10 lines you must use a function<term>B<row>What is wrong with this Python loop:

n = 5
while n > 0 :
 print(n)

print('All done')

A. This loop will run forever
B. The print('All done') statement should be indented four spaces
C. There should be no colon on the while statement
D. while is not a Python reserved word<term>A<row>What does the *break* statement do?

A. Exits the program
B. Jumps to the "top" of the loop and starts the next iteration
C. Resets the iteration variable to its initial value
D. Exits the currently executing loop<term>D<row>What does the *continue* statement do?

A. Resets the iteration variable to its initial value
B. Exits the program
C. Jumps to the "top" of the loop and starts the next iteration
D. Exits the currently executing loop<term>C<row>What does the following Python program print out?

tot = 0
for i in [5, 4, 3, 2, 1] :
 tot = tot + i

print(tot)

A. 10
B. 5
C. 0
D. 15<term>D<row>What is the iteration variable in the following Python code:

friends = ['Joseph', 'Glenn', 'Sally']
for friend in friends :
 print('Happy New Year:', friend)

print('Done!')

A. friend
B. Sally
C. Glenn
D. Joseph<term>A<row>What is a good description of the following bit of Python code?

zork = 0
for thing in [9, 41, 12, 3, 74, 15] :
zork = zork + thing

print('After', zork)

A. Count all of the elements in a list
B. Compute the average of the elements in a list
C. Find the smallest item in a list
D. Sum all the elements of a list<term>D<row>What will the following code print out?

smallest_so_far = -1
for the_num in [9, 41, 12, 3, 74, 15] :
 if the_num < smallest_so_far :
 smallest_so_far = the_num

print(smallest_so_far)

Hint: This is a trick question and most would say this code has a bug - so read carefully

A. -1
B. 74
C. 42
D. 3<term>A<row>What is a good statement to describe the *is* operator as used in the following if statement:

if smallest is None :
 smallest = value

A. matches both type and value
B. Looks up 'None' in the smallest variable if it is a string
C. Is true if the smallest variable has a value of -1
D. The if statement is a syntax error<term>A<row>Which reserved word indicates the start of an "indefinite" loop in Python?

A. for
B. break
C. while
D. def
E. indef<term>C<row>How many times will the body of the following loop be executed?

n = 0
while n > 0 :
 print('Lather')
 print('Rinse')

print('Dry off!')

A. 1
B. 0
C. 5
D. This is an infinite loop<term>B<row>What does the following Python Program print out?

str1 = "Hello"
str2 = 'there'
bob = str1 + str2
print(bob)

A. Hello
there
B. Hello there
C. Hellothere
D. Hello<term>C<row>What does the following Python program print out?

x = '40'
y = int(x) + 2
print(y)

A. int402
B. 42
C. x2
D. 402<term>B<row>How would you use the index operator [] to print out the letter q from the following string?

x = 'From marquard@uct.ac.za'

A. print(x[8])
B. print(x[9])
C. print x[-1]
D. print(x[7])
E. print(x[q])<term>A<row>How would you use string slicing [:] to print out 'uct' from the following string?

x = 'From marquard@uct.ac.za'

A. print(x[14:17])
B. print(x[14:3])
C. print(x[15:18])
D. print(x[14/17])
E. print(x[15:3])
F. print(x[14+17])<term>A<row>What is the iteration variable in the following Python code?

for letter in 'banana' :
 print(letter)

A. 'banana'
B. for
C. in
D. print
E. letter<term>E<row>What does the following Python code print out?

print(len('banana')*7)

A. -1
B. banana banana banana banana banana banana banana
C. 42
D. banana7<term>C<row>How would you print out the following variable in all upper case in Python?

greet = 'Hello Bob'

A. print(uc($greet));
B. console.log(greet.toUpperCase());
C. puts(greet.ucase);
D. print(greet.upper())<term>D<row>Which of the following is not a valid string method in Python?

A. twist()
B. startswith()
C. join()
D. split()<term>A<row>What will the following Python code print out?

data = 'From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008'
pos = data.find('.')
print(data[pos:pos+3])

A. uct
B. 09:14
C. .ma
D. mar<term>C<row>Which of the following string methods removes whitespace from both the beginning and end of a string?

A. strtrunc()
B. strip()
C. rltrim()
D. wsrem()<term>B<row>Given the architecture and terminology we introduced in Chapter 1, where are files stored?

A. Main Memory
B. Motherboard
C. Secondary memory
D. Central Processor<term>C<row>What is stored in a "file handle" that is returned from a successful *open()* call?

A. All the data from the file is read into memory and stored in the handle
B. The handle has a list of all of the files in a particular folder on the hard drive
C. The handle contains the first 10 lines of a file
D. The handle is a connection to the file's data<term>D<row>What do we use the second parameter of the *open()* call to indicate?

A. What disk drive the file is stored on
B. The list of folders to be searched to find the file we want to open
C. How large we expect the file to be
D. Whether we want to read data from the file or write data to the file<term>D<row>What Python function would you use if you wanted to prompt the user for a file name to open?

A. gets()
B. file_input()
C. alert()
D. input()<term>D<row>What is the purpose of the newline character in text files?

A. It enables random movement throughout the file
B. It allows us to open more than one files and read them in a synchronized manner
C. It adds a new network connection to retrieve files from the network
D. It indicates the end of one line of text and the beginning of another line of text<term>D<row>If we open a file as follows:

xfile = open('mbox.txt')

What statement would we use to read the file one line at a time?

A. READ (xfile,*,END=10) line
B. while (<xfile>) {
C. for line in xfile:
D. while ( getline (xfile,line) ) {<term>C<row>What is the purpose of the following Python code?

fhand = open('mbox.txt')
x = 0
for line in fhand:
 x = x + 1

print(x)

A. Count the lines in the file 'mbox.txt'
B. Reverse the order of the lines in mbox.txt
C. Convert the lines in mbox.txt to lower case
D. Remove the leading and trailing spaces from each line in mbox.txt<term>A<row>If you write a Python program to read a text file and you see extra blank lines in the output that are not present in the file input as shown below, what Python string function will likely solve the problem?

From: stephen.marquard@uct.ac.za
From: louis@media.berkeley.edu
From: zqian@umich.edu
From: rjlowe@iupui.edu
...

A. rstrip()
B. ljust()
C. startswith()
D. trim()<term>A<row>The following code sequence fails with a traceback when the user enters a file that does not exist. How would you avoid the traceback and make it so you could print out your own error message when a bad file name was entered?

fname = input('Enter the file name: ')
fhand = open(fname)

A. setjmp / longjmp
B. signal handlers
C. try / except
D. try / catch / finally<term>C<row>What does the following Python code do?

fhand = open('mbox-short.txt')
inp = fhand.read()

A. Turns the text in the file into a graphic image like a PNG or JPG
B. Prompts the user for a file name
C. Reads the entire file into the variable inp as a string
D. Checks to see if the file exists and can be written<term>C<row>How are "collection" variables different from normal variables?

A. Collection variables can only store a single value
B. Collection variables can store multiple values in a single variable
C. Collection variables merge streams of output into a single stream
D. Collection variables pull multiple network documents together<term>B<row>What are the Python keywords used to construct a loop to iterate through a list?

A. foreach / in
B. for / in
C. try / except
D. def / return<term>B<row>For the following list, how would you print out 'Sally'?

friends = [ 'Joseph', 'Glenn', 'Sally' ]

A. print friends[3]
B. print(friends[2:1])
C. print(friends[2])
D. print(friends['Sally'])<term>C<row>What would the following Python code print out?

fruit = 'Banana'
fruit[0] = 'b'
print(fruit)

A. [0]
B. Banana
C. banana
D. B
E. b
F. Nothing would print - the program fails with a traceback error<term>F<row>Which of the following Python statements would print out the length of a list stored in the variable data?

A. print(data.length)
B. print(data.Len)
C. print(strlen(data))
D. print(data.length())
E. print(length(data))
F. print(len(data))<term>F<row>What type of data is produced when you call the range() function?

x = list(range(5))

A. A string
B. A list of characters
C. A list of integers
D. A list of words
E. A boolean (true/false) value<term>C<row>What does the following Python code print out?

a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
print(len(c))

A. [4, 5, 6]
B. [1, 2, 3]
C. 15
D. [1, 2, 3, 4, 5, 6]
E. 6
F. 21<term>E<row>Which of the following slicing operations will produce the list [12, 3]?

t = [9, 41, 12, 3, 74, 15]

A. t[2:4]
B. t[2:2]
C. t[12:3]
D. t[:]
E. t[1:3]<term>A<row>What list method adds a new item to the end of an existing list?

A. pop()
B. append()
C. index()
D. add()
E. push()
F. forward()<term>B<row>What will the following Python code print out?

friends = [ 'Joseph', 'Glenn', 'Sally' ]
friends.sort()
print(friends[0])

A. Glenn
B. Joseph
C. Sally
D. friends<term>A<row>How are Python dictionaries different from Python lists?

A. Python lists can store strings and dictionaries can only store words
B. Python lists store multiple values and dictionaries store a single value
C. Python dictionaries are a collection and lists are not a collection
D. Python lists maintain order and dictionaries do not maintain order<term>D<row>What is a term commonly used to describe the Python dictionary feature in other programming languages?

A. Sequences
B. Closures
C. Associative arrays
D. Lambdas<term>C<row>What would the following Python code print out?

stuff = dict()
print(stuff['candy'])

A. The program would fail with a traceback
B. 0
C. candy
D. -1<term>A<row>What would the following Python code print out?

stuff = dict()
print(stuff.get('candy',-1))

A. 'candy'
B. The program would fail with a traceback
C. -1
D. 0<term>C<row>(T/F) When you add items to a dictionary they remain in the order in which you added them.

A. False
B. True<term>A<row>What is a common use of Python dictionaries in a program?

A. Sorting a list of names into alphabetical order
B. Computing an average of a set of numbers
C. Building a histogram counting the occurrences of various strings in a file
D. Splitting a line of input into words using a space as a delimiter<term>C<row>Which of the following lines of Python is equivalent to the following sequence of statements assuming that counts is a dictionary?

if key in counts:
 counts[key] = counts[key] + 1
else:
 counts[key] = 1

A. counts[key] = (key in counts) + 1
B. counts[key] = (counts[key] * 1) + 1
C. counts[key] = counts.get(key,0) + 1
D. counts[key] = counts.get(key,-1) + 1
E. counts[key] = key + 1<term>C<row>In the following Python, what does the *for* loop iterate through?

x = dict()
...
for y in x :
 ...

A. It loops through the integers in the range from zero through the length of the dictionary
B. It loops through the values in the dictionary
C. It loops through all of the dictionaries in the program
D. It loops through the keys in the dictionary<term>D<row>Which method in a dictionary object gives you a list of the values in the dictionary?

A. items()
B. all()
C. values()
D. each()
E. keys()<term>C<row>What is the purpose of the second parameter of the *get()* method for Python dictionaries?

A. The key to retrieve
B. An alternate key to use if the first key cannot be found
C. To provide a default value if the key is not found
D. The value to retrieve<term>C<row>What is the difference between a Python tuple and Python list?

A. Lists are mutable and tuples are not mutable
B. Tuples can be expanded after they are created and lists cannot
C. Lists maintain the order of the items and tuples do not maintain order
D. Lists are indexed by integers and tuples are indexed by strings<term>A<row>Which of the following methods work both in Python lists and Python tuples?

A. append()
B. reverse()
C. index()
D. pop()
E. sort()<term>C<row>What will end up in the variable y after this code is executed?

x , y = 3, 4

A. A two item tuple
B. A dictionary with the key 3 mapped to the value 4
C. 3
D. A two item list
E. 4<term>E<row>In the following Python code, what will end up in the variable y?

x = { 'chuck' : 1 , 'fred' : 42, 'jan': 100}
y = x.items()

A. A list of integers
B. A list of strings
C. A tuple with three integers
D. A list of tuples<term>D<row>Which of the following tuples is greater than x in the following Python sequence?

x = (5, 1, 3)
if ??? > x :
 ...

A. (6, 0, 0)
B. (0, 1000, 2000)
C. (5, 0, 300)
D. (4, 100, 200)<term>A<row>What does the following Python code accomplish, assuming the c is a non-empty dictionary?

tmp = list()
for k, v in c.items() :
 tmp.append( (v, k) )

A. It sorts the dictionary based on its key values
B. It computes the largest of all of the values in the dictionary
C. It creates a list of tuples where each tuple is a value, key pair
D. It computes the average of all of the values in the dictionary<term>C<row>If the variable data is a Python list, how do we sort it in reverse order?

A. data = sortrev(data)
B. data.sort(reverse=True)
C. data = data.sort(-1)
D. data.sort.reverse()<term>B<row>Using the following tuple, how would you print 'Wed'?

days = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')

A. print(days(2))
B. print[days(2)]
C. print(days{2})
D. print(days[2])
E. print(days[1])
F. print(days.get(1,-1))<term>D<row>In the following Python loop, why are there two iteration variables (k and v)?

c = {'a':10, 'b':1, 'c':22}
for k, v in c.items() :
 ...

A. Because the items() method in dictionaries returns a list of tuples
B. Because for each item we want the previous and current key
C. Because there are two items in the dictionary
D. Because the keys for the dictionary are strings<term>A<row>Given that Python lists and Python tuples are quite similar - when might you prefer to use a tuple over a list?

A. For a list of items you intend to sort in place
B. For a temporary variable that you will use and discard without modifying
C. For a list of items that want to use strings as key values instead of integers
D. For a list of items that will be extended as new items are found<term>B<row>Which of the following best describes "Regular Expressions"?

A. A small programming language unto itself
B. A way to calculate mathematical values paying attention to operator precedence
C. A way to solve Algebra formulas for the unknown value
D. The way Python handles and recovers from errors that would otherwise cause a traceback<term>A<row>What will the '\$' regular expression match?

A. The end of a line
B. An empty line
C. The beginning of a line
D. A new line at the end of a line
E. A dollar sign<term>E<row>What would the following mean in a regular expression? [a-z0-9]

A. Match any text that is surrounded by square braces
B. Match anything but a lowercase letter or digit
C. Match a lowercase letter or a digit
D. Match any number of lowercase letters followed by any number of digits
E. Match an entire line as long as it is lowercase letters or digits<term>C<row>What is the type of the return value of the re.findall() method?

A. A string
B. A list of strings
C. An integer
D. A single character
E. A boolean<term>B<row>What is the "wild card" character in a regular expression (i.e., the character that matches any character)?

A. *
B. +
C. ^
D. $
E. .
F. ?<term>E<row>What is the difference between the "+" and "*" character in regular expressions?

A. The "+" matches at least one character and the "*" matches zero or more characters
B. The "+" matches upper case characters and the "*" matches lowercase characters
C. The "+" matches the beginning of a line and the "*" matches the end of a line
D. The "+" matches the actual plus character and the "*" matches any character
E. The "+" indicates "start of extraction" and the "*" indicates the "end of extraction"<term>A<row>What does the "[0-9]+" match in a regular expression?

A. Any mathematical expression
B. One or more digits
C. Any number of digits at the beginning of a line
D. Several digits followed by a plus sign
E. Zero or more digits<term>B<row>What does the following Python sequence print out?

x = 'From: Using the : character'
y = re.findall('^F.+:', x)
print(y)

A. ^F.+:
B. From:
C. :
D. ['From:']
E. ['From: Using the :']<term>E<row>What character do you add to the "+" or "*" to indicate that the match is to be done in a non-greedy manner?

A. ++
B. ^
C. **
D. $
E. \g
F. ?<term>F<row>Given the following line of text:

From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008

What would the regular expression '\S+?@\S+' match?

A. From
B. stephen.marquard@uct.ac.za
C. marquard@uct
D. \@\
E. d@uct.ac.za<term>B<row>Which of the following regular expressions would extract 'uct.ac.za' from this string using re.findall?

From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008

A. @\S+
B. F.+:
C. @(\S+)
D. ..@\S+..<term>C<row>Which of the following is the way we match the "start of a line" in a regular expression?

A. ^
B. str.startswith()
C. \linestart
D. String.startsWith()
E. variable[0:1]<term>A<row>What do we call it when a browser uses the HTTP protocol to load a file or page from a server and display it in the browser?

A. SMTP
B. DECNET
C. The Request/Response Cycle
D. Internet Protocol (IP)
E. IMAP<term>C<row>Which of the following is most similar to a TCP port number?

A. The distance between two locations
B. The GPS coordinates of a building
C. A street number in an address
D. A telephone number
E. A telephone extension<term>E<row>What must you do in Python before opening a socket?

A. _socket = true
B. open socket
C. import socket
D. import tcp
E. import tcp-socket<term>C<row>In a client-server application on the web using sockets, which must come up first?

A. server
B. client
C. it does not matter<term>A<row>Which of the following is most like an open socket in an application?

A. An "in-progress" phone conversation
B. Fiber optic cables
C. The wheels on an automobile
D. The chain on a bicycle
E. The ringer on a telephone<term>A<row>What does the "H" of HTTP stand for?

A. Simple
B. HyperText
C. wHolsitic
D. Hyperspeed
E. Manual<term>B<row>What is an important aspect of an Application Layer protocol like HTTP?

A. How long do we wait before packets are retransmitted?
B. What is the IP address for a domain like www.dr-chuck.com?
C. How much memory does the server need to serve requests?
D. Which application talks first? The client or server?<term>D<row>What are the three parts of this URL (Uniform Resource Locator)?

http://www.dr-chuck.com/page1.htm

A. Protocol, document, and offset
B. Protocol, host, and document
C. Document, page, and protocol
D. Page, offset, and count
E. Host, offset, and page<term>B<row>When you click on an anchor tag in a web page like below, what HTTP request is sent to the server?

<p>Please click <a href="page1.htm">here</a>.</p>

A. GET
B. POST
C. PUT
D. DELETE
E. INFO<term>A<row>Which organization publishes Internet Protocol Standards?

A. SCORM
B. IETF
C. LDAP
D. IMS
E. SIFA<term>B<row>What separates the HTTP headers from the body of the HTTP document?

A. A less-than sign indicating the start of an HTML tag
B. Four dashes
C. A blank line
D. X-End-Header: true<term>C<row>Which of the following TCP sockets is most commonly used for the web protocol (HTTP)?

A. 25
B. 22
C. 119
D. 80
E. 23<term>D<row>Which of the following Python data structures is most similar to the value returned in this line of Python:

x = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')

A. file handle
B. regular expression
C. dictionary
D. socket
E. list<term>A<row>In this Python code, which line actually reads the data?

import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mysock.connect(('data.pr4e.org', 80))
cmd = 'GET http://data.pr4e.org/romeo.txt HTTP/1.0\n\n'.encode()
mysock.send(cmd)

while True:
 data = mysock.recv(512)
 if (len(data) < 1):
 break
 print(data.decode())

mysock.close()

A. mysock.recv()
B. socket.socket()
C. mysock.close()
D. mysock.connect()
E. mysock.send()<term>A<row>Which of the following regular expressions would extract the URL from this line of HTML:

<p>Please click <a href="http://www.dr-chuck.com">here</a></p>

A. href="(.+)"
B. href=".+"
C. http://.*
D. <.*><term>A<row>In this Python code, which line is most like the open() call to read a file:

import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mysock.connect(('data.pr4e.org', 80))
cmd = 'GET http://data.pr4e.org/romeo.txt HTTP/1.0\n\n'.encode()
mysock.send(cmd)

while True:
data = mysock.recv(512)
if (len(data) < 1):
break
print(data.decode())

mysock.close()

A. mysock.connect()
B. import socket
C. mysock.recv()
D. mysock.send()
E. socket.socket()<term>A<row>Which HTTP header tells the browser the kind of document that is being returned?

A. Document-Type:
B. Content-Type:
C. HTML-Document:
D. Metadata:
E. ETag:<term>B<row>What should you check before scraping a web site?

A. That the web site only has links within the same site
B. That the web site supports the HTTP GET command
C. That the web site returns HTML for all pages
D. That the web site allows scraping<term>D<row>What is the purpose of the BeautifulSoup Python library?

A. It optimizes files that are retrieved many times
B. It allows a web site to choose an attractive skin
C. It repairs and parses HTML to make it easier for a program to understand
D. It builds word clouds from web pages
E. It animates web operations to make them more attractive<term>C<row>What ends up in the "x" variable in the following code:

html = urllib.request.urlopen(url).read()
soup = BeautifulSoup(html, 'html.parser')
x = soup('a')

A. A list of all the anchor tags (<a..) in the HTML from the URL
B. True if there were any anchor tags in the HTML from the URL
C. All of the externally linked CSS files in the HTML from the URL
D. All of the paragraphs of the HTML from the URL<term>A<row>What is the most common Unicode encoding when moving data between systems?

A. UTF-64
B. UTF-128
C. UTF-32
D. UTF-8
E. UTF-16<term>D<row>What is the decimal (Base-10) numeric value for the upper case letter "G" in the ASCII character set?

A. 71
B. 7
C. 103
D. 25073
E. 14<term>A<row>What word does the following sequence of numbers represent in ASCII:
108, 105, 110, 101

A. ping
B. lost
C. func
D. tree
E. line<term>E<row>How are strings stored internally in Python 3?

A. EBCDIC
B. UTF-8
C. Byte Code
D. Unicode
E. ASCII<term>D<row>When reading data across the network (i.e. from a URL) in Python 3, what method must be used to convert it to the internal format used by strings?

A. trim()
B. upper()
C. encode()
D. find()
E. decode()<term>E<row>What is the ASCII character that is associated with the decimal value 42?

A. !
B. *
C. /
D. +
E. ^<term>B<row>What is "serialization" when we are talking about web services?

A. Making it so that dictionaries can maintain their keys in sorted order
B. Sorting all the data stored in a tuple
C. The act of taking data stored in a program and formatting it so it can be sent across the network
D. Marking each network packet so it can be put back into order on the receiving system<term>C<row>Which of the following are not commonly used serialization formats?

A. Dictionaries
B. JSON
C. XML
D. HTTP
E. TCP<term>ADE<row>In this XML, which are the "complex elements"?

<people>
<person>
<name>Chuck</name>
<phone>303 4456</phone>
</person>
<person>
<name>Noah</name>
<phone>622 7421</phone>
</person>
</people>

A. people
B. person
C. phone
D. name
E. Noah<term>AB<row>In the following XML, which are attributes?

<person>
<name>Chuck</name>
<phone type="intl">
 +1 734 303 4456
</phone>
<email hide="yes" />
</person>

A. hide
B. person
C. name
D. email
E. type<term>AE<row>In the following XML, which node is the parent node of node e

<a>
 <b>X</b>
 <c>
 <d>Y</d>
 <e>Z</e>
 </c>
</a>

A. a
B. c
C. b
D. e<term>B<row>Looking at the following XML, what text value would we find at path "/a/c/e"

<a>
 <b>X</b>
 <c>
 <d>Y</d>
 <e>Z</e>
 </c>
</a>

A. b
B. a
C. Y
D. e
E. Z<term>E<row>What is the purpose of XML Schema?

A. To transfer XML data reliably during network outages
B. To compute SHA1 checksums on data to make sure it is not modified in transit
C. To establish a contract as to what is valid XML
D. A Python program to tranform XML files<term>C<row>For this XML Schema:

<xs:complexType name="person">
 <xs:sequence>
 <xs:element name="lastname" type="xs:string"/>
 <xs:element name="age" type="xs:integer"/>
 <xs:element name="dateborn" type="xs:date"/>
 </xs:sequence>
</xs:complexType>

And this XML,

<person>
 <lastname>Severance</lastname>
 <Age>17</Age>
 <dateborn>2001-04-17</dateborn>
</person>

Which tag is incorrect?

A. person
B. Age
C. lastname
D. dateborn
E. age<term>B<row>What does the "Z" mean in this representation of a time:

2002-05-30T09:30:10Z

A. This time is in the UTC timezone
B. The hours value is in the range 0-12
C. The local timezone for this time is New Zealand
D. This time is Daylight Savings Time<term>A<row>Which of the following dates is in ISO8601 format?

A. May 30, 2002
B. 2002-05-30T09:30:10Z
C. 2002-May-30
D. 05/30/2002<term>B<row>What is a good time zone to use when computers are exchanging data over APIs?

A. The local time zone of the receiving computer
B. The local time zone of the sending computer
C. Universal Time / GMT
D. The local time zone of the sending computer without daylight savings time<term>C<row>What is the method to cause Python to parse XML that is stored in a string?

A. fromstring()
B. parse()
C. readall()
D. extract()
E. xpath()<term>A<row>In this XML, which are the "simple elements"?

<people>
 <person>
 <name>Chuck</name>
 <phone>303 4456</phone>
 </person>
 <person>
 <name>Noah</name>
 <phone>622 7421</phone>
 </person>
</people>

A. name
B. phone
C. person
D. Noah
E. people<term>AB<row>If you were building an XML Schema and wanted to limit the values allowed in an xs:string field to only those in a particular list, what XML tag would you use in your XML Schema definition?

A. xs:element
B. xs:enumeration
C. xs:sequence
D. xs:complexType
E. maxOccurs<term>B<row>What is the name of the Python 2.x library to parse XML data?

A. xml2 
B. xml.etree.ElementTree 
C. xml.json 
D. xml-misc<term>B<row>Who is credited with getting the JSON movement started?

A. Pooja Sankar
B. Bjarne Stroustrup
C. Douglas Crockford
D. Mitchell Baker<term>C<row>Which of the following is true about an API?

A. An API defines the pin-outs for the USB connectors
B. An API keeps servers running even when the power is off
C. An API defines the header bits in the first 8 bits of all IP packets
D. An API is a contract that defines how to use a software library<term>D<row>Which of the following is a web services approach used by the Twitter API?

A. CORBA
B. REST
C. SOAP
D. XML-RPC<term>B<row>What kind of variable will you get in Python when the following JSON is parsed:

{ "id" : "001",
"x" : "2",
"name" : "Chuck"
}

A. A list with three items
B. A list of tuples
C. A tuple with three items
D. A dictionary with three key / value pairs
E. A list with six items<term>D<row>Which of the following is not true about the service-oriented approach?

A. Standards are developed where many pairs of applications must work together
B. An application runs together all in one place
C. An application makes use of the services provided by other applications
D. Web services and APIs are used to transfer data between applications<term>B<row>If the following JSON were parsed and put into the variable x,

{
"users": [
{
"status": {
"text": "@jazzychad I just bought one .__.",
},
"location": "San Francisco, California",
"screen_name": "leahculver",
"name": "Leah Culver",
},
 ...

what Python code would extract "Leah Culver" from the JSON?

A. x["users"]["name"]
B. x[0]["name"]
C. x["users"][0]["name"]
D. x["name"]
E. x->name<term>C<row>What library call do you make to append properly encoded parameters to the end of a URL like the following:

http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address=Ann+Arbor%2C+MI

A. re.match()
B. urllib.parse.urlencode()
C. urllib.urlcat()
D. re.encode()<term>B<row>What happens when you exceed the Google geocoding API rate limit?

A. Your application starts to perform very slowly
B. The API starts to perform very slowly
C. You cannot use the API for 24 hours
D. You canot use the API until you respond to an email that contains a survey question<term>C<row>What protocol does Twitter use to protect its API?

A. PKI-HMAC
B. Java Web Tokens
C. OAuth
D. SOAP
E. SHA1-MD5
F. WS*Security<term>C<row>What header does Twitter use to tell you how many more API requests you can make before you will be rate limited?

A. x-request-count-down
B. x-max-requests
C. x-rate-limit-remaining
D. content-type<term>C<row>Who is credited with the REST approach to web services?

A. Roy Fielding
B. Leonard Klienrock
C. Bjarne Stroustrup
D. Vint Cerf
E. Daphne Koller<term>A<row>What Python library do you have to import to parse and handle JSON?

A. import json
B. import re
C. ElementTree
D. BeautifulSoup<term>A<row>What is the method used to parse a string containing JSON data so that you can work with the data in Python?

A. json.read() 
B. json.loads()
C. json.parse() 
D. json.connect()<term>B<row>Which of these two web service approaches is preferred in most modern service-oriented applications?

A. REST - Representational state transfer
B. SOAP - Simple Object Access Protocol<term>A<row>What word does the following sequence of numbers represent in ASCII:

108, 105, 115, 116

A. mist
B. list
C. dict
D. webs
E. first<term>B<row>Which came first, the instance or the class?

A. method
B. function
C. class
D. instance<term>C<row>In Object Oriented Programming, what is another name for the "attributes" of an object?

A. messages
B. forms
C. methods
D. fields
E. portions<term>D<row>At the moment of creation of a new object, Python looks at the _________ definition to define the structure and capabilities of the newly created object.

A. cache
B. method
C. constructor
D. class
E. instance<term>D<row>Which of the following is NOT a good synonym for "class" in Python?

A. pattern
B. blueprint
C. direction
D. template<term>C<row>What does this Python statement do if PartyAnimal is a class?

zap = PartyAnimal()

A. Subtract the value of the zap variable from the value in the PartyAnimal variable and put the difference in zap
B. Clear out all the data in the PartyAnimal variable and put the old values for the data in zap
C. Copy the value from the PartyAnimal variable to the variable zap
D. Use the PartyAnimal template to make a new object and assign it to zap<term>D<row>What is the syntax to look up the fullname attribute in an object stored in the variable colleen?

A. colleen.fullname
B. colleen::fullname
C. colleen['fullname']
D. colleen->fullname<term>A<row>Which of these statements is used to indicate that class A will inherit all the features of class B?

A. class A(B) :
B. A=B++;
C. class A instanceOf B :
D. class A inherits B :
E. class A extends B :<term>A<row>What keyword is used to indicate the start of a method in a Python class?

A. continue
B. def
C. function
D. break<term>B<row>What is "self" typically used for in a Python method within a class?

A. The number of parameters to the method
B. To terminate a loop
C. To refer to the instance in which the method is being called
D. To set the residual value in an expression where the method is used<term>C<row>What does the Python dir() function show when we pass an object into it as a parameter?

A. It shows the methods and attributes of the object
B. It shows the number of parameters to the constructor
C. It shows the type of the object
D. It shows the parent class<term>A<row>Which of the following is rarely used in Object Oriented Programming?

A. Attribute
B. Constructor
C. Method
D. Destructor<term>D<row>Structured Query Language (SQL) is used to (check all that apply)

A. Delete data
B. Insert data
C. Create a table
D. Check Python code for errors<term>ABC<row>Which of these is the right syntax to make a new table?

A. MAKE people;
B. MAKE DATASET people;
C. CREATE TABLE people;
D. CREATE people;<term>C<row>Which SQL command is used to insert a new row into a table?

A. INSERT AFTER
B. INSERT ROW
C. INSERT INTO
D. ADD ROW<term>C<row>Which command is used to retrieve all records from a table?

A. RETRIEVE * FROM Users
B. RETRIEVE all FROM User
C. SELECT all FROM Users
D. SELECT * FROM Users<term>D<row>Which keyword will cause the results of the query to be displayed in sorted order?

A. GROUP BY
B. ORDER BY
C. WHERE
D. None of these<term>B<row>In database terminology, another word for table is

A. relation
B. attribute
C. row
D. field<term>A<row>In a typical online production environment, who has direct access to the production database?

A. Database Administrator
B. UI/UX Designer
C. Project Manager
D. Developer<term>A<row>Which of the following is the database software used in this class?

A. SQL Server
B. MySQL
C. Oracle
D. SQLite
E. Postgres<term>D<row>What happens if a DELETE command is run on a table without a WHERE clause?

A. It is a syntax error
B. The first row of the table will be deleted
C. All the rows in the table are deleted
D. All the rows without a primary key will be deleted<term>C<row>Which of the following commands would update a column named "name" in a table named "Users"?

A. Users->name = 'new name' WHERE ...
B. UPDATE Users (name) VALUES ('new name') WHERE ...
C. Users.name='new name' WHERE ...
D. UPDATE Users SET name='new name' WHERE ...<term>D<row>What does this SQL command do?

SELECT COUNT(*) FROM Users

A. It only retrieves the rows of Users if there are at least two rows
B. It is a syntax errror
C. It adds a COUNT column to the Users table
D. It counts the rows in the table Users<term>D<row>What is the primary added value of relational databases over flat files?

A. Ability to execute JavaScript in the file
B. Ability to execute Python code within the file
C. Ability to scan large amounts of data quickly
D. Ability to quickly convert data to HTML
E. Ability to store data in a format that can be sent across a network<term>C<row>What is the purpose of a primary key?

A. To point to a particular row in another table
B. To look up a row based on a string that comes from outside the program
C. To track the number of duplicate values in another column
D. To look up a particular row in a table very quickly<term>D<row>Which of the following is NOT a good rule to follow when developing a database model?

A. Never repeat string data in more than one table in a data model
B. Model each "object" in the application as one or more tables
C. Use a person's email address as their primary key
D. Use integers as primary keys<term>C<row>If our user interface (i.e., like iTunes) has repeated strings on one column of the user interface, how should we model this properly in a database?

A. Put the string in the last row where it occurs and put the number of that row in the column of all of the rest of the rows where the string occurs
B. Put the string in the first row where it occurs and then put that row number in the column of all of the rest of the rows where the string occurs
C. Encode the entire row as JSON and store it in a TEXT column in the database
D. Make a table that maps the strings in the column to numbers and then use those numbers in the column
E. Put the string in the first row where it occurs and then put NULL in all of the other rows<term>D<row>Which of the following is the label we give a column that the "outside world" uses to look up a particular row?

A. Local key
B. Remote key
C. Primary key
D. Logical key
E. Foreign key<term>D<row>What is the label we give to a column that is an integer and used to point to a row in a different table?

A. Remote key
B. Primary key
C. Logical key
D. Foreign key
E. Local key<term>D<row>What SQLite keyword is added to primary keys in a CREATE TABLE statement to indicate that the database is to provide a value for the column when records are inserted?

A. AUTO_INCREMENT
B. AUTOINCREMENT
C. INSERT_AUTO_PROVIDE
D. ASSERT_UNIQUE<term>B<row>What is the SQL keyword that reconnects rows that have foreign keys with the corresponding data in the table that the foreign key points to?

A. COUNT
B. CONNECT
C. JOIN
D. CONSTRAINT
E. APPEND<term>C<row>What happens when you JOIN two tables together without an ON clause?

A. Leaving out the ON clause when joining two tables in SQLite is a syntax error
B. The rows of the left table are connected to the rows in the right table when their primary key matches
C. You get all of the rows of the left table in the JOIN and NULLs in all of the columns of the right table
D. The number of rows you get is the number of rows in the first table times the number of rows in the second table
E. You get no rows at all<term>D<row>When you are doing a SELECT with a JOIN across multiple tables with identical column names, how do you distinguish the column names?

A. tablename/columnname
B. tablename.columnname
C. tablename['columnname']
D. tablename->columnname<term>B<row>How do we model a many-to-many relationship between two database tables?

A. We add a table with two foreign keys
B. We use the ARRAY column type in both of the tables
C. We add 10 foreign keys to each table with names like artict_id_1, artist_id2, etc.
D. We use a BLOB column in both tables<term>A<row>In Python, what is a database "cursor" most like?

A. A method within a class
B. A Python dictionary
C. A function
D. A file handle<term>D<row>What method do you call in an SQLIte cursor object in Python to run an SQL command?

A. send()
B. execute()
C. socket()
D. run()<term>B<row>In the following SQL,

cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))

what is the purpose of the "?"?

A. It allows more than one boolean operation in the WHERE clause
B. It is a syntax error
C. It is a search wildcard
D. It is a placeholder for the contents of the "org" variable<term>D<row>In the following Python code sequence (assuming cur is a SQLite cursor object),

cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))
row = cur.fetchone()

what is the value in row if no rows match the WHERE clause?

A. An empty list
B. An empty dictionary
C. -1
D. None<term>D<row>What does the LIMIT clause in the following SQL accomplish?

SELECT org, count FROM Counts
ORDER BY count DESC LIMIT 10

A. It only retrieves the first 10 rows from the table
B. It only sorts on the first 10 characters of the column
C. It reverses the sort order if there are more than 10 rows
D. It avoids reading data from any table other than Counts<term>A<row>What does the executescript() method in the Python SQLite cursor object do that the normal execute() method does not do?

A. It allows multiple SQL statements separated by semicolons
B. It allows database tables to be created
C. It allows embeded Python to be executed
D. It allows embedded JavaScript to be executed<term>A<row>What is the purpose of "OR IGNORE" in the following SQL:

INSERT OR IGNORE INTO Course (title) VALUES ( ? )

A. It makes sure that if a particular title is already in the table, there are no duplicate rows inserted
B. It ignores errors in the SQL syntax for the statement
C. It updates the created_at value if the title already exists in the table
D. It ignores any foreign key constraint errors<term>A<row>For the following Python code to work, what must be added to the title column in the CREATE TABLE statement for the Course table:

cur.execute('''INSERT OR IGNORE INTO Course (title) VALUES ( ? )''', ( title, ) )
cur.execute('SELECT id FROM Course WHERE title = ? ', (title, ))
course_id = cur.fetchone()[0]

A. A PRIMARY KEY indication
B. A NOT NULL constraint
C. A UNIQUE constraint
D. An AUTOINCREMENT indication<term>C<row>What do we generally avoid in a many-to-many junction table?

A. An AUTOINCREMENT primary key column
B. A logical key
C. Two foreign keys
D. Data items specific to the many-to-many relationship<term>AB<row>Which of the following lines will never print out regardless of the value of "x"?

if x < 2 :
 print("Below 2")
elif x < 0 :
 print("Negative")
else :
 print("Something else")

A. All the lines will print out
B. Below 2
C. Something else
D. Negative<term>D<row>Which of the following lines will never print out regardless of the value for x?

if x < 2 :
print("Below 2")
elif x < 20 :
print("Below 20")
elif x < 10 :
print("Below 10")
else :
print("Something else")

A. Below 10
B. Below 20
C. Something else
D. Below 2<term>A<row>What would the following Python code sequence print out?

zap = "hello there bob"
print(zap[4])

A. zap
B. e
C. hello
D. o
E. You would get an out-of-range error and the program would fail
F. l<term>D<row>What will the following Python program print out?

def fred():
 print("Zap")

def jane(): 
 print("ABC")

jane()
fred()
jane()

A. Zap Zap Zap
B. ABC Zap ABC
C. Zap ABC Zap
D. Zap ABC jane fred jane
E. ABC Zap jane<term>B<row>Where in the computer is a variable such as "X" stored?

x = 123

A. Central processing unit
B. Output Devices
C. Secondary Memory
D. Input Devices
E. Main Memory<term>E<row>What is the primary use of the Python dictionary?

A. To insure that all Python reserved words are properly spelled
B. To store key / value pairs
C. To look up all of the methods which are available on a Python object
D. To make sure that the definitions of the Python reserved words are available in different languages (French, Spanish, etc)<term>B<row>What does the following Python code print out?

stuff = ['joseph', 'sally', 'walter', 'tim']
print(stuff[2])

A. walter
B. tim
C. sally
D. joseph<term>A<row>What will the following Python program print out? (This is a bit tricky so look carefully).

def hello():
 print("Hello")
 print("There")

x = 10
x = x + 1

A. x = 11
B. Nothing will print
C. 11
D. Hello
There
11<term>B<row>What will the following Python program print out?

x = -1
for value in [3, 41, 12, 9, 74, 15] :
if value > x :
x = value

print(x)

A. 74
B. 9
C. -1
D. 15
E. 3<term>A<row>What will the following Python program print out?

total = 0
for abc in range(5):
 total = total + abc

print(total)

A. 6
B. 16
C. 10
D. 4
E. 5<term>C<row>The following Python code causes a traceback:

(1) a = "123"
(2) b = 456
(3) c = a + b
(4) print(c)

Which line fails with a traceback?

A. 3
B. 1
C. 2
D. 4<term>A<row>In the following example, an error occurs in "line3" that normally causes a traceback if it were not in a try/except.

line1
try:
line2
line3
line4
except:
line5

line6

What is the sequence of lines executed in this program?

A. line1, line2, line3, line5, line6
B. line1, line2, line3, line6
C. line1, line5, line6
D. line1, line4, line5, line6
E. line1, line2, line3, line4, line5, line6<term>A<row>What would the following Python code print out?

abc = "With three words"
stuff = abc.split()
print(stuff)

A. ['With', 'three', 'words']
B. ['With the', 'ee words']
C. ['With three words']
D. ['With', 'three words']
E. ['w', 'i', 't', 'h']<term>A<row>What would the following Python code print out?

abc = "With three words"
stuff = abc.split()
print(len(stuff))

A. 2
B. 1
C. 14
D. 16
E. 3<term>E<row>How is a Python socket different than a Python file handle?

A. Opening a socket will never fail, while opening a file can fail
B. The socket does not read all of the data when it is opened
C. You can read and write using the same socket<term>C<row>In the following XML, what is "type"?

<person>
<name>Chuck</name>
<phone type="intl">
 +1 734 303 4456
</phone>
<email hide="yes" />
</person>

A. An attribute
B. XML syntax error
C. Simple element
D. Tag
E. Complex element
F. Value<term>A<row>Which programming language serves as the basis for the JSON syntax?

A. JavaScript
B. Java
C. PHP
D. Python
E. SCALA<term>A<row>Value of 0113 in DEC ?<term>75<row>Value of 0xA2B in DEC ?<term>2603<row>What is the value of (0113 XOR 0xA2B) in BIN ?<term>1010 0110 1011<row>What is the value of (0113 XOR 0xA2B) in DEC ?<term>2667<row>1. Is Python case sensitive when dealing with identifiers?
a) yes
b) no
c) machine dependent
d) none of the mentioned<term>a<row>2. What is the maximum possible length of an identifier?
a) 31 characters
b) 63 characters
c) 79 characters
d) none of the mentioned<term>d<row>3. Which of the following is invalid?
a) _a = 1
b) __a = 1
c) __str__ = 1
d) none of the mentioned<term>d<row>4. Which of the following is an invalid variable?
a) my_string_1
b) 1st_string
c) foo
d) _<term>b<row>5. Why are local variable names beginning with an underscore discouraged?
a) they are used to indicate a private variables of a class
b) they confuse the interpreter
c) they are used to indicate global variables
d) they slow down execution<term>a<row>6. Which of the following is not a keyword?
a) eval
b) assert
c) nonlocal
d) pass<term>a<row>7. All keywords in Python are in _________
a) lower case
b) UPPER CASE
c) Capitalized
d) None of the mentioned<term>d<row>8. Which of the following is true for variable names in Python?
a) unlimited length
b) all private members must have leading and trailing underscores
c) underscore and ampersand are the only two special characters allowed
d) none of the mentioned<term>a<row>9. Which of the following is an invalid statement?
a) abc = 1,000,000
b) a b c = 1000 2000 3000
c) a,b,c = 1000, 2000, 3000
d) a_b_c = 1,000,000<term>b<row>10. Which of the following cannot be a variable?
a) __init__
b) in
c) it
d) on<term>b<row>1. Which is the correct operator for power(x y )?
a) X^y
b) X**y
c) X^^y
d) None of the mentioned<term>b<row>2. Which one of these is floor division?
a) /
b) //
c) %
d) None of the mentioned<term>b<row>3. What is the order of precedence in python?
i) Parentheses
ii) Exponential
iii) Multiplication
iv) Division
v) Addition
vi) Subtraction
a) i,ii,iii,iv,v,vi
b) ii,i,iii,iv,v,vi
c) ii,i,iv,iii,v,vi
d) i,ii,iii,iv,vi,v<term>a<row>4. What is the answer to this expression, 22 % 3 is?
a) 7
b) 1
c) 0
d) 5<term>b<row>5. Mathematical operations can be performed on a string.
a) True
b) False<term>b<row>6. Operators with the same precedence are evaluated in which manner?
a) Left to Right
b) Right to Left
c) Can't say
d) None of the mentioned<term>a<row>7. What is the output of this expression, 3*1**3?
a) 27
b) 9
c) 3
d) 1<term>c<row>8. Which one of the following has the same precedence level?
a) Addition and Subtraction
b) Multiplication, Division and Addition
c) Multiplication, Division, Addition and Subtraction
d) Addition and Multiplication<term>a<row>9. The expression Int(x) implies that the variable x is converted to integer.
a) True
b) False<term>a<row>10. Which one of the following has the highest precedence in the expression?
a) Exponential
b) Addition
c) Multiplication
d) Parentheses<term>d<row>1. Which of these in not a core data type?
a) Lists
b) Dictionary
c) Tuples
d) Class<term>d<row>2. Given a function that does not return any value, What value is thrown by default when executed in shell.
a) int
b) bool
c) void
d) None<term>d<row>3. What will be the output of the following Python code?
>>>str="hello"
>>>str[:2]
>>>
a) he
b) lo
c) olleh
d) hello<term>a<row>4. Which of the following will run without errors?
a) round(45.8)
b) round(6352.898,2,5)
c) round()
d) round(7463.123,2,1)<term>a<row>5. What is the return type of function id?
a) int
b) float
c) bool
d) dict<term>a<row>6. In python we do not specify types, it is directly interpreted by the compiler, so consider the following operation to be performed.
>>>x = 13 ? 2
objective is to make sure x has a integer value, select all that apply (python 3.xx)
a) x = 13 // 2
b) x = int(13 / 2)
c) x = 13 % 2
d) All of the mentioned<term>d<row>7. What error occurs when you execute the following Python code snippet?
apple = mango
a) SyntaxError
b) NameError
c) ValueError
d) TypeError<term>b<row>8. What will be the output of the following Python code snippet?
def example(a):
 a = a + '2'
 a = a*2
 return a
>>>example("hello")
a) indentation Error
b) cannot perform mathematical operation on strings
c) hello2
d) hello2hello2<term>a<row>9. What data type is the object below?
L = [1, 23, 'hello', 1]
a) list
b) dictionary
c) array
d) tuple<term>a<row>10. In order to store values in terms of key and value we use what core data type.
a) list
b) tuple
c) class
d) dictionary<term>d<row>11. Which of the following results in a SyntaxError?
a) '"Once upon a time...", she said.'
b) "He said, 'Yes!'"
c) '3\'
d) "'That's okay"'<term>c<row>12. The following is displayed by a print function call. Select all of the function calls that result in this output.
tom
dick
harry
a)
print('''tom
\ndick
\nharry''')
b) print("'tomdickharry"')
c) print('tom\ndick\nharry')
d)
print('tom
dick
harry')<term>c<row>13. What is the average value of the following Python code snippet?
>>>grade1 = 80
>>>grade2 = 90
>>>average = (grade1 + grade2) / 2
a) 85.0
b) 85.1
c) 95.0
d) 95.1<term>a<row>14. Select all options that print.
hello-how-are-you
a) print('hello', 'how', 'are', 'you')
b) print('hello', 'how', 'are', 'you' + '-' * 4)
c) print('hello-' + 'how-are-you')
d) print('hello' + '-' + 'how' + '-' + 'are' + 'you')<term>c<row>15. What is the return value of trunc()?
a) int
b) bool
c) float
d) None<term>a<row>1. What is the output of print 0.1 + 0.2 == 0.3?
a) True
b) False
c) Machine dependent
d) Error<term>b<row>2. Which of the following is not a complex number?
a) k = 2 + 3j
b) k = complex(2, 3)
c) k = 2 + 3l
d) k = 2 + 3J<term>c<row>3. What is the type of inf?
a) Boolean
b) Integer
c) Float
d) Complex<term>c<row>4. What does ~4 evaluate to?
a) -5
b) -4
c) -3
d) +3<term>a<row>5. What does ~~~~~~5 evaluate to?
a) +5
b) -11
c) +11
d) -5<term>a<row>~~x = - (-(x+1) + 1) = (x+1) - 1 = x
~~x is equivalent to x
Extrapolating further ~~~~~~x would be same as x in the final result.
In the question, x value is given as 5 and "~" is repeated 6 times. So, the correct answer for "~~~~~~5" is 5.
6. Which of the following is incorrect?
a) x = 0b101
b) x = 0x4f5
c) x = 19023
d) x = 03964<term>d<row>7. What is the result of cmp(3, 1)?
a) 1
b) 0
c) True
d) False<term>a<row>8. Which of the following is incorrect?
a) float('inf')
b) float('nan')
c) float('56'+'78')
d) float('12+34′)<term>d<row>9. What is the result of round(0.5) - round(-0.5)?
a) 1.0
b) 2.0
c) 0.0
d) Value depends on Python version<term>d<row>Here's the runtime output for Python version 2.7 interpreter.
$ python
Python 2.7.17 (default, Nov 7 2019, 10:07:09)
>>> round(0.5)
1.0
>>> round(-0.5)
-1.0
>>>
In the above output, you can see that the round() functions on 0.5 and -0.5 are moving away from 0 and hence " round(0.5) - (round(-0.5)) = 1 - (-1) = 2 "
Here's the runtime output for Python version 3.6 interpreter.
$ python3
Python 3.6.8 (default, Oct 7 2019, 12:59:55)
>>> round(0.5)
0
>>> round(-0.5)
0
>>> round(2.5)
2
>>> round(3.5)
4
>>>
In the above output, you can see that the round() functions on 0.5 and -0.5 are moving towards 0 and hence " round(0.5) - (round(-0.5)) = 0 - 0 = 0 ". Also note that the round(2.5) is 2 (which is an even number) whereas round(3.5) is 4 (which is an even number).
10. What does 3 ^ 4 evaluate to?
a) 81
b) 12
c) 0.75
d) 7<term>d<row>1. The value of the expressions 4/(3*(2-1)) and 4/3*(2-1) is the same.
a) True
b) False<term>a<row>2. What will be the value of the following Python expression?
4 + 3 % 5
a) 4
b) 7
c) 2
d) 0<term>b<row>3. Evaluate the expression given below if A = 16 and B = 15.
A % B // A
a) 0.0
b) 0
c) 1.0
d) 1<term>b<row>4. Which of the following operators has its associativity from right to left?
a) +
b) //
c) %
d) **<term>d<row>5. What will be the value of x in the following Python expression?
x = int(43.55+2/2)
a) 43
b) 44
c) 22
d) 23<term>b<row>6. What is the value of the following expression?
2+4.00, 2**4.0
a) (6.0, 16.0)
b) (6.00, 16.00)
c) (6, 16)
d) (6.00, 16.0)<term>a<row>7. Which of the following is the truncation division operator?
a) /
b) %
c) //
d) |<term>c<row>8. What are the values of the following Python expressions?
 2**(3**2)
 (2**3)**2
 2**3**2
a) 64, 512, 64
b) 64, 64, 64
c) 512, 512, 512
d) 512, 64, 512<term>d<row>9. What is the value of the following expression?
8/4/2, 8/(4/2)
a) (1.0, 4.0)
b) (1.0, 1.0)
c) (4.0. 1.0)
d) (4.0, 4.0)<term>a<row>10. What is the value of the following expression?
float(22//3+3/3)
a) 8
b) 8.0
c) 8.3
d) 8.33<term>b<row>1. What will be the output of the following Python expression?
print(4.00/(2.0+2.0))
a) Error
b) 1.0
c) 1.00
d) 1<term>b<row>2. What will be the value of X in the following Python expression?
X = 2+9*((3*12)-8)/10
a) 30.0
b) 30.8
c) 28.4
d) 27.2<term>d<row>3. Which of the following expressions involves coercion when evaluated in Python?
a) 4.7 - 1.5
b) 7.9 * 6.3
c) 1.7 % 2
d) 3.4 + 4.6<term>c<row>4. What will be the output of the following Python expression?
24//6%3, 24//4//2
a) (1,3)
b) (0,3)
c) (1,0)
d) (3,1)<term>a<row>5. Which among the following list of operators has the highest precedence?
 +, -, **, %, /, <<, >>, |
a) <<, >>
b) **
c) |
d) %<term>b<row>6. What will be the value of the following Python expression?
float(4+int(2.39)%2)
a) 5.0
b) 5
c) 4.0
d) 4<term>c<row>7. Which of the following expressions is an example of type conversion?
a) 4.0 + float(3)
b) 5.3 + 6.3
c) 5.0 + 3
d) 3 + 7<term>a<row>8. Which of the following expressions results in an error?
a) float('10')
b) int('10')
c) float('10.8')
d) int('10.8')<term>d<row>9. What will be the value of the following Python expression?
4+2**5//10
a) 3
b) 7
c) 77
d) 0<term>b<row>10. The expression 2**2**3 is evaluates as: (2**2)**3.
a) True
b) False<term>b<row>1. What will be the output of the following Python code snippet if x=1?
x<<2
a) 8
b) 1
c) 2
d) 4<term>d<row>2. What will be the output of the following Python expression?
bin(29)
a) '0b10111'
b) '0b11101'
c) '0b11111'
d) '0b11011'<term>b<row>3. What will be the value of x in the following Python expression, if the result of that expression is 2?
x>>2
a) 8
b) 4
c) 2
d) 1<term>a<row>4. What will be the output of the following Python expression?
int(1011)?
a) 1011
b) 11
c) 13
d) 1101<term>a<row>5. To find the decimal value of 1111, that is 15, we can use the function:
a) int(1111,10)
b) int('1111',10)
c) int(1111,2)
d) int('1111',2)<term>d<row>6. What will be the output of the following Python expression if x=15 and y=12?
x & y
a) b1101
b) 0b1101
c) 12
d) 1101<term>c<row>7. Which of the following expressions results in an error?
a) int(1011)
b) int('1011',23)
c) int(1011,2)
d) int('1011')<term>c<row>8. Which of the following represents the bitwise XOR operator?
a) &
b) ^
c) |
d) !<term>b<row>9. What is the value of the following Python expression?
bin(0x8)
a) '0bx1000'
b) 8
c) 1000
d) '0b1000'<term>d<row>10. What will be the output of the following Python expression?
0x35 | 0x75
a) 115
b) 116
c) 117
d) 118<term>c<row>1. It is not possible for the two's complement value to be equal to the original value in any case.
a) True
b) False<term>b<row>2. The one's complement of 110010101 is:
a) 001101010
b) 110010101
c) 001101011
d) 110010100<term>a<row>3. Bitwise _________ gives 1 if either of the bits is 1 and 0 when both of the bits are 1.
a) OR
b) AND
c) XOR
d) NOT<term>c<row>4. What will be the output of the following Python expression?
4^12
a) 2
b) 4
c) 8
d) 12<term>c<row>5. Any odd number on being AND-ed with ________ always gives 1. Hint: Any even number on being AND-ed with this value always gives 0.
a) 10
b) 2
c) 1
d) 0<term>c<row>6. What will be the value of the following Python expression?
 bin(10-2)+bin(12^4)
a) 0b10000
b) 0b10001000
c) 0b1000b1000
d) 0b10000b1000<term>d<row>7. Which of the following expressions can be used to multiply a given number 'a' by 4?
a) a<<2
b) a<<4
c) a>>2
d) a>>4<term>a<row>8. What will be the output of the following Python code if a=10 and b =20?
a=10
b=20
a=a^b
b=a^b
a=a^b
print(a,b)
a) 10 20
b) 10 10
c) 20 10
d) 20 20<term>c<row>9. What is the two's complement of -44?
a) 1011011
b) 11010100
c) 11101011
d) 10110011<term>b<row>10. What will be the output of the following Python expression?
~100?
a) 101
b) -101
c) 100
d) -100<term>b<row>1. What will be the output of the following Python code snippet?
bool('False')
bool()
a)
 True 
 True
b)
 False
 True
c)
 False
 False
d)
 True
 False<term>d<row>2. What will be the output of the following Python code snippet?
['hello', 'morning'][bool('')]
a) error
b) no output
c) hello
d) morning<term>c<row>3. What will be the output of the following Python code snippet?
not(3>4)
not(1&1)
a)
 True
 True
b)
 True
 False
c)
 False
 True
d)
 False
 False<term>b<row>4. What will be the output of the following Python code?
['f', 't'][bool('spam')]
a) t
b) f
c) No output
d) Error<term>a<row>5. What will be the output of the following Python code?
l=[1, 0, 2, 0, 'hello', '', []]
list(filter(bool, l))
a) Error
b) [1, 0, 2, 0, 'hello', ", []]
c) [1, 0, 2, 'hello', ", []]
d) [1, 2, 'hello']<term>d<row>6. What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)?
[] or {}
{} or []
a)
 []
 {}
b)
 []
 []
c)
 {}
 []
d)
 {}
 {}<term>c<row>7. What will be the output of the following Python code?
class Truth:
 pass
x=Truth()
bool(x)
a) pass
b) true
c) false
d) error<term>b<row>8. What will be the output of the following Python code?
if (9 < 0) and (0 < -9):
 print("hello")
elif (9 > 0) or False:
 print("good")
else:
 print("bad")
a) error
b) hello
c) good
d) bad<term>c<row>9. Which of the following Boolean expressions is not logically equivalent to the other three?
a) not(-6<0 or-6>10)
b) -6>=0 and -6<=10
c) not(-6<10 or-6==10)
d) not(-6>10 or-6==10)<term>d<row>The expression -6>=0 and -6<=10 returns the output False.
The expression not(-6<10 or -6==10) returns the output False.
The expression not(-6>10 or -6==10) returns the output True.
10. What will be the output of the following Python code snippet?
not(10<20) and not(10>30)
a) True
b) False
c) Error
d) No output<term>b<row>1. What will be the output of the following Python code snippet?
X="hi"
print("05d"%X)
a) 00000hi
b) 000hi
c) hi000
d) error<term>d<row>2. What will be the output of the following Python code snippet?
X="san-foundry"
print("%56s",X)
a) 56 blank spaces before san-foundry
b) 56 blank spaces before san and foundry
c) 56 blank spaces after san-foundry
d) no change<term>a<row>3. What will be the output of the following Python expression if x=456?
print("%-06d"%x)
a) 000456
b) 456000
c) 456
d) error<term>c<row>4. What will be the output of the following Python expression if X=345?
print("%06d"%X)
a) 345000
b) 000345
c) 000000345
d) 345000000<term>b<row>5. Which of the following formatting options can be used in order to add 'n' blank spaces after a given string 'S'?
a) print("-ns"%S)
b) print("-ns"%S)
c) print("%ns"%S)
d) print("%-ns"%S)<term>d<row>6. What will be the output of the following Python expression if X = -122?
print("-%06d"%x)
a) -000122
b) 000122
c) -00122
d) -00122<term>c<row>7. What will be the output of the following Python expression if the value of x is 34?
print("%f"%x)
a) 34.00
b) 34.0000
c) 34.000000
d) 34.00000000<term>c<row>8. What will be the output of the following Python expression if x=56.236?
print("%.2f"%x)
a) 56.00
b) 56.24
c) 56.23
d) 0056.236<term>b<row>9. What will be the output of the following Python expression if x=22.19?
print("%5.2f"%x)
a) 22.1900
b) 22.00000
c) 22.19
d) 22.20<term>c<row>10. The expression shown below results in an error.
print("-%5d0",989)
a) True
b) False<term>b<row>1. What will be the output of the following Python code snippet?
'%d %s %g you' %(1, 'hello', 4.0)
a) Error
b) 1 hello you 4.0
c) 1 hello 4 you
d) 1 4 hello you<term>c<row>2. The output of which of the codes shown below will be: "There are 4 blue birds."?
a) 'There are %g %d birds.' %4 %blue
b) 'There are %d %s birds.' %(4, blue)
c) 'There are %s %d birds.' %[4, blue]
d) 'There are %d %s birds.' 4, blue<term>b<row>3. What will be the output of the python code shown below for various styles of format specifiers?
x=1234
res='integers:...%d...%-6d...%06d' %(x, x, x)
res
a) 'integers:...1234...1234 ...001234'
b) 'integers...1234...1234...123400'
c) 'integers:... 1234...1234...001234'
d) 'integers:...1234...1234...001234'<term>a<row>4. What will be the output of the following Python code snippet?
x=3.3456789
'%f | %e | %g' %(x, x, x)
a) Error
b) '3.3456789 | 3.3456789+00 | 3.345678'
c) '3.345678 | 3.345678e+0 | 3.345678'
d) '3.345679 | 3.345679e+00 | 3.34568'<term>d<row>5. What will be the output of the following Python code snippet?
x=3.3456789
'%-6.2f | %05.2f | %+06.1f' %(x, x, x)
a) '3.35 | 03.35 | +003.3'
b) '3.3456789 | 03.3456789 | +03.3456789'
c) Error
d) '3.34 | 03.34 | 03.34+'<term>a<row>6. What will be the output of the following Python code snippet?
x=3.3456789
'%s' %x, str(x)
a) Error
b) ('3.3456789', '3.3456789')
c) (3.3456789, 3.3456789)
d) ('3.3456789', 3.3456789)<term>b<row>7. What will be the output of the following Python code snippet?
'%(qty)d more %(food)s' %{'qty':1, 'food': 'spam'}
a) Error
b) No output
c) '1 more foods'
d) '1 more spam'<term>d<row>8. What will be the output of the following Python code snippet?
a='hello'
q=10
vars()
a) {'a' : 'hello', 'q' : 10, ........plus built-in names set by Python....}
b) {......Built in names set by Python......}
c) {'a' : 'hello', 'q' : 10}
d) Error<term>a<row>9. What will be the output of the following Python code?
s='{0}, {1}, and {2}'
s.format('hello', 'good', 'morning')
a) 'hello good and morning'
b) 'hello, good, morning'
c) 'hello, good, and morning'
d) Error<term>c<row>10. What will be the output of the following Python code?
s='%s, %s & %s'
s%('mumbai', 'kolkata', 'delhi')
a) mumbai kolkata & delhi
b) Error
c) No output
d) 'mumbai, kolkata & delhi'<term>d<row>11. What will be the output of the following Python code?
t = '%(a)s, %(b)s, %(c)s'
t % dict(a='hello', b='world', c='universe')
a) 'hello, world, universe'
b) 'hellos, worlds, universes'
c) Error
d) hellos, world, universe<term>a<row>'hello, world, universe'.
12. What will be the output of the following Python code?
'{a}, {0}, {abc}'.format(10, a=2.5, abc=[1, 2])
a) Error
b) '2.5, 10, [1, 2]'
c) 2.5, 10, 1, 2
d) '10, 2.5, [1, 2]'<term>b<row>13. What will be the output of the following Python code?
'{0:.2f}'.format(1.234)
a) '1'
b) '1.234'
c) '1.23'
d) '1.2'<term>c<row>14. What will be the output of the following Python code?
'%x %d' %(255, 255)
a) 'ff, 255'
b) '255, 255'
c) '15f, 15f'
d) Error<term>a<row>15. The output of the two codes shown below is the same.
i. '{0:.2f}'.format(1/3.0)
ii. '%.2f'%(1/3.0)
a) True
b) False<term>a<row>1. What will be the output of the following Python code?
l=list('HELLO')
'first={0[0]}, third={0[2]}'.format(l)
a) 'first=H, third=L'
b) 'first=0, third=2'
c) Error
d) 'first=0, third=L'<term>a<row>2. What will be the output of the following Python code?
l=list('HELLO')
p=l[0], l[-1], l[1:3]
'a={0}, b={1}, c={2}'.format(*p)
a) Error
b) "a='H', b='O', c=(E, L)"
c) "a=H, b=O, c=['E', 'L']"
d) Junk value<term>c<row>3. The formatting method {1:<10} represents the ___________ positional argument, _________ justified in a 10 character wide field.
a) first, right
b) second, left
c) first, left
d) second, right<term>b<row>4. What will be the output of the following Python code?
hex(255), int('FF', 16), 0xFF
a) [0xFF, 255, 16, 255]
b) ('0xff', 155, 16, 255)
c) Error
d) ('0xff', 255, 255)<term>d<row>5. The output of the two codes shown below is the same.
i. bin((2**16)-1)
ii. '{}'.format(bin((2**16)-1))
a) True
b) False<term>a<row>6. What will be the output of the following Python code?
'{a}{b}{a}'.format(a='hello', b='world')
a) 'hello world'
b) 'hello' 'world' 'hello'
c) 'helloworldhello'
d) 'hello' 'hello' 'world'<term>c<row>7. What will be the output of the following Python code?
 D=dict(p='san', q='foundry')
'{p}{q}'.format(**D)
a) Error
b) sanfoundry
c) san foundry
d) {'san', 'foundry'}<term>b<row>8. What will be the output of the following Python code?
'The {} side {1} {2}'.format('bright', 'of', 'life')
a) Error
b) 'The bright side of life'
c) 'The {bright} side {of} {life}'
d) No output<term>a<row>9. What will be the output of the following Python code?
'{0:f}, {1:2f}, {2:05.2f}'.format(1.23456, 1.23456, 1.23456)
a) Error
b) '1.234560, 1.22345, 1.23'
c) No output
d) '1.234560, 1.234560, 01.23'<term>d<row>10. What will be the output of the following Python code?
'%.2f%s' % (1.2345, 99)
a) '1.2345', '99'
b) '1.2399'
c) '1.234599'
d) 1.23, 99<term>b<row>11. What will be the output of the following Python code?
'%s' %((1.23,),)
a) '(1.23,)'
b) 1.23,
c) (,1.23)
d) '1.23'<term>a<row>12. What will be the output of the following two codes?
i. '{0}'.format(4.56)
ii. '{0}'.format([4.56,])
a) '4.56', '4.56,'
b) '4.56', '[4.56]'
c) 4.56, [4.56,]
d) 4.56, [4.56,]<term>b<row>'4.56', '[4.56]'
1. What will be the output of the following Python code?
def mk(x):
 def mk1():
 print("Decorated")
 x()
 return mk1
def mk2():
 print("Ordinary")
p = mk(mk2)
p()
a)
 Decorated
 Decorated
b)
 Ordinary
 Ordinary
c)
 Ordinary
 Decorated
d)
 Decorated
 Ordinary<term>d<row>Decorated
Ordinary.
2. In the following Python code, which function is the decorator?
def mk(x):
 def mk1():
 print("Decorated")
 x()
 return mk1
def mk2():
 print("Ordinary")
p = mk(mk2)
p()
a) p()
b) mk()
c) mk1()
d) mk2()<term>b<row>3. The ______ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function.
a) #
b) $
c) @
d) &<term>c<row>4. What will be the output of the following Python code?
def ordi():
 print("Ordinary")
ordi
ordi()
a)
 Address
 Ordinary
b)
 Error
 Address
c)
 Ordinary
 Ordinary
d)
 Ordinary
 Address<term>a<row>Address
Ordinary.
5. The two snippets of the following Python codes are equivalent.
CODE 1
 @f
def f1():
 print("Hello")
CODE 2
 def f1():
 print("Hello")
f1 = f(f1)
a) True
b) False<term>a<row>6. What will be the output of the following Python function?
def f(p, q):
 return p%q
f(0, 2)
f(2, 0)
a)
 0
 0
b)
 Zero Division Error
 Zero Division Error
c)
 0
 Zero Division Error
d)
 Zero Division Error
 0<term>c<row>7. What will be the output of the following Python code?
def f(x):
 def f1(a, b):
 print("hello")
 if b==0:
 print("NO")
 return
 return f(a, b)
 return f1
@f
def f(a, b):
 return a%b
f(4,0)
a)
 hello
 NO
b)
 hello
 Zero Division Error
c) NO
d) hello<term>a<row>hello
 NO
8. What will be the output of the following Python code?
def f(x):
 def f1(*args, **kwargs):
 print("*"* 5)
 x(*args, **kwargs)
 print("*"* 5)
 return f1
def a(x):
 def f1(*args, **kwargs):
 print("%"* 5)
 x(*args, **kwargs)
 print("%"* 5)
 return f1
@f
@a
def p(m):
 print(m)
p("hello")
a)
 *****
 %%%%%
 hello
 %%%%%
 *****
b) Error
c) *****%%%%%hello%%%%%*****
d) hello<term>a<row>*****
 %%%%%
 hello
 %%%%%
 *****
9. The following python code can work with ____ parameters.
def f(x):
 def f1(*args, **kwargs):
 print("Sanfoundry")
 return x(*args, **kwargs)
 return f1
a) 2
b) 1
c) any number of
d) 0<term>c<row>10. What will be the output of the following Python code?
def f(x):
 def f1(*args, **kwargs):
 print("*", 5)
 x(*args, **kwargs)
 print("*", 5)
 return f1
@f
def p(m):
 p(m)
print("hello")
a)
 *****
 hello
b)
 *****
 *****
 hello
c) *****
d) hello<term>d<row>11. A function with parameters cannot be decorated.
a) True
b) False<term>b<row>12. Identify the decorator in the snippet of code shown below.
def sf():
 pass
sf = mk(sf)
@f
def sf():
 return
a) @f
b) f
c) sf()
d) mk<term>d<row>13. What will be the output of the following Python code?
class A:
 @staticmethod
 def a(x):
 print(x)
A.a(100)
a) Error
b) Warning
c) 100
d) No output<term>c<row>14. What will be the output of the following Python code?
def d(f):
 def n(*args):
 return '$' + str(f(*args))
 return n
@d
def p(a, t):
 return a + a*t 
print(p(100,0))
a) 100
b) $100
c) $0
d) 0<term>b<row>15. What will be the output of the following Python code?
def c(f):
 def inner(*args, **kargs):
 inner.co += 1
 return f(*args, **kargs)
 inner.co = 0
 return inner
@c
def fnc():
 pass
if __name__ == '__main__':
 fnc()
 fnc()
 fnc()
 print(fnc.co)
a) 4
b) 3
c) 0
d) 1<term>b<row>1. What will be the output of the following Python code?
x = ['ab', 'cd']
for i in x:
 i.upper()
print(x)
a) ['ab', 'cd']
b) ['AB', 'CD']
c) [None, None]
d) none of the mentioned<term>a<row>2. What will be the output of the following Python code?
x = ['ab', 'cd']
for i in x:
 x.append(i.upper())
print(x)
a) ['AB', 'CD']
b) ['ab', 'cd', 'AB', 'CD']
c) ['ab', 'cd']
d) none of the mentioned<term>d<row>3. What will be the output of the following Python code?
i = 1
while True:
 if i%3 == 0:
 break
 print(i)
 
 i + = 1
a) 1 2
b) 1 2 3
c) error
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
i = 1
while True:
 if i%0O7 == 0:
 break
 print(i)
 i += 1
a) 1 2 3 4 5 6
b) 1 2 3 4 5 6 7
c) error
d) none of the mentioned<term>a<row>5. What will be the output of the following Python code?
i = 5
while True:
 if i%0O11 == 0:
 break
 print(i)
 i += 1
a) 5 6 7 8 9 10
b) 5 6 7 8
c) 5 6
d) error<term>b<row>6. What will be the output of the following Python code?
i = 5
while True:
 if i%0O9 == 0:
 break
 print(i)
 i += 1
a) 5 6 7 8
b) 5 6 7 8 9
c) 5 6 7 8 9 10 11 12 13 14 15 ....
d) error<term>d<row>7. What will be the output of the following Python code?
i = 1
while True:
 if i%2 == 0:
 break
 print(i)
 i += 2
a) 1
b) 1 2
c) 1 2 3 4 5 6 ...
d) 1 3 5 7 9 11 ...<term>d<row>8. What will be the output of the following Python code?
i = 2
while True:
 if i%3 == 0:
 break
 print(i)
 i += 2
a) 2 4 6 8 10 ...
b) 2 4
c) 2 3
d) error<term>b<row>9. What will be the output of the following Python code?
i = 1
while False:
 if i%2 == 0:
 break
 print(i)
 i += 2
a) 1
b) 1 3 5 7 ...
c) 1 2 3 4 ...
d) none of the mentioned<term>d<row>10. What will be the output of the following Python code?
True = False
while True:
 print(True)
 break
a) True
b) False
c) None
d) none of the mentioned<term>d<row>1. What will be the output of the following Python code?
i = 0
while i < 5:
 print(i)
 i += 1
 if i == 3:
 break
else:
 print(0)
a) 0 1 2 0
b) 0 1 2
c) error
d) none of the mentioned<term>b<row>2. What will be the output of the following Python code?
i = 0
while i < 3:
 print(i)
 i += 1
else:
 print(0)
a) 0 1 2 3 0
b) 0 1 2 0
c) 0 1 2
d) error<term>b<row>3. What will be the output of the following Python code?
x = "abcdef"
while i in x:
 print(i, end=" ")
a) a b c d e f
b) abcdef
c) i i i i i i ...
d) error<term>d<row>4. What will be the output of the following Python code?
x = "abcdef"
i = "i"
while i in x:
 print(i, end=" ")
a) no output
b) i i i i i i ...
c) a b c d e f
d) abcdef<term>a<row>5. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x:
 print(i, end = " ")
a) no output
b) i i i i i i ...
c) a a a a a a ...
d) a b c d e f<term>c<row>6. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x:
 print('i', end = " ")
a) no output
b) i i i i i i ...
c) a a a a a a ...
d) a b c d e f<term>b<row>7. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x:
 x = x[:-1]
 print(i, end = " ")
a) i i i i i i
b) a a a a a a
c) a a a a a
d) none of the mentioned<term>b<row>8. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x[:-1]:
 print(i, end = " ")
a) a a a a a
b) a a a a a a
c) a a a a a a ...
d) a<term>c<row>9. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x:
 x = x[1:]
 print(i, end = " ")
a) a a a a a a
b) a
c) no output
d) error<term>b<row>10. What will be the output of the following Python code?
x = "abcdef"
i = "a"
while i in x[1:]:
 print(i, end = " ")
a) a a a a a a
b) a
c) no output
d) error<term>c<row>1. What will be the output of the following Python code?
x = 'abcd'
for i in x:
 print(i)
 x.upper()
a) a B C D
b) a b c d
c) A B C D
d) error<term>b<row>2. What will be the output of the following Python code?
x = 'abcd'
for i in x:
 print(i.upper())
a) a b c d
b) A B C D
c) a B C D
d) error<term>b<row>3. What will be the output of the following Python code?
x = 'abcd'
for i in range(x):
 print(i)
a) a b c d
b) 0 1 2 3
c) error
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
x = 'abcd'
for i in range(len(x)):
 print(i)
a) a b c d
b) 0 1 2 3
c) error
d) 1 2 3 4<term>b<row>5. What will be the output of the following Python code?
x = 'abcd'
for i in range(len(x)):
 print(i.upper())
a) a b c d
b) 0 1 2 3
c) error
d) 1 2 3 4<term>c<row>6. What will be the output of the following Python code snippet?
x = 'abcd'
for i in range(len(x)):
 i.upper()
print (x)
a) a b c d
b) 0 1 2 3
c) error
d) none of the mentioned<term>c<row>7. What will be the output of the following Python code snippet?
x = 'abcd'
for i in range(len(x)):
 x[i].upper()
print (x)
a) abcd
b) ABCD
c) error
d) none of the mentioned<term>a<row>8. What will be the output of the following Python code snippet?
x = 'abcd'
for i in range(len(x)):
 i[x].upper()
print (x)
a) abcd
b) ABCD
c) error
d) none of the mentioned<term>c<row>9. What will be the output of the following Python code snippet?
x = 'abcd'
for i in range(len(x)):
 x = 'a'
 print(x)
a) a
b) abcd abcd abcd
c) a a a a
d) none of the mentioned<term>c<row>10. What will be the output of the following Python code snippet?
x = 'abcd'
for i in range(len(x)):
 print(x)
 x = 'a'
a) a
b) abcd abcd abcd abcd
c) a a a a
d) none of the mentioned<term>d<row>1. What will be the output of the following Python code?
x = 123
for i in x:
 print(i)
a) 1 2 3
b) 123
c) error
d) none of the mentioned<term>c<row>2. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for i in d:
 print(i)
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>a<row>3. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for x, y in d:
 print(x, y)
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>d<row>4. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for x, y in d.items():
 print(x, y)
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>c<row>5. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for x in d.keys():
 print(d[x])
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>b<row>6. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for x in d.values():
 print(x)
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>b<row>7. What will be the output of the following Python code?
d = {0: 'a', 1: 'b', 2: 'c'}
for x in d.values():
 print(d[x])
a) 0 1 2
b) a b c
c) 0 a 1 b 2 c
d) none of the mentioned<term>d<row>8. What will be the output of the following Python code?
d = {0, 1, 2}
for x in d.values():
 print(x)
a) 0 1 2
b) None None None
c) error
d) none of the mentioned<term>c<row>9. What will be the output of the following Python code?
d = {0, 1, 2}
for x in d:
 print(x)
a) 0 1 2
b) {0, 1, 2} {0, 1, 2} {0, 1, 2}
c) error
d) none of the mentioned<term>a<row>10. What will be the output of the following Python code?
d = {0, 1, 2}
for x in d:
 print(d.add(x))
a) 0 1 2
b) 0 1 2 0 1 2 0 1 2 ...
c) None None None
d) None of the mentioned<term>c<row>11. What will be the output of the following Python code?
for i in range(0):
 print(i)
a) 0
b) no output
c) error
d) none of the mentioned<term>b<row>1. What will be the output of the following Python code?
for i in range(2.0):
 print(i)
a) 0.0 1.0
b) 0 1
c) error
d) none of the mentioned<term>c<row>2. What will be the output of the following Python code?
for i in range(int(2.0)):
 print(i)
a) 0.0 1.0
b) 0 1
c) error
d) none of the mentioned<term>b<row>3. What will be the output of the following Python code?
for i in range(float('inf')):
 print (i)
a) 0.0 0.1 0.2 0.3 ...
b) 0 1 2 3 ...
c) 0.0 1.0 2.0 3.0 ...
d) none of the mentioned<term>d<row>4. What will be the output of the following Python code?
for i in range(int(float('inf'))):
 print (i)
a) 0.0 0.1 0.2 0.3 ...
b) 0 1 2 3 ...
c) 0.0 1.0 2.0 3.0 ...
d) none of the mentioned<term>d<row>5. What will be the output of the following Python code snippet?
for i in [1, 2, 3, 4][::-1]:
 print (i)
a) 1 2 3 4
b) 4 3 2 1
c) error
d) none of the mentioned<term>b<row>6. What will be the output of the following Python code snippet?
for i in ''.join(reversed(list('abcd'))):
 print (i)
a) a b c d
b) d c b a
c) error
d) none of the mentioned<term>b<row>7. What will be the output of the following Python code snippet?
for i in 'abcd'[::-1]:
 print (i)
a) a b c d
b) d c b a
c) error
d) none of the mentioned<term>b<row>8. What will be the output of the following Python code snippet?
for i in '':
 print (i)
a) None
b) (nothing is printed)
c) error
d) none of the mentioned<term>b<row>9. What will be the output of the following Python code snippet?
x = 2
for i in range(x):
 x += 1
 print (x)
a) 0 1 2 3 4 ...
b) 0 1
c) 3 4
d) 0 1 2 3<term>c<row>10. What will be the output of the following Python code snippet?
x = 2
for i in range(x):
 x -= 2
 print (x)
a) 0 1 2 3 4 ...
b) 0 -2
c) 0
d) error<term>b<row>1. What will be the output of the following Python code?
for i in range(10):
 if i == 5:
 break
 else:
 print(i)
else:
 print("Here")
a) 0 1 2 3 4 Here
b) 0 1 2 3 4 5 Here
c) 0 1 2 3 4
d) 1 2 3 4 5<term>c<row>2. What will be the output of the following Python code?
for i in range(5):
 if i == 5:
 break
 else:
 print(i)
else:
 print("Here")
a) 0 1 2 3 4 Here
b) 0 1 2 3 4 5 Here
c) 0 1 2 3 4
d) 1 2 3 4 5<term>a<row>3. What will be the output of the following Python code?
x = (i for i in range(3))
for i in x:
 print(i)
a) 0 1 2
b) error
c) 0 1 2 0 1 2
d) none of the mentioned<term>a<row>4. What will be the output of the following Python code?
x = (i for i in range(3))
for i in x:
 print(i)
for i in x:
 print(i)
a) 0 1 2
b) error
c) 0 1 2 0 1 2
d) none of the mentioned<term>a<row>5. What will be the output of the following Python code?
string = "my name is x"
for i in string:
 print (i, end=", ")
a) m, y, , n, a, m, e, , i, s, , x,
b) m, y, , n, a, m, e, , i, s, , x
c) my, name, is, x,
d) error<term>a<row>6. What will be the output of the following Python code?
string = "my name is x"
for i in string.split():
 print (i, end=", ")
a) m, y, , n, a, m, e, , i, s, , x,
b) m, y, , n, a, m, e, , i, s, , x
c) my, name, is, x,
d) error<term>c<row>7. What will be the output of the following Python code snippet?
a = [0, 1, 2, 3]
for a[-1] in a:
 print(a[-1])
a) 0 1 2 3
b) 0 1 2 2
c) 3 3 3 3
d) error<term>b<row>8. What will be the output of the following Python code snippet?
a = [0, 1, 2, 3]
for a[0] in a:
 print(a[0])
a) 0 1 2 3
b) 0 1 2 2
c) 3 3 3 3
d) error<term>a<row>9. What will be the output of the following Python code snippet?
a = [0, 1, 2, 3]
i = -2
for i not in a:
 print(i)
 i += 1
a) -2 -1
b) 0
c) error
d) none of the mentioned<term>c<row>10. What will be the output of the following Python code snippet?
string = "my name is x"
for i in ' '.join(string.split()):
 print (i, end=", ")
a) m, y, , n, a, m, e, , i, s, , x,
b) m, y, , n, a, m, e, , i, s, , x
c) my, name, is, x,
d) error<term>a<row>1. What will be the output of the following Python statement?
>>>"a"+"bc"
a) a
b) bc
c) bca
d) abc<term>d<row>2. What will be the output of the following Python statement?
>>>"abcd"[2:]
a) a
b) ab
c) cd
d) dc<term>c<row>3. The output of executing string.ascii_letters can also be achieved by:
a) string.ascii_lowercase_string.digits
b) string.ascii_lowercase+string.ascii_uppercase
c) string.letters
d) string.lowercase_string.uppercase<term>b<row>4. What will be the output of the following Python code?
>>> str1 = 'hello'
>>> str2 = ','
>>> str3 = 'world'
>>> str1[-1:]
a) olleh
b) hello
c) h
d) o<term>d<row>5. What arithmetic operators cannot be used with strings?
a) +
b) *
c) -
d) All of the mentioned<term>c<row>6. What will be the output of the following Python code?
>>>print (r"\nhello")
a) a new line and hello
b) \nhello
c) the letter r and then hello
d) error<term>b<row>7. What will be the output of the following Python statement?
>>>print('new' 'line')
a) Error
b) Output equivalent to print 'new\nline'
c) newline
d) new line<term>c<row>8. What will be the output of the following Python statement?
>>> print('x\97\x98')
a) Error
b)
 97
 98
c) x\97
d) \x97\x98<term>c<row>9. What will be the output of the following Python code?
>>>str1="helloworld"
>>>str1[::-1]
a) dlrowolleh
b) hello
c) world
d) helloworld<term>a<row>10. What will be the output of the following Python code?
print(0xA + 0xB + 0xC)
a) 0xA0xB0xC
b) Error
c) 0x22
d) 33<term>d<row>1. What will be the output of the following Python code?
class father:
 def __init__(self, param):
 self.o1 = param
 
class child(father):
 def __init__(self, param):
 self.o2 = param
 
>>>obj = child(22)
>>>print "%d %d" % (obj.o1, obj.o2)
a) None None
b) None 22
c) 22 None
d) Error is generated<term>d<row>2. What will be the output of the following Python code?
class tester:
 def __init__(self, id):
 self.id = str(id)
 id="224"
 
>>>temp = tester(12)
>>>print(temp.id)
a) 224
b) Error
c) 12
d) None<term>c<row>3. What will be the output of the following Python code?
>>>example = "snow world"
>>>print("%s" % example[4:7])
a) wo
b) world
c) sn
d) rl<term>a<row>4. What will be the output of the following Python code?
>>>example = "snow world"
>>>example[3] = 's'
>>>print example
a) snow
b) snow world
c) Error
d) snos world<term>c<row>5. What will be the output of the following Python code?
>>>max("what are you")
a) error
b) u
c) t
d) y<term>d<row>6. Given a string example="hello" what is the output of example.count('l')?
a) 2
b) 1
c) None
d) 0<term>a<row>7. What will be the output of the following Python code?
>>>example = "helle"
>>>example.find("e")
a) Error
b) -1
c) 1
d) 0<term>c<row>8. What will be the output of the following Python code?
>>>example = "helle"
>>>example.rfind("e")
a) -1
b) 4
c) 3
d) 1<term>b<row>9. What will be the output of the following Python code?
>>>example="helloworld"
>>>example[::-1].startswith("d")
a) dlrowolleh
b) True
c) -1
d) None<term>b<row>10. To concatenate two strings to a third what statements are applicable?
a) s3 = s1 . s2
b) s3 = s1.add(s2)
c) s3 = s1.__add__(s2)
d) s3 = s1 * s2<term>c<row>1. What will be the output of the following Python statement?
>>>chr(ord('A'))
a) A
b) B
c) a
d) Error<term>a<row>2. What will be the output of the following Python statement?
>>>print(chr(ord('b')+1))
a) a
b) b
c) c
d) A<term>c<row>3. Which of the following statement prints hello\example\test.txt?
a) print("hello\example\test.txt")
b) print("hello\\example\\test.txt")
c) print("hello\"example\"test.txt")
d) print("hello"\example"\test.txt")<term>b<row>4. Suppose s is "\t\tWorld\n", what is s.strip()?
a) \t\tWorld\n
b) \t\tWorld\n
c) \t\tWORLD\n
d) World<term>d<row>5. The format function, when applied on a string returns ___________
a) Error
b) int
c) bool
d) str<term>d<row>6. What will be the output of the "hello" +1+2+3?
a) hello123
b) hello
c) Error
d) hello6<term>c<row>7. What will be the output of the following Python code?
>>>print("D", end = ' ')
>>>print("C", end = ' ')
>>>print("B", end = ' ')
>>>print("A", end = ' ')
a) DCBA
b) A, B, C, D
c) D C B A
d) D, C, B, A will be displayed on four lines<term>c<row>8. What will be the output of the following Python statement?(python 3.xx)
>>>print(format("Welcome", "10s"), end = '#')
>>>print(format(111, "4d"), end = '#')
>>>print(format(924.656, "3.2f"))
a) Welcome# 111#924.66
b) Welcome#111#924.66
c) Welcome#111#.66
d) Welcome # 111#924.66<term>d<row>9. What will be displayed by print(ord('b') - ord('a'))?
a) 0
b) 1
c) -1
d) 2<term>b<row>10. Say s="hello" what will be the return value of type(s)?
a) int
b) bool
c) str
d) String<term>c<row>1. What is "Hello".replace("l", "e")?
a) Heeeo
b) Heelo
c) Heleo
d) None<term>a<row>2. To retrieve the character at index 3 from string s="Hello" what command do we execute (multiple answers allowed)?
a) s[]
b) s.getitem(3)
c) s.__getitem__(3)
d) s.getItem(3)<term>c<row>3. To return the length of string s what command do we execute?
a) s.__len__()
b) len(s)
c) size(s)
d) s.size()<term>a<row>4. If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method.
a) obj.__str__()
b) str(obj)
c) print obj
d) all of the mentioned<term>d<row>5. To check whether string s1 contains another string s2, use ________
a) s1.__contains__(s2)
b) s2 in s1
c) s1.contains(s2)
d) si.in(s2)<term>a<row>6. Suppose i is 5 and j is 4, i + j is same as ________
a) i.__add(j)
b) i.__add__(j)
c) i.__Add(j)
d) i.__ADD(j)<term>b<row>7. What will be the output of the following Python code?
class Count:
 def __init__(self, count = 0):
 self.__count = count
 
c1 = Count(2)
c2 = Count(2)
print(id(c1) == id(c2), end = " ")
 
s1 = "Good"
s2 = "Good"
print(id(s1) == id(s2))
a) True False
b) True True
c) False True
d) False False<term>c<row>8. What will be the output of the following Python code?
class Name:
 def __init__(self, firstName, mi, lastName):
 self.firstName = firstName
 self.mi = mi
 self.lastName = lastName
 
firstName = "John"
name = Name(firstName, 'F', "Smith")
firstName = "Peter"
name.lastName = "Pan"
print(name.firstName, name.lastName)
a) Peter Pan
b) John Pan
c) Peter Smith
d) John Smith<term>b<row>9. What function do you use to read a string?
a) input("Enter a string")
b) eval(input("Enter a string"))
c) enter("Enter a string")
d) eval(enter("Enter a string"))<term>a<row>10. Suppose x is 345.3546, what is format(x, "10.3f") (_ indicates space).
a) __345.355
b) ___345.355
c) ____345.355
d) _____345.354<term>b<row>1. What will be the output of the following Python code?
print("abc DEF".capitalize())
a) abc def
b) ABC DEF
c) Abc def
d) Abc Def<term>c<row>2. What will be the output of the following Python code?
print("abc. DEF".capitalize())
a) abc. def
b) ABC. DEF
c) Abc. def
d) Abc. Def<term>c<row>3. What will be the output of the following Python code?
print("abcdef".center())
a) cd
b) abcdef
c) error
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
print("abcdef".center(0))
a) cd
b) abcdef
c) error
d) none of the mentioned<term>b<row>5. What will be the output of the following Python code?
print('*', "abcdef".center(7), '*')
a) * abcdef *
b) * abcdef *
c) *abcdef *
d) * abcdef*<term>b<row>6. What will be the output of the following Python code?
print('*', "abcdef".center(7), '*', sep='')
a) * abcdef *
b) * abcdef *
c) *abcdef *
d) * abcdef*<term>d<row>7. What will be the output of the following Python code?
print('*', "abcde".center(6), '*', sep='')
a) * abcde *
b) * abcde *
c) *abcde *
d) * abcde*<term>c<row>8. What will be the output of the following Python code?
print("abcdef".center(7, 1))
a) 1abcdef
b) abcdef1
c) abcdef
d) error<term>d<row>9. What will be the output of the following Python code?
print("abcdef".center(7, '1'))
a) 1abcdef
b) abcdef1
c) abcdef
d) error<term>a<row>10. What will be the output of the following Python code?
print("abcdef".center(10, '12'))
a) 12abcdef12
b) abcdef1212
c) 1212abcdef
d) error<term>d<row>1. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('yy'))
a) 2
b) 0
c) error
d) none of the mentioned<term>a<row>2. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('yy', 1))
a) 2
b) 0
c) 1
d) none of the mentioned<term>a<row>3. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('yy', 2))
a) 2
b) 0
c) 1
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('xyy', 0, 100))
a) 2
b) 0
c) 1
d) error<term>a<row>5. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('xyy', 2, 11))
a) 2
b) 0
c) 1
d) error<term>b<row>6. What will be the output of the following Python code?
print("xyyzxyzxzxyy".count('xyy', -10, -1))
a) 2
b) 0
c) 1
d) error<term>b<row>7. What will be the output of the following Python code?
print('abc'.encode())
a) abc
b) 'abc'
c) b'abc'
d) h'abc'<term>c<row>8. What is the default value of encoding in encode()?
a) ascii
b) qwerty
c) utf-8
d) utf-16<term>c<row>9. What will be the output of the following Python code?
print("xyyzxyzxzxyy".endswith("xyy"))
a) 1
b) True
c) 3
d) 2<term>b<row>10. What will be the output of the following Python code?
print("xyyzxyzxzxyy".endswith("xyy", 0, 2))
a) 0
b) 1
c) True
d) False<term>d<row>1. What will be the output of the following Python code?
print("ab\tcd\tef".expandtabs())
a) ab cd ef
b) abcdef
c) ab\tcd\tef
d) ab cd ef<term>a<row>2. What will be the output of the following Python code?
print("ab\tcd\tef".expandtabs(4))
a) ab cd ef
b) abcdef
c) ab\tcd\tef
d) ab cd ef<term>d<row>3. What will be the output of the following Python code?
print("ab\tcd\tef".expandtabs('+'))
a) ab+cd+ef
b) ab++++++++cd++++++++ef
c) ab cd ef
d) none of the mentioned<term>d<row>4. What will be the output of the following Python code?
print("abcdef".find("cd") == "cd" in "abcdef")
a) True
b) False
c) Error
d) None of the mentioned<term>b<row>5. What will be the output of the following Python code?
print("abcdef".find("cd"))
a) True
b) 2
c) 3
d) None of the mentioned<term>b<row>6. What will be the output of the following Python code?
print("ccdcddcd".find("c"))
a) 4
b) 0
c) Error
d) True<term>b<row>7. What will be the output of the following Python code?
print("Hello {0} and {1}".format('foo', 'bin'))
a) Hello foo and bin
b) Hello {0} and {1} foo bin
c) Error
d) Hello 0 and 1<term>a<row>8. What will be the output of the following Python code?
print("Hello {1} and {0}".format('bin', 'foo'))
a) Hello foo and bin
b) Hello bin and foo
c) Error
d) None of the mentioned<term>a<row>9. What will be the output of the following Python code?
print("Hello {} and {}".format('foo', 'bin'))
a) Hello foo and bin
b) Hello {} and {}
c) Error
d) Hello and<term>a<row>10. What will be the output of the following Python code?
print("Hello {name1} and {name2}".format('foo', 'bin'))
a) Hello foo and bin
b) Hello {name1} and {name2}
c) Error
d) Hello and<term>c<row>1. What will be the output of the following Python code?
print("Hello {name1} and {name2}".format(name1='foo', name2='bin'))
a) Hello foo and bin
b) Hello {name1} and {name2}
c) Error
d) Hello and<term>a<row>2. What will be the output of the following Python code?
print("Hello {0!r} and {0!s}".format('foo', 'bin'))
a) Hello foo and foo
b) Hello 'foo' and foo
c) Hello foo and 'bin'
d) Error<term>b<row>3. What will be the output of the following Python code?
print("Hello {0} and {1}".format(('foo', 'bin')))
a) Hello foo and bin
b) Hello ('foo', 'bin') and ('foo', 'bin')
c) Error
d) None of the mentioned<term>c<row>4. What will be the output of the following Python code?
print("Hello {0[0]} and {0[1]}".format(('foo', 'bin')))
a) Hello foo and bin
b) Hello ('foo', 'bin') and ('foo', 'bin')
c) Error
d) None of the mentioned<term>a<row>5. What will be the output of the following Python code snippet?
print('The sum of {0} and {1} is {2}'.format(2, 10, 12))
a) The sum of 2 and 10 is 12
b) Error
c) The sum of 0 and 1 is 2
d) None of the mentioned<term>a<row>6. What will be the output of the following Python code snippet?
print('The sum of {0:b} and {1:x} is {2:o}'.format(2, 10, 12))
a) The sum of 2 and 10 is 12
b) The sum of 10 and a is 14
c) The sum of 10 and a is c
d) Error<term>b<row>7. What will be the output of the following Python code snippet?
print('{:,}'.format(1112223334))
a) 1,112,223,334
b) 111,222,333,4
c) 1112223334
d) Error<term>a<row>8. What will be the output of the following Python code snippet?
print('{:,}'.format('1112223334'))
a) 1,112,223,334
b) 111,222,333,4
c) 1112223334
d) Error<term>d<row>9. What will be the output of the following Python code snippet?
print('{:$}'.format(1112223334))
a) 1,112,223,334
b) 111,222,333,4
c) 1112223334
d) Error<term>d<row>10. What will be the output of the following Python code snippet?
print('{:#}'.format(1112223334))
a) 1,112,223,334
b) 111,222,333,4
c) 1112223334
d) Error<term>c<row>1. What will be the output of the following Python code?
print('{0:.2}'.format(1/3))
a) 0.333333
b) 0.33
c) 0.333333:.2
d) Error<term>b<row>2. What will be the output of the following Python code?
print('{0:.2%}'.format(1/3))
a) 0.33
b) 0.33%
c) 33.33%
d) 33%<term>c<row>3. What will be the output of the following Python code?
print('ab12'.isalnum())
a) True
b) False
c) None
d) Error<term>a<row>4. What will be the output of the following Python code?
print('ab,12'.isalnum())
a) True
b) False
c) None
d) Error<term>b<row>5. What will be the output of the following Python code?
print('ab'.isalpha())
a) True
b) False
c) None
d) Error<term>a<row>6. What will be the output of the following Python code?
print('a B'.isalpha())
a) True
b) False
c) None
d) Error<term>b<row>7. What will be the output of the following Python code snippet?
print('0xa'.isdigit())
a) True
b) False
c) None
d) Error<term>b<row>8. What will be the output of the following Python code snippet?
print(''.isdigit())
a) True
b) False
c) None
d) Error<term>b<row>9.What will be the output of the following Python code snippet?
print('my_string'.isidentifier())
a) True
b) False
c) None
d) Error<term>a<row>10. What will be the output of the following Python code snippet?
print('__foo__'.isidentifier())
a) True
b) False
c) None
d) Error<term>a<row>1. What will be the output of the following Python code snippet?
print('for'.isidentifier())
a) True
b) False
c) None
d) Error<term>a<row>2. What will be the output of the following Python code snippet?
print('abc'.islower())
a) True
b) False
c) None
d) Error<term>a<row>3. What will be the output of the following Python code snippet?
print('[email protected] 1,'.islower())
a) True
b) False
c) None
d) Error<term>a<row>4. What will be the output of the following Python code snippet?
print('11'.isnumeric())
a) True
b) False
c) None
d) Error<term>a<row>5. What will be the output of the following Python code snippet?
print('1.1'.isnumeric())
a) True
b) False
c) None
d) Error<term>b<row>6. What will be the output of the following Python code snippet?
print('[email protected] a'.isprintable())
a) True
b) False
c) None
d) Error<term>a<row>7. What will be the output of the following Python code snippet?
print(''''''.isspace())
a) True
b) False
c) None
d) Error<term>b<row>8. What will be the output of the following Python code snippet?
print('\t'.isspace())
a) True
b) False
c) None
d) Error<term>a<row>9. What will be the output of the following Python code snippet?
print('HelloWorld'.istitle())
a) True
b) False
c) None
d) Error<term>b<row>10. What will be the output of the following Python code snippet?
print('Hello World'.istitle())
a) True
b) False
c) None
d) Error<term>a<row>1. What will be the output of the following Python code?
print('[email protected]#World'.istitle())
a) True
b) False
c) None
d) error<term>a<row>2. What will be the output of the following Python code?
print('[email protected]'.lower())
a) n
b) [email protected]
c) rn
d) r<term>b<row>3. What will be the output of the following Python code?
print('''
 \tfoo'''.lstrip())
a) \tfoo
b) foo
c) foo
d) none of the mentioned<term>b<row>4. What will be the output of the following Python code?
print('xyyzxxyxyy'.lstrip('xyy'))
a) error
b) zxxyxyy
c) z
d) zxxy<term>b<row>5. What will be the output of the following Python code?
print('xyxxyyzxxy'.lstrip('xyy'))
a) zxxy
b) xyxxyyzxxy
c) xyxzxxy
d) none of the mentioned<term>a<row>6. What will be the output of the following Python code?
print('cba'.maketrans('abc', '123'))
a) {97: 49, 98: 50, 99: 51}
b) {65: 49, 66: 50, 67: 51}
c) 321
d) 123<term>a<row>7. What will be the output of the following Python code?
print('a'.maketrans('ABC', '123'))
a) {97: 49, 98: 50, 99: 51}
b) {65: 49, 66: 50, 67: 51}
c) {97: 49}
d) 1<term>b<row>8. What will be the output of the following Python code?
print('abcdef'.partition('cd'))
a) ('ab', 'ef')
b) ('abef')
c) ('ab', 'cd', 'ef')
d) 2<term>c<row>9. What will be the output of the following Python code?
print('abcdefcdgh'.partition('cd'))
a) ('ab', 'cd', 'ef', 'cd', 'gh')
b) ('ab', 'cd', 'efcdgh')
c) ('abcdef', 'cd', 'gh')
d) error<term>b<row>10. What will be the output of the following Python code?
print('abcd'.partition('cd'))
a) ('ab', 'cd', ")
b) ('ab', 'cd')
c) error
d) none of the mentioned<term>a<row>1. What will be the output of the following Python code snippet?
print('cd'.partition('cd'))
a) ('cd')
b) (")
c) ('cd', ", ")
d) (", 'cd', ")<term>d<row>2. What will be the output of the following Python code snippet?
print('abef'.partition('cd'))
a) ('abef')
b) ('abef', 'cd', ")
c) ('abef', ", ")
d) error<term>c<row>3. What will be the output of the following Python code snippet?
print('abcdef12'.replace('cd', '12'))
a) ab12ef12
b) abcdef12
c) ab12efcd
d) none of the mentioned<term>a<row>4. What will be the output of the following Python code snippet?
print('abef'.replace('cd', '12'))
a) abef
b) 12
c) error
d) none of the mentioned<term>a<row>5. What will be the output of the following Python code snippet?
print('abcefd'.replace('cd', '12'))
a) ab1ef2
b) abcefd
c) ab1efd
d) ab12ed2<term>b<row>6. What will be the output of the following Python code snippet?
print('xyyxyyxyxyxxy'.replace('xy', '12', 0))
a) xyyxyyxyxyxxy
b) 12y12y1212x12
c) 12yxyyxyxyxxy
d) xyyxyyxyxyx12<term>a<row>7. What will be the output of the following Python code snippet?
print('xyyxyyxyxyxxy'.replace('xy', '12', 100))
a) xyyxyyxyxyxxy
b) 12y12y1212x12
c) none of the mentioned
d) error<term>b<row>8. What will be the output of the following Python code snippet?
print('abcdefcdghcd'.split('cd'))
a) ['ab', 'ef', 'gh']
b) ['ab', 'ef', 'gh', "]
c) ('ab', 'ef', 'gh')
d) ('ab', 'ef', 'gh', ")<term>b<row>9. What will be the output of the following Python code snippet?
print('abcdefcdghcd'.split('cd', 0))
a) ['abcdefcdghcd']
b) 'abcdefcdghcd'
c) error
d) none of the mentioned<term>a<row>10. What will be the output of the following Python code snippet?
print('abcdefcdghcd'.split('cd', -1))
a) ['ab', 'ef', 'gh']
b) ['ab', 'ef', 'gh', "]
c) ('ab', 'ef', 'gh')
d) ('ab', 'ef', 'gh', ")<term>b<row>1. What will be the output of the following Python code snippet?
print('abcdefcdghcd'.split('cd', 2))
a) ['ab', 'ef', 'ghcd']
b) ['ab', 'efcdghcd']
c) ['abcdef', 'ghcd']
d) none of the mentioned<term>a<row>2. What will be the output of the following Python code snippet?
print('ab\ncd\nef'.splitlines())
a) ['ab', 'cd', 'ef']
b) ['ab\n', 'cd\n', 'ef\n']
c) ['ab\n', 'cd\n', 'ef']
d) ['ab', 'cd', 'ef\n']<term>a<row>3. What will be the output of the following Python code snippet?
print('Ab!2'.swapcase())
a) [email protected]
b) ab12
c) aB!2
d) [email protected]<term>c<row>4. What will be the output of the following Python code snippet?
print('ab cd ef'.title())
a) Ab cd ef
b) Ab cd eF
c) Ab Cd Ef
d) None of the mentioned<term>c<row>5. What will be the output of the following Python code snippet?
print('ab cd-ef'.title())
a) Ab cd-ef
b) Ab Cd-ef
c) Ab Cd-Ef
d) None of the mentioned<term>c<row>6. What will be the output of the following Python code snippet?
print('abcd'.translate('a'.maketrans('abc', 'bcd')))
a) bcde
b) abcd
c) error
d) bcdd<term>d<row>7. What will be the output of the following Python code snippet?
print('abcd'.translate({97: 98, 98: 99, 99: 100}))
a) bcde
b) abcd
c) error
d) none of the mentioned<term>d<row>8. What will be the output of the following Python code snippet?
print('abcd'.translate({'a': '1', 'b': '2', 'c': '3', 'd': '4'}))
a) abcd
b) 1234
c) error
d) none of the mentioned<term>a<row>9. What will be the output of the following Python code snippet?
print('ab'.zfill(5))
a) 000ab
b) 00ab0
c) 0ab00
d) ab000<term>a<row>10. What will be the output of the following Python code snippet?
print('+99'.zfill(5))
a) 00+99
b) 00099
c) +0099
d) +++99<term>c<row>1. Which of the following commands will create a list?
a) list1 = list()
b) list1 = []
c) list1 = list([1, 2, 3])
d) all of the mentioned<term>d<row>2. What is the output when we execute list("hello")?
a) ['h', 'e', 'l', 'l', 'o']
b) ['hello']
c) ['llo']
d) ['olleh']<term>a<row>3. Suppose listExample is ['h','e','l','l','o'], what is len(listExample)?
a) 5
b) 4
c) None
d) Error<term>a<row>4. Suppose list1 is [2445,133,12454,123], what is max(list1)?
a) 2445
b) 133
c) 12454
d) 123<term>c<row>5. Suppose list1 is [3, 5, 25, 1, 3], what is min(list1)?
a) 3
b) 5
c) 25
d) 1<term>d<row>6. Suppose list1 is [1, 5, 9], what is sum(list1)?
a) 1
b) 9
c) 15
d) Error<term>c<row>7. To shuffle the list(say list1) what function do we use?
a) list1.shuffle()
b) shuffle(list1)
c) random.shuffle(list1)
d) random.shuffleList(list1)<term>c<row>8. Suppose list1 is [4, 2, 2, 4, 5, 2, 1, 0], Which of the following is correct syntax for slicing operation?
a) print(list1[0])
b) print(list1[:2])
c) print(list1[:-2])
d) all of the mentioned<term>d<row>9. Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1]?
a) Error
b) None
c) 25
d) 2<term>c<row>10. Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1]?
a) [2, 33, 222, 14]
b) Error
c) 25
d) [25, 14, 222, 33, 2]<term>a<row>1. What will be the output of the following Python code?
>>>names = ['Amir', 'Bear', 'Charlton', 'Daman']
>>>print(names[-1][-1])
a) A
b) Daman
c) Error
d) n<term>d<row>2. What will be the output of the following Python code?
names1 = ['Amir', 'Bear', 'Charlton', 'Daman']
names2 = names1
names3 = names1[:]
 
names2[0] = 'Alice'
names3[1] = 'Bob'
 
sum = 0
for ls in (names1, names2, names3):
 if ls[0] == 'Alice':
 sum += 1
 if ls[1] == 'Bob':
 sum += 10
 
print sum
a) 11
b) 12
c) 21
d) 22<term>b<row>3. Suppose list1 is [1, 3, 2], What is list1 * 2?
a) [2, 6, 4]
b) [1, 3, 2, 1, 3]
c) [1, 3, 2, 1, 3, 2]
d) [1, 3, 2, 3, 2, 1]<term>c<row>4. Suppose list1 = [0.5 * x for x in range(0, 4)], list1 is:
a) [0, 1, 2, 3]
b) [0, 1, 2, 3, 4]
c) [0.0, 0.5, 1.0, 1.5]
d) [0.0, 0.5, 1.0, 1.5, 2.0]<term>c<row>5. What will be the output of the following Python code?
>>>list1 = [11, 2, 23]
>>>list2 = [11, 2, 2]
>>>list1 < list2
a) True
b) False
c) Error
d) None<term>b<row>6. To add a new element to a list we use which command?
a) list1.add(5)
b) list1.append(5)
c) list1.addLast(5)
d) list1.addEnd(5)<term>b<row>7. To insert 5 to the third position in list1, we use which command?
a) list1.insert(3, 5)
b) list1.insert(2, 5)
c) list1.add(3, 5)
d) list1.append(3, 5)<term>b<row>8. To remove string "hello" from list1, we use which command?
a) list1.remove("hello")
b) list1.remove(hello)
c) list1.removeAll("hello")
d) list1.removeOne("hello")<term>a<row>9. Suppose list1 is [3, 4, 5, 20, 5], what is list1.index(5)?
a) 0
b) 1
c) 4
d) 2<term>d<row>10. Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1.count(5)?
a) 0
b) 4
c) 1
d) 2<term>d<row>1. Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?
a) [3, 4, 5, 20, 5, 25, 1, 3]
b) [1, 3, 3, 4, 5, 5, 20, 25]
c) [25, 20, 5, 5, 4, 3, 3, 1]
d) [3, 1, 25, 5, 20, 5, 4, 3]<term>d<row>2. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])?
a) [3, 4, 5, 20, 5, 25, 1, 3, 34, 5]
b) [1, 3, 3, 4, 5, 5, 20, 25, 34, 5]
c) [25, 20, 5, 5, 4, 3, 3, 1, 34, 5]
d) [1, 3, 4, 5, 20, 5, 25, 3, 34, 5]<term>a<row>3. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop(1)?
a) [3, 4, 5, 20, 5, 25, 1, 3]
b) [1, 3, 3, 4, 5, 5, 20, 25]
c) [3, 5, 20, 5, 25, 1, 3]
d) [1, 3, 4, 5, 20, 5, 25]<term>c<row>4. Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop()?
a) [3, 4, 5, 20, 5, 25, 1]
b) [1, 3, 3, 4, 5, 5, 20, 25]
c) [3, 5, 20, 5, 25, 1, 3]
d) [1, 3, 4, 5, 20, 5, 25]<term>a<row>5. What will be the output of the following Python code?
>>>"Welcome to Python".split()
a) ["Welcome", "to", "Python"]
b) ("Welcome", "to", "Python")
c) {"Welcome", "to", "Python"}
d) "Welcome", "to", "Python"<term>a<row>6. What will be the output of the following Python code?
>>>list("a#b#c#d".split('#'))
a) ['a', 'b', 'c', 'd']
b) ['a b c d']
c) ['a#b#c#d']
d) ['abcd']<term>a<row>7. What will be the output of the following Python code?
myList = [1, 5, 5, 5, 5, 1]
max = myList[0]
indexOfMax = 0
for i in range(1, len(myList)):
 if myList[i] > max:
 max = myList[i]
 indexOfMax = i
 
>>>print(indexOfMax)
a) 1
b) 2
c) 3
d) 4<term>a<row>8. What will be the output of the following Python code?
myList = [1, 2, 3, 4, 5, 6]
for i in range(1, 6):
 myList[i - 1] = myList[i]
 
for i in range(0, 6): 
 print(myList[i], end = " ")
a) 2 3 4 5 6 1
b) 6 1 2 3 4 5
c) 2 3 4 5 6 6
d) 1 1 2 3 4 5<term>c<row>9. What will be the output of the following Python code?
>>>list1 = [1, 3]
>>>list2 = list1
>>>list1[0] = 4
>>>print(list2)
a) [1, 3]
b) [4, 3]
c) [1, 4]
d) [1, 3, 4]<term>b<row>10. What will be the output of the following Python code?
def f(values):
 values[0] = 44
 
v = [1, 2, 3]
f(v)
print(v)
a) [1, 44]
b) [1, 2, 3, 44]
c) [44, 2, 3]
d) [1, 2, 3]<term>c<row>1. What will be the output of the following Python code?
def f(i, values = []):
 values.append(i)
 return values
 
f(1)
f(2)
v = f(3)
print(v)
a) [1] [2] [3]
b) [1] [1, 2] [1, 2, 3]
c) [1, 2, 3]
d) 1 2 3<term>c<row>2. What will be the output of the following Python code?
names1 = ['Amir', 'Bala', 'Chales']
 
if 'amir' in names1:
 print(1)
else:
 print(2)
a) None
b) 1
c) 2
d) Error<term>c<row>3. What will be the output of the following Python code?
names1 = ['Amir', 'Bala', 'Charlie']
names2 = [name.lower() for name in names1]
 
print(names2[2][0])
a) None
b) a
c) b
d) c<term>d<row>4. What will be the output of the following Python code?
numbers = [1, 2, 3, 4]
 
numbers.append([5,6,7,8])
 
print(len(numbers))
a) 4
b) 5
c) 8
d) 12<term>b<row>5. To which of the following the "in" operator can be used to check if an item is in it?
a) Lists
b) Dictionary
c) Set
d) All of the mentioned<term>d<row>6. What will be the output of the following Python code?
list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]
 
print(len(list1 + list2))
a) 2
b) 4
c) 5
d) 8<term>d<row>7. What will be the output of the following Python code?
def addItem(listParam):
 listParam += [1]
 
mylist = [1, 2, 3, 4]
addItem(mylist)
print(len(mylist))
a) 1
b) 4
c) 5
d) 8<term>c<row>8. What will be the output of the following Python code?
def increment_items(L, increment):
 i = 0
 while i < len(L):
 L[i] = L[i] + increment
 i = i + 1
 
values = [1, 2, 3]
print(increment_items(values, 2))
print(values)
a)
 None
 [3, 4, 5]
b)
 None
 [1, 2, 3]
c)
 [3, 4, 5]
 [1, 2, 3]
d)
 [3, 4, 5]
 None<term>a<row>9. What will be the output of the following Python code?
def example(L):
 ''' (list) -> list
 '''
 i = 0
 result = []
 while i < len(L):
 result.append(L[i])
 i = i + 3
 return result
a) Return a list containing every third item from L starting at index 0
b) Return an empty list
c) Return a list containing every third index from L starting at index 0
d) Return a list containing the items from L starting from index 0, omitting every third item<term>a<row>10. What will be the output of the following Python code?
veggies = ['carrot', 'broccoli', 'potato', 'asparagus']
veggies.insert(veggies.index('broccoli'), 'celery')
print(veggies)
a) ['carrot', 'celery', 'broccoli', 'potato', 'asparagus'] Correct 1.00
b) ['carrot', 'celery', 'potato', 'asparagus']
c) ['carrot', 'broccoli', 'celery', 'potato', 'asparagus']
d) ['celery', 'carrot', 'broccoli', 'potato', 'asparagus']<term>a<row>1. What will be the output of the following Python code?
>>>m = [[x, x + 1, x + 2] for x in range(0, 3)]
a) [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
b) [[0, 1, 2], [1, 2, 3], [2, 3, 4]]
c) [1, 2, 3, 4, 5, 6, 7, 8, 9]
d) [0, 1, 2, 1, 2, 3, 2, 3, 4]<term>b<row>2. How many elements are in m?
m = [[x, y] for x in range(0, 4) for y in range(0, 4)]
a) 8
b) 12
c) 16
d) 32<term>c<row>3. What will be the output of the following Python code?
values = [[3, 4, 5, 1], [33, 6, 1, 2]]
 
v = values[0][0]
for row in range(0, len(values)):
 for column in range(0, len(values[row])):
 if v < values[row][column]:
 v = values[row][column]
 
print(v)
a) 3
b) 5
c) 6
d) 33<term>d<row>4. What will be the output of the following Python code?
values = [[3, 4, 5, 1], [33, 6, 1, 2]]
 
v = values[0][0]
for lst in values:
 for element in lst:
 if v > element:
 v = element
 
print(v)
a) 1
b) 3
c) 5
d) 6<term>a<row>5. What will be the output of the following Python code?
values = [[3, 4, 5, 1 ], [33, 6, 1, 2]]
 
for row in values:
 row.sort()
 for element in row:
 print(element, end = " ")
 print()
a) The program prints two rows 3 4 5 1 followed by 33 6 1 2
b) The program prints on row 3 4 5 1 33 6 1 2
c) The program prints two rows 3 4 5 1 followed by 33 6 1 2
d) The program prints two rows 1 3 4 5 followed by 1 2 6 33<term>d<row>6. What will be the output of the following Python code?
matrix = [[1, 2, 3, 4],
 [4, 5, 6, 7],
 [8, 9, 10, 11],
 [12, 13, 14, 15]]
 
for i in range(0, 4):
 print(matrix[i][1], end = " ")
a) 1 2 3 4
b) 4 5 6 7
c) 1 3 8 12
d) 2 5 9 13<term>d<row>7. What will be the output of the following Python code?
def m(list):
 v = list[0]
 for e in list:
 if v < e: v = e
 return v
 
values = [[3, 4, 5, 1], [33, 6, 1, 2]]
 
for row in values: 
 print(m(row), end = " ")
a) 3 33
b) 1 1
c) 5 6
d) 5 33<term>d<row>8. What will be the output of the following Python code?
data = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]
 
print(data[1][0][0])
a) 1
b) 2
c) 4
d) 5<term>d<row>9. What will be the output of the following Python code?
data = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]
 
def ttt(m):
 v = m[0][0]
 
 for row in m:
 for element in row:
 if v < element: v = element
 
 return v
 
print(ttt(data[0]))
a) 1
b) 2
c) 4
d) 5<term>c<row>10. What will be the output of the following Python code?
points = [[1, 2], [3, 1.5], [0.5, 0.5]]
points.sort()
print(points)
a) [[1, 2], [3, 1.5], [0.5, 0.5]]
b) [[3, 1.5], [1, 2], [0.5, 0.5]]
c) [[0.5, 0.5], [1, 2], [3, 1.5]]
d) [[0.5, 0.5], [3, 1.5], [1, 2]]<term>c<row>1. What will be the output of the following Python code?
a=[10,23,56,[78]]
b=list(a)
a[3][0]=95
a[1]=34
print(b)
a) [10,34,56,[95]]
b) [10,23,56,[78]]
c) [10,23,56,[95]]
d) [10,34,56,[78]]<term>c<row>2. What will be the output of the following Python code?
print(list(zip((1,2,3),('a'),('xxx','yyy'))))
print(list(zip((2,4),('b','c'),('yy','xx'))))
a)
[(1,2,3),('a'),('xxx','yyy')]
[(2,4),('b','c'),('yy','xx')]
b)
[(1, 'a', 'xxx'),(2,' ','yyy'),(3,' ',' ')]
[(2, 'b', 'yy'), (4, 'c', 'xx')]
c) Syntax error
d)
[(1, 'a', 'xxx')]
[(2, 'b', 'yy'), (4, 'c', 'xx')]<term>d<row>3. What will be the output of the following Python code?
import copy
a=[10,23,56,[78]]
b=copy.deepcopy(a)
a[3][0]=95
a[1]=34
print(b)
a) [10,34,56,[95]]
b) [10,23,56,[78]]
c) [10,23,56,[95]]
d) [10,34,56,[78]]<term>b<row>4. What will be the output of the following Python code?
s="[email protected]@[email protected]"
a=list(s.partition("@"))
print(a)
b=list(s.split("@",3))
print(b)
a)
['a','b','c','d']
['a','b','c','d']
b)
['a','@','b','@','c','@','d']
['a','b','c','d']
c)
['a','@','[email protected]@d']
['a','b','c','d']
d)
['a','@','[email protected]@d']
['a','@','b','@','c','@','d']<term>c<row>5. What will be the output of the following Python code?
a=[1,2,3,4]
b=[sum(a[0:x+1]) for x in range(0,len(a))]
print(b)
a) 10
b) [1,3,5,7]
c) 4
d) [1,3,6,10]<term>d<row>6. What will be the output of the following Python code?
a="hello"
b=list((x.upper(),len(x)) for x in a)
print(b)
a) [('H', 1), ('E', 1), ('L', 1), ('L', 1), ('O', 1)]
b) [('HELLO', 5)]
c) [('H', 5), ('E', 5), ('L', 5), ('L', 5), ('O', 5)]
d) Syntax error<term>a<row>7. What will be the output of the following Python code?
a=[1,2,3,4]
b=[sum(a[0:x+1]) for x in range(0,len(a))]
print(b)
a) 10
b) [1,3,5,7]
c) 4
d) [1,3,6,10]<term>d<row>8. What will be the output of the following Python code?
a=[[]]*3
a[1].append(7)
print(a)
a) Syntax error
b) [[7], [7], [7]]
c) [[7], [], []]
d) [[],7, [], []]<term>b<row>9. What will be the output of the following Python code?
b=[2,3,4,5]
a=list(filter(lambda x:x%2,b))
print(a)
a) [2,4]
b) [ ]
c) [3,5]
d) Invalid arguments for filter function<term>c<row>10. What will be the output of the following Python code?
lst=[3,4,6,1,2]
lst[1:2]=[7,8]
print(lst)
a) [3, 7, 8, 6, 1, 2]
b) Syntax error
c) [3,[7,8],6,1,2]
d) [3,4,6,7,8]<term>a<row>1. What will be the output of the following Python code?
a=[1,2,3]
b=a.append(4)
print(a)
print(b)
a)
[1,2,3,4]
[1,2,3,4]
b)
[1, 2, 3, 4]
None
c) Syntax error
d)
[1,2,3]
[1,2,3,4]<term>b<row>2. What will be the output of the following Python code?
>>> a=[14,52,7]
>>>> b=a.copy()
>>> b is a
a) True
b) False<term>b<row>3. What will be the output of the following Python code?
a=[13,56,17]
a.append([87])
a.extend([45,67])
print(a)
a) [13, 56, 17, [87], 45, 67]
b) [13, 56, 17, 87, 45, 67]
c) [13, 56, 17, 87,[ 45, 67]]
d) [13, 56, 17, [87], [45, 67]]<term>a<row>4. What is the output of the following piece of code?
a=list((45,)*4)
print((45)*4)
print(a)
a)
180
[(45),(45),(45),(45)]
b)
(45,45,45,45)
[45,45,45,45]
c)
180
[45,45,45,45]
d) Syntax error<term>c<row>5. What will be the output of the following Python code?
lst=[[1,2],[3,4]]
print(sum(lst,[]))
a) [[3],[7]]
b) [1,2,3,4]
c) Error
d) [10]<term>b<row>6. What will be the output of the following Python code?
word1="Apple"
word2="Apple"
list1=[1,2,3]
list2=[1,2,3]
print(word1 is word2)
print(list1 is list2)
a)
True
True
b)
False
True
c)
False
False
d)
True
False<term>d<row>7. What will be the output of the following Python code?
def unpack(a,b,c,d):
 print(a+d)
x = [1,2,3,4]
unpack(*x)
a) Error
b) [1,4]
c) [5]
d) 5<term>d<row>8. What will be the output of the following Python code?
places = ['Bangalore', 'Mumbai', 'Delhi']
<br class="blank" />places1 = places
places2 = places[:]
<br class="blank" />places1[1]="Pune"
places2[2]="Hyderabad"
print(places)
a) ['Bangalore', 'Pune', 'Hyderabad']
b) ['Bangalore', 'Pune', 'Delhi']
c) ['Bangalore', 'Mumbai', 'Delhi']
d) ['Bangalore', 'Mumbai', 'Hyderabad']<term>b<row>9. What will be the output of the following Python code?
x=[[1],[2]]
print(" ".join(list(map(str,x))))
a) [1] [2]
b) [49] [50]
c) Syntax error
d) [[1]] [[2]]<term>a<row>10. What will be the output of the following Python code?
a=165
b=sum(list(map(int,str(a))))
print(b)
a) 561
b) 5
c) 12
d) Syntax error<term>c<row>11. What will be the output of the following Python code?
a= [1, 2, 3, 4, 5]
for i in range(1, 5):
 a[i-1] = a[i]
for i in range(0, 5): 
 print(a[i],end = " ")
a) 5 5 1 2 3
b) 5 1 2 3 4
c) 2 3 4 5 1
d) 2 3 4 5 5<term>d<row>12. What will be the output of the following Python code?
def change(var, lst):
 var = 1
 lst[0] = 44
k = 3
a = [1, 2, 3]
change(k, a)
print(k)
print(a)
a)
3
[44, 2, 3]
b)
1
[1,2,3]
c)
3
[1,2,3]
d)
1
[44,2,3]<term>a<row>13. What will be the output of the following Python code?
a = [1, 5, 7, 9, 9, 1]
<br class="blank" />b=a[0]
<br class="blank" />x= 0
for x in range(1, len(a)):
 if a[x] > b:
 b = a[x]
 b= x
print(b)
a) 5
b) 3
c) 4
d) 0<term>c<row>14. What will be the output of the following Python code?
a=["Apple","Ball","Cobra"]
<br class="blank" />a.sort(key=len)
print(a)
a) ['Apple', 'Ball', 'Cobra']
b) ['Ball', 'Apple', 'Cobra']
c) ['Cobra', 'Apple', 'Ball']
d) Invalid syntax for sort()<term>b<row>15. What will be the output of the following Python code?
num = ['One', 'Two', 'Three']
for i, x in enumerate(num):
 print('{}: {}'.format(i, x),end=" ")
a) 1: 2: 3:
b) Exception is thrown
c) One Two Three
d) 0: One 1: Two 2: Three<term>d<row>1. What will be the output of the following Python code snippet?
k = [print(i) for i in my_string if i not in "aeiou"]
a) prints all the vowels in my_string
b) prints all the consonants in my_string
c) prints all characters of my_string that aren't vowels
d) prints only on executing print(k)<term>c<row>2. What is the output of print(k) in the following Python code snippet?
k = [print(i) for i in my_string if i not in "aeiou"]
print(k)
a) all characters of my_string that aren't vowels
b) a list of Nones
c) list of Trues
d) list of Falses<term>b<row>3. What will be the output of the following Python code snippet?
my_string = "hello world"
k = [(i.upper(), len(i)) for i in my_string]
print(k)
a) [('HELLO', 5), ('WORLD', 5)]
b) [('H', 1), ('E', 1), ('L', 1), ('L', 1), ('O', 1), (' ', 1), ('W', 1), ('O', 1), ('R', 1), ('L', 1), ('D', 1)]
c) [('HELLO WORLD', 11)]
d) none of the mentioned<term>b<row>4. Which of the following is the correct expansion of list_1 = [expr(i) for i in list_0 if func(i)]?
a)
list_1 = []
for i in list_0:
 if func(i):
 list_1.append(i)
b)
for i in list_0:
 if func(i):
 list_1.append(expr(i))
c)
list_1 = []
for i in list_0:
 if func(i):
 list_1.append(expr(i))
d) none of the mentioned<term>c<row>5. What will be the output of the following Python code snippet?
x = [i**+1 for i in range(3)]; print(x);
a) [0, 1, 2]
b) [1, 2, 5]
c) error, **+ is not a valid operator
d) error, ';' is not allowed<term>a<row>6. What will be the output of the following Python code snippet?
print([i.lower() for i in "HELLO"])
a) ['h', 'e', 'l', 'l', 'o']
b) 'hello'
c) ['hello']
d) hello<term>a<row>7. What will be the output of the following Python code snippet?
print([i+j for i in "abc" for j in "def"])
a) ['da', 'ea', 'fa', 'db', 'eb', 'fb', 'dc', 'ec', 'fc']
b) [['ad', 'bd', 'cd'], ['ae', 'be', 'ce'], ['af', 'bf', 'cf']]
c) [['da', 'db', 'dc'], ['ea', 'eb', 'ec'], ['fa', 'fb', 'fc']]
d) ['ad', 'ae', 'af', 'bd', 'be', 'bf', 'cd', 'ce', 'cf']<term>d<row>8. What will be the output of the following Python code snippet?
print([[i+j for i in "abc"] for j in "def"])
a) ['da', 'ea', 'fa', 'db', 'eb', 'fb', 'dc', 'ec', 'fc']
b) [['ad', 'bd', 'cd'], ['ae', 'be', 'ce'], ['af', 'bf', 'cf']]
c) [['da', 'db', 'dc'], ['ea', 'eb', 'ec'], ['fa', 'fb', 'fc']]
d) ['ad', 'ae', 'af', 'bd', 'be', 'bf', 'cd', 'ce', 'cf']<term>b<row>9. What will be the output of the following Python code snippet?
print([if i%2==0: i; else: i+1; for i in range(4)])
a) [0, 2, 2, 4]
b) [1, 1, 3, 3]
c) error
d) none of the mentioned<term>c<row>10. Which of the following is the same as list(map(lambda x: x**-1, [1, 2, 3]))?
a) [x**-1 for x in [(1, 2, 3)]]
b) [1/x for x in [(1, 2, 3)]]
c) [1/x for x in (1, 2, 3)]
d) error<term>c<row>1. What will be the output of the following Python code?
l=[1,2,3,4,5]
[x&1 for x in l]
a) [1, 1, 1, 1, 1]
b) [1, 0, 1, 0, 1]
c) [1, 0, 0, 0, 0]
d) [0, 1, 0, 1, 0]<term>b<row>2. What will be the output of the following Python code?
l1=[1,2,3]
l2=[4,5,6]
[x*y for x in l1 for y in l2]
a) [4, 8, 12, 5, 10, 15, 6, 12, 18]
b) [4, 10, 18]
c) [4, 5, 6, 8, 10, 12, 12, 15, 18]
d) [18, 12, 6, 15, 10, 5, 12, 8, 4]<term>c<row>3. Write the list comprehension to pick out only negative integers from a given list 'l'.
a) [x<0 in l]
b) [x for x<0 in l]
c) [x in l for x<0]
d) [x for x in l if x<0]<term>d<row>For example if we have a list l=[-65, 2, 7, -99, -4, 3]
>>> [x for x in l if x<0]
The output would be: [-65, -99, -4].
4. What will be the output of the following Python code?
s=["pune", "mumbai", "delhi"]
[(w.upper(), len(w)) for w in s]
a) Error
b) ['PUNE', 4, 'MUMBAI', 6, 'DELHI', 5]
c) [PUNE, 4, MUMBAI, 6, DELHI, 5]
d) [('PUNE', 4), ('MUMBAI', 6), ('DELHI', 5)]<term>d<row>5. What will be the output of the following Python code?
l1=[2,4,6]
l2=[-2,-4,-6]
for i in zip(l1, l2):
 print(i)
a)
 2, -2
 4, -4
 6, -6
b) [(2, -2), (4, -4), (6, -6)]
c)
 (2, -2)
 (4, -4)
 (6, -6)
d) [-4, -16, -36]<term>c<row>(2, -2)
(4, -4)
(6, -6)
This format is due to the statement print(i).
6. What will be the output of the following Python code?
l1=[10, 20, 30]
l2=[-10, -20, -30]
l3=[x+y for x, y in zip(l1, l2)]
l3
a) Error
b) 0
c) [-20, -60, -80]
d) [0, 0, 0]<term>d<row>7. Write a list comprehension for number and its cube for l=[1, 2, 3, 4, 5, 6, 7, 8, 9].
a) [x**3 for x in l]
b) [x^3 for x in l]
c) [x**3 in l]
d) [x^3 in l]<term>a<row>8. What will be the output of the following Python code?
l=[[1 ,2, 3], [4, 5, 6], [7, 8, 9]]
[[row[i] for row in l] for i in range(3)]
a) Error
b) [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
c)
 1 4 7
 2 5 8
 3 6 9
d)
 (1 4 7)
 (2 5 8)
 (3 6 9)<term>b<row>9. What will be the output of the following Python code?
import math
[str(round(math.pi)) for i in range (1, 6)]
a) ['3', '3', '3', '3', '3', '3']
b) ['3.1', '3.14', '3.142', '3.1416', '3.14159', '3.141582']
c) ['3', '3', '3', '3', '3']
d) ['3.1', '3.14', '3.142', '3.1416', '3.14159']<term>c<row>10. What will be the output of the following Python code?
l1=[1,2,3]
l2=[4,5,6]
l3=[7,8,9]
for x, y, z in zip(l1, l2, l3):
 print(x, y, z)
a)
 1 4 7
 2 5 8
 3 6 9
b)
 (1 4 7)
 (2 5 8)
 (3 6 9)
c) [(1, 4, 7), (2, 5, 8), (3, 6, 9)]
d) Error<term>a<row>1 4 7
2 5 8
3 6 9
This is due to the statement: print(x, y,z).
1. Read the information given below carefully and write a list comprehension such that the output is: ['e', 'o']
w="hello"
v=('a', 'e', 'i', 'o', 'u')
a) [x for w in v if x in v]
b) [x for x in w if x in v]
c) [x for x in v if w in v]
d) [x for v in w for x in w]<term>b<row>2. What will be the output of the following Python code?
[ord(ch) for ch in 'abc']
a) [97, 98, 99]
b) ['97', '98', '99']
c) [65, 66, 67]
d) Error<term>a<row>3. What will be the output of the following Python code?
t=32.00
[round((x-32)*5/9) for x in t]
a) [0]
b) 0
c) [0.00]
d) Error<term>d<row>4. Write a list comprehension for producing a list of numbers between 1 and 1000 that are divisible by 3.
a) [x in range(1, 1000) if x%3==0]
b) [x for x in range(1000) if x%3==0]
c) [x%3 for x in range(1, 1000)]
d) [x%3=0 for x in range(1, 1000)]<term>b<row>5. Write a list comprehension equivalent for the Python code shown below.
for i in range(1, 101):
 if int(i*0.5)==i*0.5:
 print(i)
a) [i for i in range(1, 100) if int(i*0.5)==(i*0.5)]
b) [i for i in range(1, 101) if int(i*0.5)==(i*0.5)]
c) [i for i in range(1, 101) if int(i*0.5)=(i*0.5)]
d) [i for i in range(1, 100) if int(i*0.5)=(i*0.5)]<term>b<row>6. What is the list comprehension equivalent for: list(map(lambda x:x**-1, [1, 2, 3]))?
a) [1|x for x in [1, 2, 3]]
b) [-1**x for x in [1, 2, 3]]
c) [x**-1 for x in [1, 2, 3]]
d) [x^-1 for x in range(4)]<term>c<row>7. Write a list comprehension to produce the list: [1, 2, 4, 8, 16......212].
a) [(2**x) for x in range(0, 13)]
b) [(x**2) for x in range(1, 13)]
c) [(2**x) for x in range(1, 13)]
d) [(x**2) for x in range(0, 13)]<term>a<row>8. What is the list comprehension equivalent for?
{x : x is a whole number less than 20, x is even} (including zero)
a) [x for x in range(1, 20) if (x%2==0)]
b) [x for x in range(0, 20) if (x//2==0)]
c) [x for x in range(1, 20) if (x//2==0)]
d) [x for x in range(0, 20) if (x%2==0)]<term>d<row>9. What will be the output of the following Python list comprehension?
[j for i in range(2,8) for j in range(i*2, 50, i)]
a) A list of prime numbers up to 50
b) A list of numbers divisible by 2, up to 50
c) A list of non prime numbers, up to 50
d) Error<term>c<row>10. What will be the output of the following Python code?
l=["good", "oh!", "excellent!", "#450"]
[n for n in l if n.isalpha() or n.isdigit()]
a) ['good', 'oh', 'excellent', '450' ]
b) ['good']
c) ['good', '#450']
d) ['oh!', 'excellent!', '#450']<term>b<row>1. Which of the following matrices will throw an error in Python?
a)
 A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
b)
 B = [[3, 3, 3]
 [4, 4, 4]
 [5, 5, 5]]
c)
 C = [(1, 2, 4),
 (5, 6, 7),
 (8, 9, 10)]
d)
 D = [2, 3, 4,
 3, 3, 3,
 4, 5, 6]<term>b<row>2. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
A[1]
a) [4, 5, 6]
b) [3, 6, 9]
c) [1, 4, 7]
d) [1, 2, 3]<term>a<row>3. Which of the following Python statements will result in the output: 6?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
a) A[2][3]
b) A[2][1]
c) A[1][2]
d) A[3][2]<term>c<row>4. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
[A[row][1] for row in (0, 1, 2)]
a) [7, 8, 9]
b) [4, 5, 6]
c) [2, 5, 8]
d) [1, 4, 7]<term>c<row>5. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
[A[i][i] for i in range(len(A))]
a) [1, 5, 9]
b) [3, 5, 7]
c) [4, 5, 6]
d) [2, 5, 8]<term>a<row>6. What will be the output of the following Python code?
l=[[1, 2, 3], [4, 5, 6]]
for i in range(len(l)):
 for j in range(len(l[i])):
 l[i][j]+=10
l
a) No output
b) Error
c) [[1, 2, 3], [4, 5, 6]]
d) [[11, 12, 13], [14, 15, 16]]<term>d<row>7. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
 
[[col + 10 for col in row] for row in A]
a) [[11, 12, 13], [14, 15, 16], [17, 18, 19]]
b) Error
c) [11, 12, 13], [14, 15, 16], [17, 18, 19]
d) [11, 12, 13, 14, 15, 16, 17, 18, 19]<term>a<row>8. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
[A[i][len(A)-1-i] for i in range(len(A))]
a) [1, 5, 9]
b) [4, 5, 6]
c) [3, 5, 7]
d) [2, 5, 8]<term>c<row>9. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
B = [[3, 3, 3],
 [4, 4, 4],
 [5, 5, 5]]
[B[row][col]*A[row][col] for row in range(3) for col in range(3)]
a) [3, 6, 9, 16, 20, 24, 35, 40, 45]
b) Error
c) [0, 30, 60, 120, 160, 200, 300, 350, 400]
d) 0<term>a<row>10. What will be the output of the following Python code?
r = [11, 12, 13, 14, 15, 16, 17, 18, 19]
A = [[0, 10, 20],
 [30, 40, 50],
 [60, 70, 80]]
for row in A:
 for col in row:
 r.append(col+10)
r
a) [11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 20, 30, 40, 50, 60, 70, 80, 90]
b) [10, 20, 30, 40, 50, 60, 70, 80, 90]
c) [11, 12, 13, 14, 15, 16, 17, 18, 19]
d) [0, 10, 20, 30, 40, 50, 60, 70, 80]<term>a<row>11. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
B = [[3, 3, 3],
 [4, 4, 4],
 [5, 5, 5]]
[[col1 * col2 for (col1, col2) in zip(row1, row2)] for (row1, row2) in zip(A, B)]
a) [0, 30, 60, 120, 160, 200, 300, 350, 400]
b) [[3, 6, 9], [16, 20, 24], [35, 40, 45]]
c) No output
d) Error<term>b<row>12. What will be the output of the following Python code?
A = [[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
B = [[3, 3, 3],
 [4, 4, 4],
 [5, 5, 5]]
zip(A, B)
a) Address of the zip object
b) Address of the matrices A and B
c) No output
d) [3, 6, 9, 16, 20, 24, 35, 40, 45]<term>a<row>>>> list(zip(A, B))
[([1, 2, 3], [3, 3, 3]), ([4, 5, 6], [4, 4, 4]), ([7, 8, 9], [5, 5, 5])]
1. Which of the following is a Python tuple?
a) [1, 2, 3]
b) (1, 2, 3)
c) {1, 2, 3}
d) {}<term>b<row>2. Suppose t = (1, 2, 4, 3), which of the following is incorrect?
a) print(t[3])
b) t[3] = 45
c) print(max(t))
d) print(len(t))<term>b<row>3. What will be the output of the following Python code?
>>>t=(1,2,4,3)
>>>t[1:3]
a) (1, 2)
b) (1, 2, 4)
c) (2, 4)
d) (2, 4, 3)<term>c<row>4. What will be the output of the following Python code?
>>>t=(1,2,4,3)
>>>t[1:-1]
a) (1, 2)
b) (1, 2, 4)
c) (2, 4)
d) (2, 4, 3)<term>c<row>5. What will be the output of the following Python code?
>>>t = (1, 2, 4, 3, 8, 9)
>>>[t[i] for i in range(0, len(t), 2)]
a) [2, 3, 9]
b) [1, 2, 4, 3, 8, 9]
c) [1, 4, 8]
d) (1, 4, 8)<term>c<row>6. What will be the output of the following Python code?
d = {"john":40, "peter":45}
d["john"]
a) 40
b) 45
c) "john"
d) "peter"<term>a<row>7. What will be the output of the following Python code?
>>>t = (1, 2)
>>>2 * t
a) (1, 2, 1, 2)
b) [1, 2, 1, 2]
c) (1, 1, 2, 2)
d) [1, 1, 2, 2]<term>a<row>8. What will be the output of the following Python code?
>>>t1 = (1, 2, 4, 3)
>>>t2 = (1, 2, 3, 4)
>>>t1 < t2
a) True
b) False
c) Error
d) None<term>b<row>9. What will be the output of the following Python code?
>>>my_tuple = (1, 2, 3, 4)
>>>my_tuple.append( (5, 6, 7) )
>>>print len(my_tuple)
a) 1
b) 2
c) 5
d) Error<term>d<row>10. What will be the output of the following Python code?
numberGames = {}
numberGames[(1,2,4)] = 8
numberGames[(4,2,1)] = 10
numberGames[(1,2)] = 12
sum = 0
for k in numberGames:
 sum += numberGames[k]
print len(numberGames) + sum
a) 30
b) 24
c) 33
d) 12<term>c<row>1. What is the data type of (1)?
a) Tuple
b) Integer
c) List
d) Both tuple and integer<term>b<row>2. If a=(1,2,3,4), a[1:-1] is _________
a) Error, tuple slicing doesn't exist
b) [2,3]
c) (2,3,4)
d) (2,3)<term>d<row>3. What will be the output of the following Python code?
>>> a=(1,2,(4,5))
>>> b=(1,2,(3,4))
>>> a<b
a) False
b) True
c) Error, < operator is not valid for tuples
d) Error, < operator is valid for tuples but not if there are sub-tuples<term>a<row>4. What will be the output of the following Python code?
>>> a=("Check")*3
>>> a
a) ('Check','Check','Check')
b) * Operator not valid for tuples
c) ('CheckCheckCheck')
d) Syntax error<term>c<row>5. What will be the output of the following Python code?
>>> a=(1,2,3,4)
>>> del(a[2])
a) Now, a=(1,2,4)
b) Now, a=(1,3,4)
c) Now a=(3,4)
d) Error as tuple is immutable<term>d<row>6. What will be the output of the following Python code?
>>> a=(2,3,4)
>>> sum(a,3)
a) Too many arguments for sum() method
b) The method sum() doesn't exist for tuples
c) 12
d) 9<term>c<row>7. Is the following Python code valid?
>>> a=(1,2,3,4)
>>> del a
a) No because tuple is immutable
b) Yes, first element in the tuple is deleted
c) Yes, the entire tuple is deleted
d) No, invalid syntax for del method<term>c<row>8. What type of data is: a=[(1,1),(2,4),(3,9)]?
a) Array of tuples
b) List of tuples
c) Tuples of lists
d) Invalid type<term>b<row>9. What will be the output of the following Python code?
>>> a=(0,1,2,3,4)
>>> b=slice(0,2)
>>> a[b]
a) Invalid syntax for slicing
b) [0,2]
c) (0,1)
d) (0,2)<term>c<row>10. Is the following Python code valid?
>>> a=(1,2,3)
>>> b=('A','B','C')
>>> c=tuple(zip(a,b))
a) Yes, c will be ((1, 'A'), (2, 'B'), (3, 'C'))
b) Yes, c will be ((1,2,3),('A','B','C'))
c) No because tuples are immutable
d) No because the syntax for zip function isn't valid<term>a<row>1. Is the following Python code valid?
>>> a,b,c=1,2,3
>>> a,b,c
a) Yes, [1,2,3] is printed
b) No, invalid syntax
c) Yes, (1,2,3) is printed
d) 1 is printed<term>c<row>2. What will be the output of the following Python code?
a = ('check',)
n = 2
for i in range(int(n)):
 a = (a,)
 print(a)
a) Error, tuples are immutable
b)
(('check',),)
((('check',),),)
c) (('check',)'check',)
d)
(('check',)'check',)
((('check',)'check',)'check',)<term>b<row>3. Is the following Python code valid?
>>> a,b=1,2,3
a) Yes, this is an example of tuple unpacking. a=1 and b=2
b) Yes, this is an example of tuple unpacking. a=(1,2) and b=3
c) No, too many values to unpack
d) Yes, this is an example of tuple unpacking. a=1 and b=(2,3)<term>c<row>4. What will be the output of the following Python code?
>>> a=(1,2)
>>> b=(3,4)
>>> c=a+b
>>> c
a) (4,6)
b) (1,2,3,4)
c) Error as tuples are immutable
d) None<term>b<row>5. What will be the output of the following Python code?
>>> a,b=6,7
>>> a,b=b,a
>>> a,b
a) (6,7)
b) Invalid syntax
c) (7,6)
d) Nothing is printed<term>c<row>6. What will be the output of the following Python code?
>>> import collections
>>> a=collections.namedtuple('a',['i','j'])
>>> obj=a(i=4,j=7)
>>> obj
a) a(i=4, j=7)
b) obj(i=4, j=7)
c) (4,7)
d) An exception is thrown<term>a<row>7. Tuples can't be made keys of a dictionary.
a) True
b) False<term>b<row>8. Is the following Python code valid?
>>> a=2,3,4,5
>>> a
a) Yes, 2 is printed
b) Yes, [2,3,4,5] is printed
c) No, too many values to unpack
d) Yes, (2,3,4,5) is printed<term>d<row>9. What will be the output of the following Python code?
>>> a=(2,3,1,5)
>>> a.sort()
>>> a
a) (1,2,3,5)
b) (2,3,1,5)
c) None
d) Error, tuple has no attribute sort<term>d<row>10. Is the following Python code valid?
>>> a=(1,2,3)
>>> b=a.update(4,)
a) Yes, a=(1,2,3,4) and b=(1,2,3,4)
b) Yes, a=(1,2,3) and b=(1,2,3,4)
c) No because tuples are immutable
d) No because wrong syntax for update() method<term>c<row>11. What will be the output of the following Python code?
>>> a=[(2,4),(1,2),(3,9)]
>>> a.sort()
>>> a
a) [(1, 2), (2, 4), (3, 9)]
b) [(2,4),(1,2),(3,9)]
c) Error because tuples are immutable
d) Error, tuple has no sort attribute<term>a<row>1. Which of these about a set is not true?
a) Mutable data type
b) Allows duplicate values
c) Data type with unordered values
d) Immutable data type<term>d<row>2. Which of the following is not the correct syntax for creating a set?
a) set([[1,2],[3,4]])
b) set([1,2,2,3,4])
c) set((1,2,3,4))
d) {1,2,3,4}<term>a<row>3. What will be the output of the following Python code?
nums = set([1,1,2,3,3,3,4,4])
print(len(nums))
a) 7
b) Error, invalid syntax for formation of set
c) 4
d) 8<term>c<row>4. What will be the output of the following Python code?
a = [5,5,6,7,7,7]
b = set(a)
def test(lst):
 if lst in b:
 return 1
 else:
 return 0
for i in filter(test, a):
 print(i,end=" ")
a) 5 5 6
b) 5 6 7
c) 5 5 6 7 7 7
d) 5 6 7 7 7<term>c<row>5. Which of the following statements is used to create an empty set?
a) { }
b) set()
c) [ ]
d) ( )<term>b<row>6. What will be the output of the following Python code?
>>> a={5,4}
>>> b={1,2,4,5}
>>> a<b
a) {1,2}
b) True
c) False
d) Invalid operation<term>b<row>7. If a={5,6,7,8}, which of the following statements is false?
a) print(len(a))
b) print(min(a))
c) a.remove(5)
d) a[2]=45<term>d<row>8. If a={5,6,7}, what happens when a.add(5) is executed?
a) a={5,5,6,7}
b) a={5,6,7}
c) Error as there is no add function for set data type
d) Error as 5 already exists in the set<term>b<row>9. What will be the output of the following Python code?
>>> a={4,5,6}
>>> b={2,8,6}
>>> a+b
a) {4,5,6,2,8}
b) {4,5,6,2,8,6}
c) Error as unsupported operand type for sets
d) Error as the duplicate item 6 is present in both sets<term>c<row>10. What will be the output of the following Python code?
>>> a={4,5,6}
>>> b={2,8,6}
>>> a-b
a) {4,5}
b) {6}
c) Error as unsupported operand type for set data type
d) Error as the duplicate item 6 is present in both sets<term>a<row>11. What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,8,10,11}
>>> a^b
a) {5,6,7,8,10,11}
b) {7,8}
c) Error as unsupported operand type of set data type
d) {5,6,10,11}<term>d<row>12. What will be the output of the following Python code?
>>> s={5,6}
>>> s*3
a) Error as unsupported operand type for set data type
b) {5,6,5,6,5,6}
c) {5,6}
d) Error as multiplication creates duplicate elements which isn't allowed<term>a<row>13. What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,5,6,8}
>>> a==b
a) True
b) False<term>a<row>14. What will be the output of the following Python code?
>>> a={3,4,5}
>>> b={5,6,7}
>>> a|b
a) Invalid operation
b) {3, 4, 5, 6, 7}
c) {5}
d) {3,4,6,7}<term>b<row>15. Is the following Python code valid?
a={3,4,{7,5}}
print(a[2][0])
a) Yes, 7 is printed
b) Error, elements of a set can't be printed
c) Error, subsets aren't allowed
d) Yes, {7,5} is printed<term>c<row>1. Which of these about a frozenset is not true?
a) Mutable data type
b) Allows duplicate values
c) Data type with unordered values
d) Immutable data type<term>a<row>2. What is the syntax of the following Python code?
>>> a=frozenset(set([5,6,7]))
>>> a
a) {5,6,7}
b) frozenset({5,6,7})
c) Error, not possible to convert set into frozenset
d) Syntax error<term>b<row>3. Is the following Python code valid?
>>> a=frozenset([5,6,7])
>>> a
>>> a.add(5)
a) Yes, now a is {5,5,6,7}
b) No, frozen set is immutable
c) No, invalid syntax for add method
d) Yes, now a is {5,6,7}<term>b<row>4. Set members must not be hashable.
a) True
b) False<term>b<row>5. What will be the output of the following Python code?
>>> a={3,4,5}
>>> a.update([1,2,3])
>>> a
a) Error, no method called update for set data type
b) {1, 2, 3, 4, 5}
c) Error, list can't be added to set
d) Error, duplicate item present in list<term>b<row>6. What will be the output of the following Python code?
>>> a={1,2,3}
>>> a.intersection_update({2,3,4,5})
>>> a
a) {2,3}
b) Error, duplicate item present in list
c) Error, no method called intersection_update for set data type
d) {1,4,5}<term>a<row>7. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a
>>> b.remove(3)
>>> a
a) {1,2,3}
b) Error, copying of sets isn't allowed
c) {1,2}
d) Error, invalid syntax for remove<term>c<row>8. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a.copy()
>>> b.add(4)
>>> a
a) {1,2,3}
b) Error, invalid syntax for add
c) {1,2,3,4}
d) Error, copying of sets isn't allowed<term>a<row>9. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=a.add(4)
>>> b
a) 0
b) {1,2,3,4}
c) {1,2,3}
d) Nothing is printed<term>d<row>10. What will be the output of the following Python code?
>>> a={1,2,3}
>>> b=frozenset([3,4,5])
>>> a-b
a) {1,2}
b) Error as difference between a set and frozenset can't be found out
c) Error as unsupported operand type for set data type
d) frozenset({1,2})<term>a<row>11. What will be the output of the following Python code?
>>> a={5,6,7}
>>> sum(a,5)
a) 5
b) 23
c) 18
d) Invalid syntax for sum method, too many arguments<term>b<row>12. What will be the output of the following Python code?
>>> a={1,2,3}
>>> {x*2 for x in a|{4,5}}
a) {2,4,6}
b) Error, set comprehensions aren't allowed
c) {8, 2, 10, 4, 6}
d) {8,10}<term>c<row>13. What will be the output of the following Python code?
>>> a={5,6,7,8}
>>> b={7,8,9,10}
>>> len(a+b)
a) 8
b) Error, unsupported operand '+' for sets
c) 6
d) Nothing is displayed<term>b<row>14. What will be the output of the following Python code?
a={1,2,3}
b={1,2,3}
c=a.issubset(b)
print(c)
a) True
b) Error, no method called issubset() exists
c) Syntax error for issubset() method
d) False<term>a<row>15. Is the following Python code valid?
a={1,2,3}
b={1,2,3,4}
c=a.issuperset(b)
print(c)
a) False
b) True
c) Syntax error for issuperset() method
d) Error, no method called issuperset() exists<term>a<row>1. What will be the output of the following Python code?
s=set()
type(s)
a) <'set'>
b) <class 'set'>
c) set
d) class set<term>b<row>2. The following Python code results in an error.
s={2, 3, 4, [5, 6]}
a) True
b) False<term>a<row>3. Set makes use of __________
Dictionary makes use of ____________
a) keys, keys
b) key values, keys
c) keys, key values
d) key values, key values<term>c<row>Dictionary makes use of key values.
4. Which of the following lines of code will result in an error?
a) s={abs}
b) s={4, 'abc', (1,2)}
c) s={2, 2.2, 3, 'xyz'}
d) s={san}<term>d<row>5. What will be the output of the following Python code?
s={2, 5, 6, 6, 7}
s
a) {2, 5, 7}
b) {2, 5, 6, 7}
c) {2, 5, 6, 6, 7}
d) Error<term>b<row>6. Input order is preserved in sets.
a) True
b) False<term>b<row>>>> s={2, 6, 8, 1, 5}
>>> s
{8, 1, 2, 5, 6}
7. Write a list comprehension for number and its cube for:
l=[1, 2, 3, 4, 5, 6, 7, 8, 9]
a) [x**3 for x in l]
b) [x^3 for x in l]
c) [x**3 in l]
d) [x^3 in l]<term>a<row>8. What will be the output of the following Python code?
s={1, 2, 3}
s.update(4)
s
a) {1, 2, 3, 4}
b) {1, 2, 4, 3}
c) {4, 1, 2, 3}
d) Error<term>d<row>9. Which of the following functions cannot be used on heterogeneous sets?
a) pop
b) remove
c) update
d) sum<term>d<row>10. What will be the output of the following Python code?
s={4>3, 0, 3-3}
all(s)
any(s)
a)
True
False
b)
False
True
c)
True 
True
d)
False
False<term>b<row>1. Which of the following functions will return the symmetric difference between two sets, x and y?
a) x | y
b) x ^ y
c) x & y
d) x - y<term>b<row>2. What will be the output of the following Python code snippet?
z=set('abc$de')
'a' in z
a) True
b) False
c) No output
d) Error<term>a<row>3. What will be the output of the following Python code snippet?
z=set('abc')
z.add('san')
z.update(set(['p', 'q']))
z
a) {'abc', 'p', 'q', 'san'}
b) {'a', 'b', 'c', ['p', 'q'], 'san}
c) {'a', 'c', 'c', 'p', 'q', 's', 'a', 'n'}
d) {'a', 'b', 'c', 'p', 'q', 'san'}<term>d<row>4. What will be the output of the following Python code snippet?
s=set([1, 2, 3])
s.union([4, 5])
s|([4, 5])
a)
 {1, 2, 3, 4, 5}
 {1, 2, 3, 4, 5}
b)
 Error
 {1, 2, 3, 4, 5}
c)
 {1, 2, 3, 4, 5}
 Error
d)
 Error
 Error<term>c<row>5. What will be the output of the following Python code snippet?
for x in set('pqr'):
 print(x*2)
a)
pp
qq
rr
b)
pqr
pqr
c) ppqqrr
d) pqrpqr<term>a<row>pp
qq
rr
6. What will be the output of the following Python code snippet?
{a**2 for a in range(4)}
a) {1, 4, 9, 16}
b) {0, 1, 4, 9, 16}
c) Error
d) {0, 1, 4, 9}<term>d<row>7. What will be the output of the following Python function?
{x for x in 'abc'}
{x*3 for x in 'abc'}
a)
 {abc}
 aaa
 bbb
 ccc
b)
 abc
 abc abc abc
c)
 {'a', 'b', 'c'}
 {'aaa', 'bbb', 'ccc'}
d)
 {'a', 'b', 'c'}
 abc
 abc
 abc<term>c<row>8. The output of the following code is: class<'set'>.
type({})
a) True
b) False<term>b<row>9. What will be the output of the following Python code snippet?
a=[1, 4, 3, 5, 2]
b=[3, 1, 5, 2, 4]
a==b
set(a)==set(b)
a)
 True
 False
b)
 False
 False
c)
 False
 True
d)
 True
 True<term>c<row>10. What will be the output of the following Python code snippet?
l=[1, 2, 4, 5, 2, 'xy', 4]
set(l)
l
a)
{1, 2, 4, 5, 2, 'xy', 4}
[1, 2, 4, 5, 2, 'xy', 4]
b)
{1, 2, 4, 5, 'xy'}
[1, 2, 4, 5, 2, 'xy', 4]
c)
{1, 5, 'xy'}
[1, 5, 'xy']
d)
{1, 2, 4, 5, 'xy'}
[1, 2, 4, 5, 'xy']<term>b<row>Note that the order of the elements may not be the same.
1. What will be the output of the following Python code?
s1={3, 4}
s2={1, 2}
s3=set()
i=0
j=0
for i in s1:
 for j in s2:
 s3.add((i,j))
 i+=1
 j+=1
print(s3)
a) {(3, 4), (1, 2)}
b) Error
c) {(4, 2), (3, 1), (4, 1), (5, 2)}
d) {(3, 1), (4, 2)}<term>c<row>2. The ____________ function removes the first element of a set and the last element of a list.
a) remove
b) pop
c) discard
d) dispose<term>b<row>3. The difference between the functions discard and remove is that:
a) Discard removes the last element of the set whereas remove removes the first element of the set
b) Discard throws an error if the specified element is not present in the set whereas remove does not throw an error in case of absence of the specified element
c) Remove removes the last element of the set whereas discard removes the first element of the set
d) Remove throws an error if the specified element is not present in the set whereas discard does not throw an error in case of absence of the specified element<term>d<row>4. What will be the output of the following Python code?
s1={1, 2, 3}
s2={3, 4, 5, 6}
s1.difference(s2)
s2.difference(s1)
a)
{1, 2}
{4, 5, 6}
b)
{1, 2}
{1, 2}
c)
{4, 5, 6}
{1, 2}
d)
{4, 5, 6}
{4, 5, 6}<term>a<row>{1, 2}
{4, 5, 6}.
5. What will be the output of the following Python code?
s1={1, 2, 3}
s2={4, 5, 6}
s1.isdisjoint(s2)
s2.isdisjoint(s1)
a)
True
False
b)
False 
True
c)
True
True
d)
False
False<term>c<row>6. If we have two sets, s1 and s2, and we want to check if all the elements of s1 are present in s2 or not, we can use the function:
a) s2.issubset(s1)
b) s2.issuperset(s1)
c) s1.issuperset(s2)
d) s1.isset(s2)<term>b<row>7. What will be the output of the following Python code?
s1={1, 2, 3, 8}
s2={3, 4, 5, 6}
s1|s2
s1.union(s2)
a)
{3}
{1, 2, 3, 4, 5, 6, 8}
b)
{1, 2, 4, 5, 6, 8}
{1, 2, 4, 5, 6, 8}
c)
{3}
{3}
d)
{1, 2, 3, 4, 5, 6, 8}
{1, 2, 3, 4, 5, 6, 8}<term>d<row>8. What will be the output of the following Python code?
a=set('abc')
b=set('def')
b.intersection_update(a)
a
b
a)
set()
('e', 'd', 'f'}
b)
{}
{}
c)
{'b', 'c', 'a'}
set()
d)
set()
set()<term>c<row>'b', 'c', 'a'}
set().
9. What will be the output of the following Python code, if s1= {1, 2, 3}?
s1.issubset(s1)
a) True
b) Error
c) No output
d) False<term>a<row>10. What will be the output of the following Python code?
x=set('abcde')
y=set('xyzbd')
x.difference_update(y)
x
y
a)
 {'a', 'b', 'c', 'd', 'e'}
 {'x', 'y', 'z'}
b)
 {'a', 'c', 'e'}
 {'x', 'y', 'z', 'b', 'd'}
c)
 {'b', 'd'}
 {'b', 'd'}
 {'a', 'c', 'e'}
 {'x', 'y', 'z'}<term>b<row>{'a', 'c', 'e'}
{'x', 'y', 'z', 'b', 'd'}.
Participate in the Sanfoundry Certification contest to get free Certificate of Merit. Join our social networks below and stay updated with latest contests, videos, internships and jobs!
1. Which of the following statements create a dictionary?
a) d = {}
b) d = {"john":40, "peter":45}
c) d = {40:"john", 45:"peter"}
d) All of the mentioned<term>d<row>2. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}
a) "john", 40, 45, and "peter"
b) "john" and "peter"
c) 40 and 45
d) d = (40:"john", 45:"peter")<term>b<row>3. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}
"john" in d
a) True
b) False
c) None
d) Error<term>a<row>4. What will be the output of the following Python code snippet?
d1 = {"john":40, "peter":45}
d2 = {"john":466, "peter":45}
d1 == d2
a) True
b) False
c) None
d) Error<term>b<row>5. What will be the output of the following Python code snippet?
d1 = {"john":40, "peter":45}
d2 = {"john":466, "peter":45}
d1 > d2
a) True
b) False
c) Error
d) None<term>c<row>6. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}
d["john"]
a) 40
b) 45
c) "john"
d) "peter"<term>a<row>7. Suppose d = {"john":40, "peter":45}, to delete the entry for "john" what command do we use?
a) d.delete("john":40)
b) d.delete("john")
c) del d["john"]
d) del d("john":40)<term>c<row>8. Suppose d = {"john":40, "peter":45}. To obtain the number of entries in dictionary which command do we use?
a) d.size()
b) len(d)
c) size(d)
d) d.len()<term>b<row>9. What will be the output of the following Python code snippet?
d = {"john":40, "peter":45}
print(list(d.keys()))
a) ["john", "peter"]
b) ["john":40, "peter":45]
c) ("john", "peter")
d) ("john":40, "peter":45)<term>a<row>10. Suppose d = {"john":40, "peter":45}, what happens when we try to retrieve a value using the expression d["susan"]?
a) Since "susan" is not a value in the set, Python raises a KeyError exception
b) It is executed fine and no exception is raised, and it returns None
c) Since "susan" is not a key in the set, Python raises a KeyError exception
d) Since "susan" is not a key in the set, Python raises a syntax error<term>c<row>1. Which of these about a dictionary is false?
a) The values of a dictionary can be accessed using keys
b) The keys of a dictionary can be accessed using values
c) Dictionaries aren't ordered
d) Dictionaries are mutable<term>b<row>2. Which of the following is not a declaration of the dictionary?
a) {1: 'A', 2: 'B'}
b) dict([[1,"A"],[2,"B"]])
c) {1,"A",2"B"}
d) { }<term>c<row>3. What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
for i,j in a.items():
 print(i,j,end=" ")
a) 1 A 2 B 3 C
b) 1 2 3
c) A B C
d) 1:"A" 2:"B" 3:"C"<term>a<row>4. What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.get(1,4))
a) 1
b) A
c) 4
d) Invalid syntax for get method<term>b<row>5. What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.get(5,4))
a) Error, invalid syntax
b) A
c) 5
d) 4<term>d<row>6. What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
print(a.setdefault(3))
a) {1: 'A', 2: 'B', 3: 'C'}
b) C
c) {1: 3, 2: 3, 3: 3}
d) No method called setdefault() exists for dictionary<term>b<row>7. What will be the output of the following Python code snippet?
a={1:"A",2:"B",3:"C"}
a.setdefault(4,"D")
print(a)
a) {1: 'A', 2: 'B', 3: 'C', 4: 'D'}
b) None
c) Error
d) [1,3,6,10]<term>a<row>8. What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
b={4:"D",5:"E"}
a.update(b)
print(a)
a) {1: 'A', 2: 'B', 3: 'C'}
b) Method update() doesn't exist for dictionaries
c) {1: 'A', 2: 'B', 3: 'C', 4: 'D', 5: 'E'}
d) {4: 'D', 5: 'E'}<term>c<row>9. What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
b=a.copy()
b[2]="D"
print(a)
a) Error, copy() method doesn't exist for dictionaries
b) {1: 'A', 2: 'B', 3: 'C'}
c) {1: 'A', 2: 'D', 3: 'C'}
d) "None" is printed<term>b<row>10. What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
a.clear()
print(a)
a) None
b) { None:None, None:None, None:None}
c) {1:None, 2:None, 3:None}
d) { }<term>d<row>11. Which of the following isn't true about dictionary keys?
a) More than one key isn't allowed
b) Keys must be immutable
c) Keys must be integers
d) When duplicate keys encountered, the last assignment wins<term>c<row>12. What will be the output of the following Python code?
a={1:5,2:3,3:4}
a.pop(3)
print(a)
a) {1: 5}
b) {1: 5, 2: 3}
c) Error, syntax error for pop() method
d) {1: 5, 3: 4}<term>b<row>13. What will be the output of the following Python code?
a={1:5,2:3,3:4}
print(a.pop(4,9))
a) 9
b) 3
c) Too many arguments for pop() method
d) 4<term>a<row>14. What will be the output of the following Python code?
a={1:"A",2:"B",3:"C"}
for i in a:
 print(i,end=" ")
a) 1 2 3
b) 'A' 'B' 'C'
c) 1 'A' 2 'B' 3 'C'
d) Error, it should be: for i in a.items():<term>a<row>15. What will be the output of the following Python code?
>>> a={1:"A",2:"B",3:"C"}
>>> a.items()
a) Syntax error
b) dict_items([('A'), ('B'), ('C')])
c) dict_items([(1,2,3)])
d) dict_items([(1, 'A'), (2, 'B'), (3, 'C')])<term>d<row>1. Which of the statements about dictionary values if false?
a) More than one key can have the same value
b) The values of the dictionary can be accessed as dict[key]
c) Values of a dictionary must be unique
d) Values of a dictionary can be a mixture of letters and numbers<term>c<row>2. What will be the output of the following Python code snippet?
>>> a={1:"A",2:"B",3:"C"}
>>> del a
a) method del doesn't exist for the dictionary
b) del deletes the values in the dictionary
c) del deletes the entire dictionary
d) del deletes the keys in the dictionary<term>c<row>3. If a is a dictionary with some key-value pairs, what does a.popitem() do?
a) Removes an arbitrary element
b) Removes all the key-value pairs
c) Removes the key-value pair for the key given as an argument
d) Invalid method for dictionary<term>a<row>4. What will be the output of the following Python code snippet?
total={}
def insert(items):
 if items in total:
 total[items] += 1
 else:
 total[items] = 1
insert('Apple')
insert('Ball')
insert('Apple')
print (len(total))
a) 3
b) 1
c) 2
d) 0<term>c<row>5. What will be the output of the following Python code snippet?
a = {}
a[1] = 1
a['1'] = 2
a[1]=a[1]+1
count = 0
for i in a:
 count += a[i]
print(count)
a) 1
b) 2
c) 4
d) Error, the keys can't be a mixture of letters and numbers<term>c<row>6. What will be the output of the following Python code snippet?
numbers = {}
letters = {}
comb = {}
numbers[1] = 56
numbers[3] = 7
letters[4] = 'B'
comb['Numbers'] = numbers
comb['Letters'] = letters
print(comb)
a) Error, dictionary in a dictionary can't exist
b) 'Numbers': {1: 56, 3: 7}
c) {'Numbers': {1: 56}, 'Letters': {4: 'B'}}
d) {'Numbers': {1: 56, 3: 7}, 'Letters': {4: 'B'}}<term>d<row>7. What will be the output of the following Python code snippet?
test = {1:'A', 2:'B', 3:'C'}
test = {}
print(len(test))
a) 0
b) None
c) 3
d) An exception is thrown<term>a<row>8. What will be the output of the following Python code snippet?
test = {1:'A', 2:'B', 3:'C'}
del test[1]
test[1] = 'D'
del test[2]
print(len(test))
a) 0
b) 2
c) Error as the key-value pair of 1:'A' is already deleted
d) 1<term>b<row>9. What will be the output of the following Python code snippet?
a = {}
a[1] = 1
a['1'] = 2
a[1.0]=4
count = 0
for i in a:
 count += a[i]
print(count)
a) An exception is thrown
b) 3
c) 6
d) 2<term>c<row>10. What will be the output of the following Python code snippet?
a={}
a['a']=1
a['b']=[2,3,4]
print(a)
a) Exception is thrown
b) {'b': [2], 'a': 1}
c) {'b': [2], 'a': [3]}
d) {'b': [2, 3, 4], 'a': 1}<term>d<row>11. What will be the output of the following Python code snippet?
>>>import collections
>>> a=collections.Counter([1,1,2,3,3,4,4,4])
>>> a
a) {1,2,3,4}
b) Counter({4, 1, 3, 2})
c) Counter({4: 3, 1: 2, 3: 2, 2: 1})
d) {4: 3, 1: 2, 3: 2, 2: 1}<term>c<row>12. What will be the output of the following Python code snippet?
>>>import collections
>>> b=collections.Counter([2,2,3,4,4,4])
>>> b.most_common(1)
a) Counter({4: 3, 2: 2, 3: 1})
b) {3:1}
c) {4:3}
d) [(4, 3)]<term>d<row>13. What will be the output of the following Python code snippet?
>>>import collections
>>> b=collections.Counter([2,2,3,4,4,4])
>>> b.most_common(1)
a) Counter({4: 3, 2: 2, 3: 1})
b) {3:1}
c) {4:3}
d) [(4, 3)]<term>d<row>14. What will be the output of the following Python code snippet?
>>> import collections
>>> a=collections.Counter([2,2,3,3,3,4])
>>> b=collections.Counter([2,2,3,4,4])
>>> a|b
a) Counter({3: 3, 2: 2, 4: 2})
b) Counter({2: 2, 3: 1, 4: 1})
c) Counter({3: 2})
d) Counter({4: 1})<term>a<row>15. What will be the output of the following Python code snippet?
>>> import collections
>>> a=collections.Counter([3,3,4,5])
>>> b=collections.Counter([3,4,4,5,5,5])
>>> a&b
a) Counter({3: 12, 4: 1, 5: 1})
b) Counter({3: 1, 4: 1, 5: 1})
c) Counter({4: 2})
d) Counter({5: 1})<term>b<row>1. The following Python code is invalid.
class demo(dict):
 def __test__(self,key):
 return []
a = demo()
a['test'] = 7
print(a)
a) True
b) False<term>b<row>2. What will be the output of the following Python code?
count={}
count[(1,2,4)] = 5
count[(4,2,1)] = 7
count[(1,2)] = 6
count[(4,2,1)] = 2
tot = 0
for i in count:
 tot=tot+count[i]
print(len(count)+tot)
a) 25
b) 17
c) 16
d) Tuples can't be made keys of a dictionary<term>c<row>3. What will be the output of the following Python code?
a={}
a[2]=1
a[1]=[2,3,4]
print(a[1][1])
a) [2,3,4]
b) 3
c) 2
d) An exception is thrown<term>b<row>4. What will be the output of the following Python code?
>>> a={'B':5,'A':9,'C':7}
>>> sorted(a)
a) ['A','B','C']
b) ['B','C','A']
c) [5,7,9]
d) [9,5,7]<term>a<row>5. What will be the output of the following Python code?
>>> a={i: i*i for i in range(6)}
>>> a
a) Dictionary comprehension doesn't exist
b) {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6:36}
c) {0: 0, 1: 1, 4: 4, 9: 9, 16: 16, 25: 25}
d) {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}<term>d<row>6. What will be the output of the following Python code?
>>> a={}
>>> a.fromkeys([1,2,3],"check")
a) Syntax error
b) {1:"check",2:"check",3:"check"}
c) "check"
d) {1:None,2:None,3:None}<term>b<row>7. What will be the output of the following Python code?
>>> b={}
>>> all(b)
a) { }
b) False
c) True
d) An exception is thrown<term>c<row>8. If b is a dictionary, what does any(b) do?
a) Returns True if any key of the dictionary is true
b) Returns False if dictionary is empty
c) Returns True if all keys of the dictionary are true
d) Method any() doesn't exist for dictionary<term>a<row>9. What will be the output of the following Python code?
>>> a={"a":1,"b":2,"c":3}
>>> b=dict(zip(a.values(),a.keys()))
>>> b
a) {'a': 1, 'b': 2, 'c': 3}
b) An exception is thrown
c) {'a': 'b': 'c': }
d) {1: 'a', 2: 'b', 3: 'c'}<term>d<row>10. What will be the output of the following Python code?
>>> a={i: 'A' + str(i) for i in range(5)}
>>> a
a) An exception is thrown
b) {0: 'A0', 1: 'A1', 2: 'A2', 3: 'A3', 4: 'A4'}
c) {0: 'A', 1: 'A', 2: 'A', 3: 'A', 4: 'A'}
d) {0: '0', 1: '1', 2: '2', 3: '3', 4: '4'}<term>b<row>11. What will be the output of the following Python code?
>>> a=dict()
>>> a[1]
a) An exception is thrown since the dictionary is empty
b) ' '
c) 1
d) 0<term>a<row>12. What will be the output of the following Python code?
>>> import collections
>>> a=dict()
>>> a=collections.defaultdict(int)
>>> a[1]
a) 1
b) 0
c) An exception is thrown
d) ' '<term>b<row>(since int data type is given within the parenthesis) even if the keys don't exist in the dictionary.
13. What will be the output of the following Python code?
>>> import collections
>>> a=dict()
>>> a=collections.defaultdict(str)
>>> a['A']
a) An exception is thrown since the dictionary is empty
b) ' '
c) 'A'
d) 0<term>b<row>14. What will be the output of the following Python code?
>>> import collections
>>> b=dict()
>>> b=collections.defaultdict(lambda: 7)
>>> b[4]
a) 4
b) 0
c) An exception is thrown
d) 7<term>d<row>15. What will be the output of the following Python code?
>>> import collections
>>> a=collections.OrderedDict((str(x),x) for x in range(3))
>>> a
a) {'2':2, '0':0, '1':1}
b) OrderedDict([('0', 0), ('1', 1), ('2', 2)])
c) An exception is thrown
d) ' '<term>b<row>1. Which of the following functions is a built-in function in python?
a) seed()
b) sqrt()
c) factorial()
d) print()<term>d<row>2. What will be the output of the following Python expression?
round(4.576)
a) 4.5
b) 5
c) 4
d) 4.6<term>b<row>3. The function pow(x,y,z) is evaluated as:
a) (x**y)**z
b) (x**y) / z
c) (x**y) % z
d) (x**y)*z<term>c<row>4. What will be the output of the following Python function?
all([2,4,0,6])
a) Error
b) True
c) False
d) 0<term>c<row>5. What will be the output of the following Python expression?
round(4.5676,2)?
a) 4.5
b) 4.6
c) 4.57
d) 4.56<term>c<row>6. What will be the output of the following Python function?
any([2>8, 4>2, 1>2])
a) Error
b) True
c) False
d) 4>2<term>b<row>7. What will be the output of the following Python function?
import math
abs(math.sqrt(25))
a) Error
b) -5
c) 5
d) 5.0<term>d<row>8. What will be the output of the following Python function?
sum(2,4,6)
sum([1,2,3])
a) Error, 6
b) 12, Error
c) 12, 6
d) Error, Error<term>a<row>9. What will be the output of the following Python function?
all(3,0,4.2)
a) True
b) False
c) Error
d) 0<term>c<row>10. What will be the output of the following Python function?
min(max(False,-3,-4), 2,7)
a) 2
b) False
c) -3
d) -4<term>b<row>1. What will be the output of the following Python functions?
chr('97')
chr(97)
a)
 a
 Error
b)
 'a'
 a
c)
 Error
 a
d)
 Error
 Error<term>c<row>2. What will be the output of the following Python function?
complex(1+2j)
a) Error
b) 1
c) 2j
d) 1+2j<term>d<row>3. What is the output of the function complex()?
a) 0j
b) 0+0j
c) 0
d) Error<term>a<row>4. The function divmod(a,b), where both 'a' and 'b' are integers is evaluated as:
a) (a%b, a//b)
b) (a//b, a%b)
c) (a//b, a*b)
d) (a/b, a%b)<term>b<row>5. What will be the output of the following Python function?
divmod(10.5,5)
divmod(2.4,1.2)
a)
(2.00, 0.50)
(2.00, 0.00)
b)
(2, 0.5)
(2, 0)
c)
(2.0, 0.5)
(2.0, 0.0)
d)
(2, 0.5)
(2)<term>c<row>6. The function complex('2-3j') is valid but the function complex('2 - 3j') is invalid.
a) True
b) False<term>a<row>7. What will be the output of the following Python function?
list(enumerate([2, 3]))
a) Error
b) [(1, 2), (2, 3)]
c) [(0, 2), (1, 3)]
d) [(2, 3)]<term>c<row>8. What will be the output of the following Python functions?
x=3
eval('x^2')
a) Error
b) 1
c) 9
d) 6<term>b<row>9. What will be the output of the following Python functions?
float('1e-003')
float('2e+003')
a)
3.00
300
b)
0.001
2000.0
c)
0.001
200
d)
Error
2003<term>b<row>10. Which of the following functions does not necessarily accept only iterables as arguments?
a) enumerate()
b) all()
c) chr()
d) max()<term>c<row>1. Which of the following functions accepts only integers as arguments?
a) ord()
b) min()
c) chr()
d) any()<term>c<row>2. Suppose there is a list such that: l=[2,3,4]. If we want to print this list in reverse order, which of the following methods should be used?
a) reverse(l)
b) list(reverse[(l)])
c) reversed(l)
d) list(reversed(l))<term>d<row>3. What will be the output of the following Python function?
float(' -12345\n')
(Note that the number of blank spaces before the number is 5)
a) -12345.0 (5 blank spaces before the number)
b) -12345.0
c) Error
d) -12345.000000000.... (infinite decimal places)<term>b<row>4. What will be the output of the following Python function?
ord(65)
ord('A')
a)
A
65
b)
Error
65
c)
A
Error
d)
Error
Error<term>b<row>5. What will be the output of the following Python function?
float('-infinity')
float('inf')
a)
-inf
inf
b)
-infinity
inf
c)
Error
Error
d)
Error
Junk value<term>a<row>6. Which of the following functions will not result in an error when no arguments are passed to it?
a) min()
b) divmod()
c) all()
d) float()<term>d<row>7. What will be the output of the following Python function?
hex(15)
a) f
b) 0xF
c) 0Xf
d) 0xf<term>d<row>8. Which of the following functions does not throw an error?
a) ord()
b) ord(' ')
c) ord(")
d) ord("")<term>b<row>9. What will be the output of the following Python function?
len(["hello",2, 4, 6])
a) 4
b) 3
c) Error
d) 6<term>a<row>10. What will be the output of the following Python function?
oct(7)
oct('7')
a)
Error
07
b)
0o7
Error 
c)
0o7
Error
d)
07
0o7<term>c<row>1. Which of the following is the use of function in python?
a) Functions are reusable pieces of programs
b) Functions don't provide better modularity for your application
c) you can't also create your own functions
d) All of the mentioned<term>a<row>2. Which keyword is used for function?
a) Fun
b) Define
c) Def
d) Function<term>c<row>3. What will be the output of the following Python code?
def sayHello():
 print('Hello World!') 
sayHello() 
sayHello()
a)
Hello World!
Hello World!
b)
'Hello World!'
'Hello World!'
c)
Hello
Hello
d) None of the mentioned<term>a<row>def sayHello():
 print('Hello World!') # block belonging to the function
# End of function #
 
sayHello() # call the function
sayHello() # call the function again
4. What will be the output of the following Python code?
def printMax(a, b):
 if a > b:
 print(a, 'is maximum')
 elif a == b:
 print(a, 'is equal to', b)
 else:
 print(b, 'is maximum')
printMax(3, 4)
a) 3
b) 4
c) 4 is maximum
d) None of the mentioned<term>c<row>5. What will be the output of the following Python code?
x = 50
def func(x):
 print('x is', x)
 x = 2
 print('Changed local x to', x)
func(x)
print('x is now', x)
a)
x is 50
Changed local x to 2
x is now 50
b)
x is 50
Changed local x to 2
x is now 2
c)
x is 50
Changed local x to 2
x is now 100
d) None of the mentioned<term>a<row>Next, we assign the value 2 to x. The name x is local to our function. So, when we change the value of x in the function, the x defined in the main block remains unaffected.
With the last print function call, we display the value of x as defined in the main block, thereby confirming that it is actually unaffected by the local assignment within the previously called function.
6. What will be the output of the following Python code?
x = 50
def func():
 global x
 print('x is', x)
 x = 2
 print('Changed global x to', x)
func()
print('Value of x is', x)
a)
x is 50
Changed global x to 2
Value of x is 50
b)
x is 50
Changed global x to 2
Value of x is 2
c)
x is 50
Changed global x to 50
Value of x is 50
d) None of the mentioned<term>b<row>7. What will be the output of the following Python code?
def say(message, times = 1):
 print(message * times)
say('Hello')
say('World', 5)
a)
Hello
WorldWorldWorldWorldWorld
b)
Hello
World 5
c)
Hello
World,World,World,World,World
d)
Hello
HelloHelloHelloHelloHello<term>a<row>The function named say is used to print a string as many times as specified. If we don't supply a value, then by default, the string is printed just once. We achieve this by specifying a default argument value of 1 to the parameter times.
In the first usage of say, we supply only the string and it prints the string once. In the second usage of say, we supply both the string and an argument 5 stating that we want to say the string message 5 times.
8. What will be the output of the following Python code?
def func(a, b=5, c=10):
 print('a is', a, 'and b is', b, 'and c is', c)
 
func(3, 7)
func(25, c = 24)
func(c = 50, a = 100)
a)
a is 7 and b is 3 and c is 10
a is 25 and b is 5 and c is 24
a is 5 and b is 100 and c is 50
b)
a is 3 and b is 7 and c is 10
a is 5 and b is 25 and c is 24
a is 50 and b is 100 and c is 5
c)
a is 3 and b is 7 and c is 10
a is 25 and b is 5 and c is 24
a is 100 and b is 5 and c is 50
d) None of the mentioned<term>c<row>The function named func has one parameter without a default argument value, followed by two parameters with default argument values.
In the first usage, func(3, 7), the parameter a gets the value 3, the parameter b gets the value 7 and c gets the default value of 10.
In the second usage func(25, c=24), the variable a gets the value of 25 due to the position of the argument. Then, the parameter c gets the value of 24 due to naming i.e. keyword arguments. The variable b gets the default value of 5.
In the third usage func(c=50, a=100), we use keyword arguments for all specified values. Notice that we are specifying the value for parameter c before that for a even though a is defined before c in the function definition.
9. What will be the output of the following Python code?
def maximum(x, y):
 if x > y:
 return x
 elif x == y:
 return 'The numbers are equal'
 else:
 return y
 
print(maximum(2, 3))
a) 2
b) 3
c) The numbers are equal
d) None of the mentioned<term>b<row>10. Which of the following is a feature of DocString?
a) Provide a convenient way of associating documentation with Python modules, functions, classes, and methods
b) All functions should have a docstring
c) Docstrings can be accessed by the __doc__ attribute on objects
d) All of the mentioned<term>d<row>1. Which are the advantages of functions in python?
a) Reducing duplication of code
b) Decomposing complex problems into simpler pieces
c) Improving clarity of the code
d) All of the mentioned<term>d<row>2. What are the two main types of functions?
a) Custom function
b) Built-in function & User defined function
c) User function
d) System function<term>b<row>3. Where is function defined?
a) Module
b) Class
c) Another function
d) All of the mentioned<term>d<row>4. What is called when a function is defined inside a class?
a) Module
b) Class
c) Another function
d) Method<term>d<row>5. Which of the following is the use of id() function in python?
a) Id returns the identity of the object
b) Every object doesn't have a unique id
c) All of the mentioned
d) None of the mentioned<term>a<row>6. Which of the following refers to mathematical function?
a) sqrt
b) rhombus
c) add
d) rhombus<term>a<row>Eg: math import sqrt
A sqrt() function is imported from the math module.
7. What will be the output of the following Python code?
def cube(x):
 return x * x * x 
x = cube(3) 
print x
a) 9
b) 3
c) 27
d) 30<term>c<row>8. What will be the output of the following Python code?
def C2F(c):
 return c * 9/5 + 32
print C2F(100)
print C2F(0)
a)
212
32
b)
314
24
c)
567
98
d) None of the mentioned<term>a<row>9. What will be the output of the following Python code?
def power(x, y=2):
 r = 1
 for i in range(y):
 r = r * x
 return r
print power(3)
print power(3, 3)
a)
212
32
b)
9
27
c)
567
98
d) None of the mentioned<term>b<row>10. What will be the output of the following Python code?
def sum(*args):
 '''Function returns the sum 
 of all values'''
 r = 0
 for i in args:
 r += i
 return r
print sum.__doc__
print sum(1, 2, 3)
print sum(1, 2, 3, 4, 5)
a)
6
15
b)
6
100
c)
123
12345
d) None of the mentioned<term>a<row>1. Python supports the creation of anonymous functions at runtime, using a construct called __________
a) lambda
b) pi
c) anonymous
d) none of the mentioned<term>a<row>2. What will be the output of the following Python code?
y = 6
z = lambda x: x * y
print z(8)
a) 48
b) 14
c) 64
d) None of the mentioned<term>a<row>The lambda function is executed. The number 8 is passed to the anonymous function and it returns 48 as the result. Note that z is not a name for this function. It is only a variable to which the anonymous function was assigned.
3. What will be the output of the following Python code?
lamb = lambda x: x ** 3
print(lamb(5))
a) 15
b) 555
c) 125
d) None of the mentioned<term>c<row>4. Does Lambda contains return statements?
a) True
b) False<term>b<row>5. Lambda is a statement.
a) True
b) False<term>b<row>6. Lambda contains block of statements.
a) True
b) False<term>b<row>7. What will be the output of the following Python code?
def f(x, y, z): return x + y + z
f(2, 30, 400)
a) 432
b) 24000
c) 430
d) No output<term>a<row>8. What will be the output of the following Python code?
def writer():
 title = 'Sir'
 name = (lambda x:title + ' ' + x)
 return name
 
who = writer()
who('Arthur')
a) Arthur Sir
b) Sir Arthur
c) Arthur
d) None of the mentioned<term>b<row>9. What will be the output of the following Python code?
L = [lambda x: x ** 2,
 lambda x: x ** 3,
 lambda x: x ** 4]
 
for f in L:
 print(f(3))
a)
27
81
343
b)
6
9
12
c)
9
27
81
d) None of the mentioned<term>c<row>10. What will be the output of the following Python code?
min = (lambda x, y: x if x < y else y)
 min(101*99, 102*98)
a) 9997
b) 9999
c) 9996
d) None of the mentioned<term>c<row>1. What is a variable defined outside a function referred to as?
a) A static variable
b) A global variable
c) A local variable
d) An automatic variable<term>b<row>2. What is a variable defined inside a function referred to as?
a) A global variable
b) A volatile variable
c) A local variable
d) An automatic variable<term>c<row>3. What will be the output of the following Python code?
i=0
def change(i):
 i=i+1
 return i
change(1)
print(i)
a) 1
b) Nothing is displayed
c) 0
d) An exception is thrown<term>c<row>4. What will be the output of the following Python code?
def a(b):
 b = b + [5]
 
c = [1, 2, 3, 4]
a(c)
print(len(c))
a) 4
b) 5
c) 1
d) An exception is thrown<term>b<row>5. What will be the output of the following Python code?
a=10
b=20
def change():
 global b
 a=45
 b=56
change()
print(a)
print(b)
a)
10
56
b)
45
56
c)
10
20
d) Syntax Error<term>a<row>6. What will be the output of the following Python code?
def change(i = 1, j = 2):
 i = i + j
 j = j + 1
 print(i, j)
change(j = 1, i = 2)
a) An exception is thrown because of conflicting values
b) 1 2
c) 3 3
d) 3 2<term>d<row>7. What will be the output of the following Python code?
def change(one, *two):
 print(type(two))
change(1,2,3,4)
a) Integer
b) Tuple
c) Dictionary
d) An exception is thrown<term>b<row>8. If a function doesn't have a return statement, which of the following does the function return?
a) int
b) null
c) None
d) An exception is thrown without the return statement<term>c<row>9. What will be the output of the following Python code?
def display(b, n):
 while n > 0:
 print(b,end="")
 n=n-1
display('z',3)
a) zzz
b) zz
c) An exception is executed
d) Infinite loop<term>a<row>10. What will be the output of the following Python code?
def find(a, **b):
 print(type(b))
find('letters',A='1',B='2')
a) String
b) Tuple
c) Dictionary
d) An exception is thrown<term>c<row>1. What is the type of each element in sys.argv?
a) set
b) list
c) tuple
d) string<term>d<row>2. What is the length of sys.argv?
a) number of arguments
b) number of arguments + 1
c) number of arguments - 1
d) none of the mentioned<term>b<row>3. What will be the output of the following Python code?
def foo(k):
 k[0] = 1
q = [0]
foo(q)
print(q)
a) [0]
b) [1]
c) [1, 0]
d) [0, 1]<term>b<row>4. How are keyword arguments specified in the function heading?
a) one-star followed by a valid identifier
b) one underscore followed by a valid identifier
c) two stars followed by a valid identifier
d) two underscores followed by a valid identifier<term>c<row>5. How many keyword arguments can be passed to a function in a single function call?
a) zero
b) one
c) zero or more
d) one or more<term>c<row>6. What will be the output of the following Python code?
def foo(fname, val):
 print(fname(val))
foo(max, [1, 2, 3])
foo(min, [1, 2, 3])
a) 3 1
b) 1 3
c) error
d) none of the mentioned<term>a<row>7. What will be the output of the following Python code?
def foo():
 return total + 1
total = 0
print(foo())
a) 0
b) 1
c) error
d) none of the mentioned<term>b<row>8. What will be the output of the following Python code?
def foo():
 total += 1
 return total
total = 0
print(foo())
a) 0
b) 1
c) error
d) none of the mentioned<term>c<row>9. What will be the output of the following Python code?
def foo(x):
 x = ['def', 'abc']
 return id(x)
q = ['abc', 'def']
print(id(q) == foo(q))
a) True
b) False
c) None
d) Error<term>b<row>10. What will be the output of the following Python code?
def foo(i, x=[]):
 x.append(i)
 return x
for i in range(3):
 print(foo(i))
a) [0] [1] [2]
b) [0] [0, 1] [0, 1, 2]
c) [1] [2] [3]
d) [1] [1, 2] [1, 2, 3]<term>b<row>1. What will be the output of the following Python code?
def foo(k):
 k = [1]
q = [0]
foo(q)
print(q)
a) [0]
b) [1]
c) [1, 0]
d) [0, 1]<term>a<row>2. How are variable length arguments specified in the function heading?
a) one star followed by a valid identifier
b) one underscore followed by a valid identifier
c) two stars followed by a valid identifier
d) two underscores followed by a valid identifier<term>a<row>3. Which module in the python standard library parses options received from the command line?
a) getopt
b) os
c) getarg
d) main<term>a<row>4. What is the type of sys.argv?
a) set
b) list
c) tuple
d) string<term>b<row>5. What is the value stored in sys.argv[0]?
a) null
b) you cannot access it
c) the program's name
d) the first argument<term>c<row>6. How are default arguments specified in the function heading?
a) identifier followed by an equal to sign and the default value
b) identifier followed by the default value within backticks (")
c) identifier followed by the default value within square brackets ([])
d) identifier<term>a<row>7. How are required arguments specified in the function heading?
a) identifier followed by an equal to sign and the default value
b) identifier followed by the default value within backticks (")
c) identifier followed by the default value within square brackets ([])
d) identifier<term>d<row>8. What will be the output of the following Python code?
def foo(x):
 x[0] = ['def']
 x[1] = ['abc']
 return id(x)
q = ['abc', 'def']
print(id(q) == foo(q))
a) True
b) False
c) None
d) Error<term>a<row>9. Where are the arguments received from the command line stored?
a) sys.argv
b) os.argv
c) argv
d) none of the mentioned<term>a<row>10. What will be the output of the following Python code?
def foo(i, x=[]):
 x.append(x.append(i))
 return x
for i in range(3):
 y = foo(i)
print(y)
a) [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]]
b) [[0], [[0], 1], [[0], [[0], 1], 2]]
c) [0, None, 1, None, 2, None]
d) [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]]<term>c<row>1. What will be the output of the following Python code?
def f1():
 x=15
 print(x)
x=12
f1()
a) Error
b) 12
c) 15
d) 1512<term>c<row>2. What will be the output of the following Python code?
def f1():
 x=100
 print(x)
x=+1
f1()
a) Error
b) 100
c) 101
d) 99<term>b<row>3. What will be the output of the following Python code?
def san(x):
 print(x+1)
x=-2
x=4
san(12)
a) 13
b) 10
c) 2
d) 5<term>a<row>4. What will be the output of the following Python code?
def f1():
 global x
 x+=1
 print(x)
x=12
print("x")
a) Error
b) 13
c)
13
x
d) x<term>d<row>13
x
5. What will be the output of the following Python code?
def f1(x):
 global x
 x+=1
 print(x)
f1(15)
print("hello")
a) error
b) hello
c) 16
d)
16
hello<term>a<row>hello
6. What will be the output of the following Python code?
x=12
def f1(a,b=x):
 print(a,b)
x=15
f1(4)
a) Error
b) 12 4
c) 4 12
d) 4 15<term>c<row>7. What will be the output of the following Python code?
def f():
 global a
 print(a)
 a = "hello"
 print(a) 
a = "world" 
f()
print(a)
a)
 hello
 hello 
 world
b)
 world 
 hello
 hello
c)
 hello
 world
 world
d)
 world
 hello
 world<term>b<row>world
hello
hello
8. What will be the output of the following Python code?
def f1(a,b=[]):
 b.append(a)
 return b
print(f1(2,[3,4]))
a) [3,2,4]
b) [2,3,4]
c) Error
d) [3,4,2]<term>d<row>9. What will be the output of the following Python code?
def f(p, q, r):
 global s
 p = 10
 q = 20
 r = 30
 s = 40
 print(p,q,r,s)
p,q,r,s = 1,2,3,4
f(5,10,15)
a) 1 2 3 4
b) 5 10 15 4
c) 10 20 30 40
d) 5 10 15 40<term>c<row>10. What will be the output of the following Python code?
def f(x):
 print("outer")
 def f1(a):
 print("inner")
 print(a,x)
f(3)
f1(1)
a)
outer
error
b)
inner 
error 
c)
outer
inner
d) error<term>a<row>11. What will be the output of the following Python code?
x = 5 
def f1():
 global x
 x = 4
def f2(a,b):
 global x
 return a+b+x
f1()
total = f2(1,2)
print(total)
a) Error
b) 7
c) 8
d) 15<term>b<row>12. What will be the output of the following Python code?
x=100
def f1():
 global x
 x=90
def f2():
 global x
 x=80
print(x)
a) 100
b) 90
c) 80
d) Error<term>a<row>13. Read the following Python code carefully and point out the global variables?
y, z = 1, 2
def f():
 global x
 x = y+z
a) x
b) y and z
c) x, y and z
d) Neither x, nor y, nor z<term>c<row>1. Which of the following data structures is returned by the functions globals() and locals()?
a) list
b) set
c) dictionary
d) tuple<term>c<row>2. What will be the output of the following Python code?
x=1
def cg():
 global x
 x=x+1 
cg()
x
a) 2
b) 1
c) 0
d) Error<term>a<row>3. On assigning a value to a variable inside a function, it automatically becomes a global variable.
a) True
b) False<term>b<row>4. What will be the output of the following Python code?
e="butter"
def f(a): print(a)+e
f("bitter")
a) error
b)
 butter
 error
c)
 bitter
 error
d) bitterbutter<term>c<row>5. What happens if a local variable exists with the same name as the global variable you want to access?
a) Error
b) The local variable is shadowed
c) Undefined behavior
d) The global variable is shadowed<term>d<row>6. What will be the output of the following Python code?
a=10
globals()['a']=25
print(a)
a) 10
b) 25
c) Junk value
d) Error<term>b<row>7. What will be the output of the following Python code?
def f(): x=4
x=1
f()
x
a) Error
b) 4
c) Junk value
d) 1<term>d<row>8. ______________ returns a dictionary of the module namespace.
________________ returns a dictionary of the current namespace.
a)
locals()
globals()
b)
locals()
locals()
c)
globals()
locals()
d)
globals()
globals()<term>c<row>1. Which is the most appropriate definition for recursion?
a) A function that calls itself
b) A function execution instance that calls another execution instance of the same function
c) A class method that calls another class method
d) An in-built method that is automatically called<term>b<row>2. Only problems that are recursively defined can be solved using recursion.
a) True
b) False<term>b<row>3. Which of these is false about recursion?
a) Recursive function can be replaced by a non-recursive function
b) Recursive functions usually take more memory space than non-recursive function
c) Recursive functions run faster than non-recursive function
d) Recursion makes programs easier to understand<term>c<row>4. Fill in the line of the following Python code for calculating the factorial of a number.
def fact(num):
 if num == 0: 
 return 1
 else:
 return _____________________
a) num*fact(num-1)
b) (num-1)*(num-2)
c) num*(num-1)
d) fact(num)*fact(num-1)<term>a<row>5. What will be the output of the following Python code?
def test(i,j):
 if(i==0):
 return j
 else:
 return test(i-1,i+j)
print(test(4,7))
a) 13
b) 7
c) Infinite loop
d) 17<term>d<row>6. What will be the output of the following Python code?
l=[]
def convert(b):
 if(b==0):
 return l
 dig=b%2
 l.append(dig)
 convert(b//2)
convert(6)
l.reverse()
for i in l:
 print(i,end="")
a) 011
b) 110
c) 3
d) Infinite loop<term>b<row>7. What is tail recursion?
a) A recursive function that has two base cases
b) A function where the recursive functions leads to an infinite loop
c) A recursive function where the function doesn't return anything and just prints the values
d) A function where the recursive call is the last thing executed by the function<term>d<row>8. Observe the following Python code?
def a(n):
 if n == 0:
 return 0
 else:
 return n*a(n - 1)
def b(n, tot):
 if n == 0:
 return tot
 else:
 return b(n-2, tot-2)
a) Both a() and b() aren't tail recursive
b) Both a() and b() are tail recursive
c) b() is tail recursive but a() isn't
d) a() is tail recursive but b() isn't<term>c<row>9. Which of the following statements is false about recursion?
a) Every recursive function must have a base case
b) Infinite recursion can occur if the base case isn't properly mentioned
c) A recursive function makes the code easier to understand
d) Every recursive function must have a return value<term>d<row>10. What will be the output of the following Python code?
def fun(n):
 if (n > 100):
 return n - 5
 return fun(fun(n+11));
 
print(fun(45))
a) 50
b) 100
c) 74
d) Infinite loop<term>b<row>11. Recursion and iteration are the same programming approach.
a) True
b) False<term>b<row>12. What happens if the base condition isn't defined in recursive programs?
a) Program gets into an infinite loop
b) Program runs once
c) Program runs n number of times where n is the argument given to the function
d) An exception is thrown<term>a<row>13. Which of these is not true about recursion?
a) Making the code look clean
b) A complex task can be broken into sub-problems
c) Recursive calls take up less memory
d) Sequence generation is easier than a nested iteration<term>c<row>14. Which of these is not true about recursion?
a) It's easier to code some real-world problems using recursion than non-recursive equivalent
b) Recursive functions are easy to debug
c) Recursive calls take up a lot of memory
d) Programs using recursion take longer time than their non-recursive equivalent<term>b<row>15. What will be the output of the following Python code?
def a(n):
 if n == 0:
 return 0
 elif n == 1:
 return 1
 else:
 return a(n-1)+a(n-2)
for i in range(0,4):
 print(a(i),end=" ")
a) 0 1 2 3
b) An exception is thrown
c) 0 1 1 2 3
d) 0 1 1 2<term>d<row>1. Which type of copy is shown in the following python code?
l1=[[10, 20], [30, 40], [50, 60]]
ls=list(l1)
ls
[[10, 20], [30, 40], [50, 60]]
a) Shallow copy
b) Deep copy
c) memberwise
d) All of the mentioned<term>a<row>2. What will be the output of the following Python code?
l=[2, 3, [4, 5]]
l2=l.copy()
l2[0]=88
l
l2
a)
[88, 2, 3, [4, 5]]
[88, 2, 3, [4, 5]]
b)
[2, 3, [4, 5]]
[88, 2, 3, [4, 5]]
c)
[88, 2, 3, [4, 5]]
[2, 3, [4, 5]]
d)
[2, 3, [4, 5]]
[2, 3, [4, 5]]<term>b<row>3. In _______________ copy, the base address of the objects are copied. In _______________ copy, the base address of the objects are not copied.
a) deep. shallow
b) memberwise, shallow
c) shallow, deep
d) deep, memberwise<term>c<row>In deep copy, the base address of the objects are not copied.
Note that memberwise copy is another name for shallow copy.
4. The nested list undergoes shallow copy even when the list as a whole undergoes deep copy.
a) True
b) False<term>a<row>5. What will be the output of the following Python code and state the type of copy that is depicted?
l1=[2, 4, 6, 8]
l2=[1, 2, 3]
l1=l2
l2
a) [2, 4, 6, 8], shallow copy
b) [2, 4, 6, 8], deep copy
c) [1, 2, 3], shallow copy
d) [1, 2, 3], deep copy<term>c<row>6. What will be the output of the following Python code?
l1=[10, 20, 30]
l2=l1
id(l1)==id(l2)
 
l2=l1.copy()
id(l1)==id(l2)
a) False, False
b) False, True
c) True, True
d) True, False<term>d<row>7. What will be the output of the following Python code?
l1=[1, 2, 3, [4]]
l2=list(l1)
id(l1)==id(l2)
a) True
b) False
c) Error
d) Address of l1<term>b<row>8. What will be the output of the following Python code?
l1=[10, 20, 30, [40]]
l2=copy.deepcopy(l1)
l1[3][0]=90
l1
l2
a)
[10, 20, 30, [40]]
[10, 20, 30, 90]
b) Error
c)
[10, 20, 30 [90]]
[10, 20, 30, [40]]
d)
[10, 20, 30, [40]]
[10, 20, 30, [90]]<term>c<row>9. In ____________________ copy, the modification done on one list affects the other list. In ____________________ copy, the modification done on one list does not affect the other list.
a) shallow, deep
b) memberwise, shallow
c) deep, shallow
d) deep, memberwise<term>a<row>10. What will be the output of the following Python code?
l1=[1, 2, 3, (4)]
l2=l1.copy()
l2
l1
a)
[1, 2, 3, (4)]
[1, 2, 3, 4]
b)
[1, 2, 3, 4]
[1, 2, 3, (4)]
c)
[1, 2, 3, 4]
[1, 2, 3, 4]
d)
[1, 2, 3, (4)]
[1, 2, 3, (4)]<term>c<row>11. What will be the output of the following Python code?
def check(n):
 if n < 2:
 return n % 2 == 0
 return check(n - 2)
print(check(11))
a) False
b) True
c) 1
d) An exception is thrown<term>a<row>12. What is the base case in the Merge Sort algorithm when it is solved recursively?
a) n=0
b) n=1
c) A list of length one
d) An empty list<term>c<row>13. What will be the output of the following Python code?
a = [1, 2, 3, 4, 5]
b = lambda x: (b (x[1:]) + x[:1] if x else []) 
print(b (a))
a) 1 2 3 4 5
b) [5,4,3,2,1]
c) []
d) Error, lambda functions can't be called recursively<term>c<row>1. What will be the output of the following Python code?
odd=lambda x: bool(x%2)
numbers=[n for n in range(10)]
print(numbers)
n=list()
for i in numbers:
 if odd(i):
 continue
 else:
 break
a) [0, 2, 4, 6, 8, 10]
b) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
c) [1, 3, 5, 7, 9]
d) Error<term>b<row>2. What will be the output of the following Python code?
f=lambda x:bool(x%2)
print(f(20), f(21))
a) False True
b) False False
c) True True
d) True False<term>a<row>3. What will be the output of the following Python code?
import functools
l=[1,2,3,4]
print(functools.reduce(lambda x,y:x*y,l))
a) Error
b) 10
c) 24
d) No output<term>c<row>4. What will be the output of the following Python code?
l=[1, -2, -3, 4, 5]
def f1(x):
 return x<2
m1=filter(f1, l)
print(list(m1))
a) [1, 4, 5 ]
b) Error
c) [-2, -3]
d) [1, -2, -3]<term>d<row>5. What will be the output of the following Python code?
l=[-2, 4]
m=map(lambda x:x*2, l)
print(m)
a) [-4, 16]
b) Address of m
c) Error
d)
-4
 16<term>b<row>6. What will be the output of the following Python code?
l=[1, -2, -3, 4, 5]
def f1(x):
 return x<-1
m1=map(f1, l)
print(list(m1))
a) [False, False, False, False, False]
b) [False, True, True, False, False]
c) [True, False, False, True, True]
d) [True, True, True, True, True]<term>b<row>7. What will be the output of the following Python code?
l=[1, 2, 3, 4, 5]
m=map(lambda x:2**x, l)
print(list(m))
a) [1, 4, 9, 16, 25 ]
b) [2, 4, 8, 16, 32 ]
c) [1, 0, 1, 0, 1]
d) Error<term>b<row>8. What will be the output of the following Python code?
import functools
l=[1, 2, 3, 4, 5]
m=functools.reduce(lambda x, y:x if x>y else y, l)
print(m)
a) Error
b) Address of m
c) 1
d) 5<term>d<row>9. What will be the output of the following Python code?
l=[n for n in range(5)]
f=lambda x:bool(x%2)
print(f(3), f(1))
for i in range(len(l)):
 if f(l[i]):
 del l[i]
 print(i)
a)
 True True
 1
 2
 Error
b)
 False False
 1
 2
c)
 True False 
 1
 2
 Error
d)
 False True
 1
 2<term>a<row>10. What will be the output of the following Python code?
m=reduce(lambda x: x-3 in range(4, 10))
print(list(m))
a) [1, 2, 3, 4, 5, 6, 7]
b) No output
c) [1, 2, 3, 4, 5, 6]
d) Error<term>b<row>11. Which of the following numbers will not be a part of the output list of the following Python code?
def sf(a):
 return a%3!=0 and a%5!=0
m=filter(sf, range(1, 31))
print(list(m))
a) 1
b) 29
c) 6
d) 10<term>d<row>12. The single line equivalent of the following Python code?
l=[1, 2, 3, 4, 5]
def f1(x):
 return x<0
m1=filter(f1, l)
print(list(m1))
a) filter(lambda x:x<0, l)
b) filter(lambda x, y: x<0, l)
c) filter(reduce x<0, l)
d) reduce(x: x<0, l)<term>a<row>13. What will be the output of the following Python code?
list(map((lambda x:x^2), range(10)))
a) [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
b) Error
c) [2, 3, 0, 1, 6, 7, 4, 5, 10, 11]
d) No output<term>c<row>14. What will be the output of the following Python code?
list(map((lambda x:x**2), filter((lambda x:x%2==0), range(10))))
a) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
b) [0, 4, 16, 36, 64]
c) Error
d) No output<term>b<row>15. The output of the following codes are the same.
[x**2 for x in range(10)]
list(map((lambda x:x**2), range(10)))
a) True
b) False<term>a<row>1. What will be the output of the following Python code?
elements = [0, 1, 2]
def incr(x):
 return x+1
print(list(map(elements, incr)))
a) [1, 2, 3]
b) [0, 1, 2]
c) error
d) none of the mentioned<term>c<row>2. What will be the output of the following Python code?
elements = [0, 1, 2]
def incr(x):
 return x+1
print(list(map(incr, elements)))
a) [1, 2, 3]
b) [0, 1, 2]
c) error
d) none of the mentioned<term>a<row>3. What will be the output of the following Python code?
x = ['ab', 'cd']
print(list(map(upper, x)))
a) ['AB', 'CD']
b) ['ab', 'cd']
c) error
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
def to_upper(k):
 return k.upper()
x = ['ab', 'cd']
print(list(map(upper, x)))
a) ['AB', 'CD']
b) ['ab', 'cd']
c) none of the mentioned
d) error<term>d<row>5. What will be the output of the following Python code?
def to_upper(k):
 return k.upper()
x = ['ab', 'cd']
print(list(map(to_upper, x)))
a) ['AB', 'CD']
b) ['ab', 'cd']
c) none of the mentioned
d) error<term>a<row>6. What will be the output of the following Python code?
def to_upper(k):
 k.upper()
x = ['ab', 'cd']
print(list(map(to_upper, x)))
a) ['AB', 'CD']
b) ['ab', 'cd']
c) none of the mentioned
d) error<term>c<row>7. What will be the output of the following Python code?
x = ['ab', 'cd']
print(map(len, x))
a) ['ab', 'cd']
b) [2, 2]
c) ['2', '2']
d) none of the mentioned<term>d<row>8. What will be the output of the following Python code?
x = ['ab', 'cd']
print(list(map(len, x)))
a) ['ab', 'cd']
b) [2, 2]
c) ['2', '2']
d) none of the mentioned<term>b<row>9. What will be the output of the following Python code?
x = ['ab', 'cd']
print(len(map(list, x)))
a) [2, 2]
b) 2
c) 4
d) none of the mentioned<term>d<row>10. What will be the output of the following Python code?
x = ['ab', 'cd']
print(len(list(map(list, x))))
a) 2
b) 4
c) error
d) none of the mentioned<term>a<row>1. What will be the output of the following Python code?
x = ['ab', 'cd']
print(len(list(map(list, x))))))
a) 2
b) 4
c) error
d) none of the mentioned<term>c<row>2. What will be the output of the following Python code?
x = ['ab', 'cd']
print(list(map(list, x)))
a) ['a', 'b', 'c', 'd']
b) [['ab'], ['cd']]
c) [['a', 'b'], ['c', 'd']]
d) none of the mentioned<term>c<row>3. What will be the output of the following Python code?
x = [12, 34]
print(len(list(map(len, x))))
a) 2
b) 1
c) error
d) none of the mentioned<term>c<row>4. What will be the output of the following Python code?
x = [12, 34]
print(len(list(map(int, x))))
a) 2
b) 1
c) error
d) none of the mentioned<term>a<row>5. What will be the output of the following Python code?
x = [12, 34]
print(len(''.join(list(map(int, x)))))
a) 4
b) 2
c) error
d) none of the mentioned<term>c<row>6. What will be the output of the following Python code?
x = [12, 34]
print(len(''.join(list(map(str, x)))))
a) 4
b) 5
c) 6
d) error<term>a<row>7. What will be the output of the following Python code?
x = [12, 34]
print(len(' '.join(list(map(int, x)))))
a) 4
b) 5
c) 6
d) error<term>d<row>8. What will be the output of the following Python code?
x = [12.1, 34.0]
print(len(' '.join(list(map(str, x)))))
a) 6
b) 8
c) 9
d) error<term>c<row>9. What will be the output of the following Python code?
x = [12.1, 34.0]
print(' '.join(list(map(str, x))))
a) 12 1 34 0
b) 12.1 34
c) 121 340
d) 12.1 34.0<term>d<row>10. What will be the output of the following Python code?
x = [[0], [1]]
print(len(' '.join(list(map(str, x)))))
a) 2
b) 3
c) 7
d) 8<term>c<row>1. What will be the output of the following Python code?
x = [[0], [1]]
print((' '.join(list(map(str, x)))))
a) ('[0] [1]',)
b) ('01',)
c) [0] [1]
d) 01<term>c<row>2. What will be the output of the following Python code?
x = [[0], [1]]
print((' '.join(list(map(str, x))),))
a) ('[0] [1]',)
b) ('01')
c) [0] [1]
d) 01<term>a<row>3. What will be the output of the following Python code?
x = [34, 56]
print((''.join(list(map(str, x))),))
a) 3456
b) (3456)
c) ('3456')
d) ('3456',)<term>d<row>4. What will be the output of the following Python code?
x = [34, 56]
print((''.join(list(map(str, x)))),)
a) 3456
b) (3456)
c) ('3456')
d) ('3456',)<term>a<row>5. What will be the output of the following Python code?
x = [34, 56]
print(len(map(str, x)))
a) [34, 56]
b) ['34', '56']
c) 34 56
d) error<term>d<row>6. What will be the output of the following Python code?
x = 'abcd'
print(list(map(list, x)))
a) ['a', 'b', 'c', 'd']
b) ['abcd']
c) [['a'], ['b'], ['c'], ['d']]
d) none of the mentioned<term>c<row>7. What will be the output of the following Python code?
x = abcd
print(list(map(list, x)))
a) ['a', 'b', 'c', 'd']
b) ['abcd']
c) [['a'], ['b'], ['c'], ['d']]
d) none of the mentioned<term>d<row>8. What will be the output of the following Python code?
x = 1234
print(list(map(list, x)))
a) [1, 2, 3, 4]
b) [1234]
c) [[1], [2], [3], [4]]
d) none of the mentioned<term>d<row>9. What will be the output of the following Python code?
x = 1234
print(list(map(list, [x])))
a) [1, 2, 3, 4]
b) [1234]
c) [[1], [2], [3], [4]]
d) none of the mentioned<term>d<row>10. What will be the output of the following Python code?
x = 'abcd'
print(list(map([], x)))
a) ['a', 'b', 'c', 'd']
b) ['abcd']
c) [['a'], ['b'], ['c'], ['d']]
d) none of the mentioned<term>d<row>11. Is Python code compiled or interpreted?
a) Python code is only compiled
b) Python code is both compiled and interpreted
c) Python code is only interpreted
d) Python code is neither compiled nor interpreted<term>b<row>12. Which of these is the definition for packages in Python?
a) A folder of python modules
b) A set of programs making use of Python modules
c) A set of main modules
d) A number of files containing Python definitions and statements<term>a<row>13. Which of these is false about a package?
a) A package can have subfolders and modules
b) Each import package need not introduce a namespace
c) import folder.subfolder.mod1 imports packages
d) from folder.subfolder.mod1 import objects imports packages<term>b<row>1. Which of these definitions correctly describes a module?
a) Denoted by triple quotes for providing the specification of certain program elements
b) Design and implementation of specific functionality to be incorporated into a program
c) Defines the specification of how it is to be used
d) Any program that reuses code<term>b<row>2. Which of the following is not an advantage of using modules?
a) Provides a means of reuse of program code
b) Provides a means of dividing up tasks
c) Provides a means of reducing the size of the program
d) Provides a means of testing individual parts of the program<term>c<row>3. Program code making use of a given module is called a ______ of the module.
a) Client
b) Docstring
c) Interface
d) Modularity<term>a<row>4. ______ is a string literal denoted by triple quotes for providing the specifications of certain program elements.
a) Interface
b) Modularity
c) Client
d) Docstring<term>d<row>5. Which of the following is true about top-down design process?
a) The details of a program design are addressed before the overall design
b) Only the details of the program are addressed
c) The overall design of the program is addressed before the details
d) Only the design of the program is addressed<term>c<row>6. In top-down design every module is broken into same number of submodules.
a) True
b) False<term>b<row>7. All modular designs are because of a top-down design process.
a) True
b) False<term>b<row>8. What will be the output of the following Python code?
#mod1
def change(a):
 b=[x*2 for x in a]
 print(b)
#mod2
def change(a):
 b=[x*x for x in a]
 print(b)
from mod1 import change
from mod2 import change
#main
s=[1,2,3]
change(s)
a) [2,4,6]
b) [1,4,9]
c)
[2,4,6]
[1,4,9]
d) There is a name clash<term>d<row>9. Which of the following isn't true about main modules?
a) When a python file is directly executed, it is considered main module of a program
b) Main modules may import any number of modules
c) Special name given to main modules is: __main__
d) Other main modules can import main modules<term>d<row>10. Which of the following is not a valid namespace?
a) Global namespace
b) Public namespace
c) Built-in namespace
d) Local namespace<term>b<row>11. Which of the following is false about "import modulename" form of import?
a) The namespace of imported module becomes part of importing module
b) This form of import prevents name clash
c) The namespace of imported module becomes available to importing module
d) The identifiers in module are accessed as: modulename.identifier<term>a<row>12. Which of the following is false about "from-import" form of import?
a) The syntax is: from modulename import identifier
b) This form of import prevents name clash
c) The namespace of imported module becomes part of importing module
d) The identifiers in module are accessed directly as: identifier<term>b<row>13. Which of the statements about modules is false?
a) In the "from-import" form of import, identifiers beginning with two underscores are private and aren't imported
b) dir() built-in function monitors the items in the namespace of the main module
c) In the "from-import" form of import, all identifiers regardless of whether they are private or public are imported
d) When a module is loaded, a compiled version of the module with file extension .pyc is automatically produced<term>c<row>14. What will be the output of the following Python code?
from math import factorial
print(math.factorial(5))
a) 120
b) Nothing is printed
c) Error, method factorial doesn't exist in math module
d) Error, the statement should be: print(factorial(5))<term>d<row>15. What is the order of namespaces in which Python looks for an identifier?
a) Python first searches the global namespace, then the local namespace and finally the built-in namespace
b) Python first searches the local namespace, then the global namespace and finally the built-in namespace
c) Python first searches the built-in namespace, then the global namespace and finally the local namespace
d) Python first searches the built-in namespace, then the local namespace and finally the global namespace<term>b<row>1. What is returned by math.ceil(3.4)?
a) 3
b) 4
c) 4.0
d) 3.0<term>b<row>2. What is the value returned by math.floor(3.4)?
a) 3
b) 4
c) 4.0
d) 3.0<term>a<row>3. What will be the output of print(math.copysign(3, -1))?
a) 1
b) 1.0
c) -3
d) -3.0<term>d<row>4. What is displayed on executing print(math.fabs(-3.4))?
a) -3.4
b) 3.4
c) 3
d) -3<term>b<row>5. Is the output of the function abs() the same as that of the function math.fabs()?
a) sometimes
b) always
c) never
d) none of the mentioned<term>a<row>6. What is the value returned by math.fact(6)?
a) 720
b) 6
c) [1, 2, 3, 6]
d) error<term>d<row>7. What is the value of x if x = math.factorial(0)?
a) 0
b) 1
c) error
d) none of the mentioned<term>b<row>8. What is math.factorial(4.0)?
a) 24
b) 1
c) error
d) none of the mentioned<term>a<row>9. What will be the output of print(math.factorial(4.5))?
a) 24
b) 120
c) error
d) 24.0<term>c<row>10. What is math.floor(0o10)?
a) 8
b) 10
c) 0
d) 9<term>a<row>1. What does the function math.frexp(x) return?
a) a tuple containing the mantissa and the exponent of x
b) a list containing the mantissa and the exponent of x
c) a tuple containing the mantissa of x
d) a list containing the exponent of x<term>a<row>2. What is the result of math.fsum([.1 for i in range(20)])?
a) 2.0
b) 20
c) 2
d) 2.0000000000000004<term>a<row>3. What is the result of sum([.1 for i in range(20)])?
a) 2.0
b) 20
c) 2
d) 2.0000000000000004<term>d<row>4. What is returned by math.isfinite(float('inf'))?
a) True
b) False
c) None
d) error<term>b<row>5. What is returned by math.isfinite(float('nan'))?
a) True
b) False
c) None
d) error<term>b<row>6. What is x if x = math.isfinite(float('0.0'))?
a) True
b) False
c) None
d) error<term>a<row>7. What will be the output of the following Python code?
>>> -float('inf') + float('inf')
a) inf
b) nan
c) 0
d) 0.0<term>b<row>8. What will be the output of the following Python code?
print(math.isinf(float('-inf')))
a) error, the minus sign shouldn't have been inside the brackets
b) error, there is no function called isinf
c) True
d) False<term>c<row>9. What is the value of x if x = math.ldexp(0.5, 1)?
a) 1
b) 2.0
c) 0.5
d) none of the mentioned<term>d<row>10. What is returned by math.modf(1.0)?
a) (0.0, 1.0)
b) (1.0, 0.0)
c) (0.5, 1)
d) (0.5, 1.0)<term>a<row>1. What is the result of math.trunc(3.1)?
a) 3.0
b) 3
c) 0.1
d) 1<term>b<row>2. What is the output of print(math.trunc('3.1'))?
a) 3
b) 3.0
c) error
d) none of the mentioned<term>c<row>3. Which of the following is the same as math.exp(p)?
a) e ** p
b) math.e ** p
c) p ** e
d) p ** math.e<term>b<row>4. What is returned by math.expm1(p)?
a) (math.e ** p) - 1
b) math.e ** (p - 1)
c) error
d) none of the mentioned<term>a<row>5. What is the default base used when math.log(x) is found?
a) e
b) 10
c) 2
d) none of the mentioned<term>a<row>6. Which of the following aren't defined in the math module?
a) log2()
b) log10()
c) logx()
d) none of the mentioned<term>c<row>7. What is returned by int(math.pow(3, 2))?
a) 6
b) 9
c) error, third argument required
d) error, too many arguments<term>b<row>8. What is output of print(math.pow(3, 2))?
a) 9
b) 9.0
c) None
d) None of the mentioned<term>b<row>9. What is the value of x if x = math.sqrt(4)?
a) 2
b) 2.0
c) (2, -2)
d) (2.0, -2.0)<term>b<row>10. What does math.sqrt(X, Y) do?
a) calculate the Xth root of Y
b) calculate the Yth root of X
c) error
d) return a tuple with the square root of X and Y<term>c<row>1. What will be the output of the following Python code?
import datetime
d=datetime.date(2016,7,24)
print(d)
a) Error
b) 2017-07-24
c) 2017-7-24
d) 24-7-2017<term>b<row>2. What will be the output of the following Python code?
import datetime
d=datetime.date(2017,06,18)
print(d)
a) Error
b) 2017-06-18
c) 18-06-2017
d) 06-18-2017<term>a<row>3. What will be the output of the following Python code if the system date is 18th August, 2016?
tday=datetime.date.today()
print(tday.month())
a) August
b) Aug
c) 08
d) 8<term>d<row>4. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?
import datetime
tday=datetime.date.today()
print(tday)
a) 18-06-2017
b) 06-18-2017
c) 2017-06-18
d) Error<term>c<row>5. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?
tday=datetime.date.today()
print(tday.weekday())
a) 6
b) 1
c) 0
d) 7<term>a<row>6. What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)?
tday=datetime.date.today()
print(tday.isoweekday())
a) Wed
b) Wednesday
c) 2
d) 3<term>d<row>7. Point out the error (if any) in the code shown below if the system date is 18th June, 2017?
tday=datetime.date.today()
bday=datetime.date(2017,9,18)
till_bday=bday-tday
print(till_bday)
a) 3 months, 0:00:00
b) 90 days, 0:00:00
c) 3 months 2 days, 0:00:00
d) 92 days, 0:00:00<term>d<row>8. The value returned when we use the function isoweekday() is ______ and that for the function weekday() is ________ if the system date is 19th June, 2017 (Monday).
a) 0,0
b) 0,1
c) 1,0
d) 1,1<term>c<row>9. Which of the following will throw an error if used after the following Python code?
tday=datetime.date.today()
bday=datetime.date(2017,9,18)
t_day=bday-tday
a) print(t_day.seconds)
b) print(t_day.months)
c) print(t_day.max)
d) print(t_day.resolution)<term>b<row>10. What will be the output of the following Python code if the system date is: 6/19/2017
tday=datetime.date.today()
tdelta=datetime.timedelta(days=10)
print(tday+tdelta)
a) 2017-16-19
b) 2017-06-9
c) 2017-06-29
d) Error<term>c<row>1. The output of both of the print statements is the same.
import datetime
dt_1 = datetime.datetime.today()
dt_2 = datetime.datetime.now()
print(dt_1)
print(dt_2)
a) True
b) False<term>b<row>2. Which of the following functions can be used to find the coordinated universal time, assuming that the datetime module has already been imported?
a) datetime.utc()
b) datetime.datetime.utc()
c) datetime.utcnow()
d) datetime.datetime.utcnow()<term>d<row>3. What will be the output of the following Python code?
import time
time.time()
a) The number of hours passed since 1st January, 1970
b) The number of days passed since 1st January, 1970
c) The number of seconds passed since 1st January, 1970
d) The number of minutes passed since 1st January, 1970<term>c<row>4. What will be the output of the following Python code, if the time module has already been imported?
def num(m):
 t1 = time.time()
 for i in range(0,m):
 print(i)
 t2 = time.time()
 print(str(t2-t1))
 
 num(3)
a)
 1
 2
 3
 The time taken for the execution of the code
b)
 3
 The time taken for the execution of the code
c)
 1
 2
 3
 UTC time 
d)
 3
 UTC time<term>a<row>Output:
1
2
3
The time taken for the execution of the code
5. What will be the output of the following Python code?
import time
time.asctime()
a) Current date only
b) UTC time
c) Current date and time
d) Current time only<term>c<row>6. What will be the output of the following Python code?
import time
t=(2010, 9, 20, 8, 15, 12, 6)
time.asctime(t)
a) '20 Sep 2010 8:15:12 Sun'
b) '2010 20 Sept 08:15:12 Sun'
c) 'Sun Sept 20 8:15:12 2010'
d) Error<term>d<row>7. What will be the output of the following Python code?
import time
t=(2010, 9, 20, 8, 45, 12, 6, 0, 0)
time.asctime(t)
a) 'Sep 20 2010 08:45:12 Sun'
b) 'Sun Sep 20 08:45:12 2010'
c) '20 Sep 08:45:12 Sun 2010'
d) '2010 20 Sep 08:45:12 Sun'<term>b<row>8. The sleep function (under the time module) is used to ___________
a) Pause the code for the specified number of seconds
b) Return the specified number of seconds, in terms of milliseconds
c) Stop the execution of the code
d) Return the output of the code had it been executed earlier by the specified number of seconds<term>a<row>9. What will be the output of the following Python code?
import time
for i in range(0,5):
 print(i)
 time.sleep(2)
a) After an interval of 2 seconds, the numbers 1, 2, 3, 4, 5 are printed all together
b) After an interval of 2 seconds, the numbers 0, 1, 2, 3, 4 are printed all together
c) Prints the numbers 1, 2, 3, 4, 5 at an interval of 2 seconds between each number
d) Prints the numbers 0, 1, 2, 3, 4 at an interval of 2 seconds between each number<term>d<row>10. What will be the output if we try to extract only the year from the following Python code? (time.struct_time(tm_year=2017, tm_mon=6, tm_mday=25, tm_hour=18, tm_min=26, tm_sec=6, tm_wday=6, tm_yday=176, tm_isdst=0))
import time
t=time.localtime()
print(t)
a) t[1]
b) tm_year
c) t[0]
d) t_year<term>c<row>11. State whether true or false.
s = time.time()
t= time.time()
s == t
a) True
b) False<term>b<row>1. To include the use of functions which are present in the random library, we must use the option:
a) import random
b) random.h
c) import.random
d) random.random<term>a<row>2. The output of the following Python code is either 1 or 2.
import random
random.randint(1,2)
a) True
b) False<term>a<row>3. What will be the output of the following Python code?
import random
random.choice(2,3,4)
a) An integer other than 2, 3 and 4
b) Either 2, 3 or 4
c) Error
d) 3 only<term>c<row>4. What will be the output of the following Python code?
import random
random.choice([10.4, 56.99, 76])
a) Error
b) Either 10.4, 56.99 or 76
c) Any number other than 10.4, 56.99 and 76
d) 56.99 only<term>b<row>5. What will be the output of the following Python function (random module has already been imported)?
random.choice('sun')
a) sun
b) u
c) either s, u or n
d) error<term>c<row>6. What will be the output of the following Python function, assuming that the random module has already been imported?
random.uniform(3,4)
a) Error
b) Either 3 or 4
c) Any integer other than 3 and 4
d) Any decimal value between 3 and 4<term>d<row>7. What will be the output of the following Python function if the random module has already been imported?
random.randint(3.5,7)
a) Error
b) Any integer between 3.5 and 7, including 7
c) Any integer between 3.5 and 7, excluding 7
d) The integer closest to the mean of 3.5 and 7<term>a<row>8. Which of the following functions helps us to randomize the items of a list?
a) seed
b) randomise
c) shuffle
d) uniform<term>c<row>9. What will be the output of the following Python code?
random.seed(3)
random.randint(1,5)
2
random.seed(3)
random.randint(1,5)
a) 3
b) 2
c) Any integer between 1 and 5, including 1 and 5
d) Any integer between 1 and 5, excluding 1 and 5<term>b<row>10. What is the interval of the value generated by the function random.random(), assuming that the random module has already been imported?
a) (0,1)
b) (0,1]
c) [0,1]
d) [0,1)<term>d<row>11. What will be the output of the following Python code?
random.randrange(0,91,5)
a) 10
b) 18
c) 79
d) 95<term>a<row>12. Both the functions randint and uniform accept ____________ parameters.
a) 0
b) 1
c) 3
d) 2<term>d<row>13. The randrange function returns only an integer value.
a) True
b) False<term>a<row>14. What will be the output of the following Python code?
random.randrange(1,100,10)
a) 32
b) 67
c) 91
d) 80<term>c<row>15. What will be the output of the following Python function, assuming that the random library has already been included?
random.shuffle[1,2,24]
a) Randomized list containing the same numbers in any order
b) The same list, that is [1,2,24]
c) A list containing any random numbers between 1 and 24
d) Error<term>d<row>An example of the correct syntax:
>>> l=['a','b','c','d']
>>> random.shuffle(l)
>>> print(l)
1. What the does random.seed(3) return?
a) True
b) None
c) 3
d) 1<term>b<row>2. Which of the following cannot be returned by random.randrange(4)?
a) 0
b) 3
c) 2.3
d) none of the mentioned<term>c<row>3. Which of the following is equivalent to random.randrange(3)?
a) range(3)
b) random.choice(range(0, 3))
c) random.shuffle(range(3))
d) random.select(range(3))<term>b<row>4. The function random.randint(4) can return only one of the following values. Which?
a) 4
b) 3.4
c) error
d) 5<term>c<row>5. Which of the following is equivalent to random.randint(3, 6)?
a) random.choice([3, 6])
b) random.randrange(3, 6)
c) 3 + random.randrange(3)
d) 3 + random.randrange(4)<term>d<row>6. Which of the following will not be returned by random.choice("1 ,")?
a) 1
b) (space)
c) ,
d) none of the mentioned<term>d<row>7. Which of the following will never be displayed on executing print(random.choice({0: 1, 2: 3}))?
a) 0
b) 1
c) KeyError: 1
d) none of the mentioned<term>a<row>8. What does random.shuffle(x) do when x = [1, 2, 3]?
a) error
b) do nothing, it is a placeholder for a function that is yet to be implemented
c) shuffle the elements of the list in-place
d) none of the mentioned<term>c<row>9. Which type of elements are accepted by random.shuffle()?
a) strings
b) lists
c) tuples
d) integers<term>b<row>10. What is the range of values that random.random() can return?
a) [0.0, 1.0]
b) (0.0, 1.0]
c) (0.0, 1.0)
d) [0.0, 1.0)<term>d<row>1. Which of the following functions can help us to find the version of python that we are currently working on?
a) sys.version
b) sys.version()
c) sys.version(0)
d) sys.version(1)<term>a<row>2. Which of the following functions is not defined under the sys module?
a) sys.platform
b) sys.path
c) sys.readline
d) sys.argv<term>c<row>3. The output of the functions len("abc") and sys.getsizeof("abc") will be the same.
a) True
b) False<term>b<row>4. What will be the output of the following Python code, if the code is run on Windows operating system?
import sys
if sys.platform[:2]== 'wi':
 print("Hello")
a) Error
b) Hello
c) No output
d) Junk value<term>b<row>5. What will be the output of the following Python code, if the sys module has already been imported?
sys.stdout.write("hello world")
a) helloworld
b) hello world10
c) hello world11
d) error<term>c<row>6. What will be the output of the following Python code?
import sys
sys.stdin.readline()
Sanfoundry
a) 'Sanfoundry\n'
b) 'Sanfoundry'
c) 'Sanfoundry10'
d) Error<term>a<row>7. What will be the output of the following Python code?
import sys
eval(sys.stdin.readline())
"India"
a) India5
b) India
c) 'India\n'
d) 'India'<term>d<row>8. What will be the output of the following Python code?
import sys
eval(sys.stdin.readline())
Computer
a) Error
b) 'Computer\n'
c) Computer8
d) Computer<term>a<row>9. What will be the output of the following Python code?
import sys
sys.argv[0]
a) Junk value
b) ' '
c) No output
d) Error<term>b<row>10. What will be the output of the following Python code?
import sys
sys.stderr.write("hello")
a) 'hello'
b) 'hello\n'
c) hello
d) hello5<term>d<row>11. What will be the output of the following Python code?
import sys
sys.argv
a) ' '
b) [ ]
c) [' ']
d) Error<term>c<row>12. To obtain a list of all the functions defined under sys module, which of the following functions can be used?
a) print(sys)
b) print(dir.sys)
c) print(dir[sys])
d) print(dir(sys))<term>d<row>13. The output of the function len(sys.argv) is ____________
a) Error
b) 1
c) 0
d) Junk value<term>b<row>1. What does os.name contain?
a) the name of the operating system dependent module imported
b) the address of the module os
c) error, it should've been os.name()
d) none of the mentioned<term>a<row>2. What does print(os.geteuid()) print?
a) the group id of the current process
b) the user id of the current process
c) both the group id and the user of the current process
d) none of the mentioned<term>b<row>3. What does os.getlogin() return?
a) name of the current user logged in
b) name of the superuser
c) gets a form to login as a different user
d) all of the mentioned<term>a<row>4. What does os.close(f) do?
a) terminate the process f
b) terminate the process f if f is not responding
c) close the file descriptor f
d) return an integer telling how close the file pointer is to the end of file<term>c<row>5. What does os.fchmod(fd, mode) do?
a) change permission bits of the file
b) change permission bits of the directory
c) change permission bits of either the file or the directory
d) none of the mentioned<term>a<row>6. Which of the following functions can be used to read data from a file using a file descriptor?
a) os.reader()
b) os.read()
c) os.quick_read()
d) os.scan()<term>b<row>7. Which of the following returns a string that represents the present working directory?
a) os.getcwd()
b) os.cwd()
c) os.getpwd()
d) os.pwd()<term>a<row>8. What does os.link() do?
a) create a symbolic link
b) create a hard link
c) create a soft link
d) none of the mentioned<term>b<row>9. Which of the following can be used to create a directory?
a) os.mkdir()
b) os.creat_dir()
c) os.create_dir()
d) os.make_dir()<term>a<row>10. Which of the following can be used to create a symbolic link?
a) os.symlink()
b) os.symb_link()
c) os.symblin()
d) os.ln()<term>a<row>1. What will be the output shape of the following Python code?
import turtle
t=turtle.Pen()
for i in range(0,4):
 t.forward(100)
 t.left(120)
a) square
b) rectangle
c) triangle
d) kite<term>c<row>2. The number of lines drawn in each case, assuming that the turtle module has been imported:
Case 1:
for i in range(0,10):
 turtle.forward(100)
 turtle.left(90)
Case 2:
for i in range(1,10):
 turtle.forward(100)
 turtle.left(90)
a) 10, 9
b) 9, 10
c) 9, 9
d) 10, 10<term>a<row>3. The command which helps us to reset the pen (turtle):
a) turtle.reset
b) turtle.penreset
c) turtle.penreset()
d) turtle.reset()<term>d<row>4. Fill in the blank such that the following Python code results in the formation of an inverted, equilateral triangle.
import turtle
t=turtle.Pen()
for i in range(0,3):
 t.forward(150)
 t.right(_____)
a) -60
b) 120
c) -120
d) 60<term>b<row>5. What will be the output shape of the following Python code?
import turtle
t=turtle.Pen()
for i in range(1,4):
 t.forward(60)
 t.left(90)
a) Rectangle
b) Trapezium
c) Triangle
d) Square<term>d<row>6. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
for i in range(0,4):
 t.forward(100)
 t.left(90)
 
t.penup()
t.left(90)
t.forward(200)
for i in range(0,4):
 t.forward(100)
 t.left(90)
a) Error
b) 1 square
c) 2 squares, at a separation of100 units, joined by a straight line
d) 2 squares, at a separation of 100 units, without a line joining them<term>b<row>7. Which of the following functions does not accept any arguments?
a) position
b) fillcolor
c) goto
d) setheading()<term>a<row>8. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.goto(300,9)
t.position()
a) 300.00, 9.00
b) 9, 300
c) 300, 9
d) 9.00, 300.00<term>a<row>9. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
for i in range(0,5):
 t.left(144)
 t.forward(100)
a) Trapezium
b) Parallelepiped
c) Tetrahedron
d) Star<term>d<row>10. What will be the output of the following Python functions?
import turtle
t=turtle.Pen()
for i in range(0,3):
 t.forward(100)
 t.left(120)
 
t.back(100)
for i in range(0,3):
 t.forward(100)
 t.left(120)
a) Error
b) Two triangles, joined by a straight line
c) Two triangles, joined at one vertex
d) Two separate triangles, not connected by a line<term>c<row>1. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.color(0,0,1)
t.begin_fill()
t.circle(15)
t.end_fill()
a) Error
b) A circle filled in with the colour red
c) A circle filled in with the colour blue
d) A circle filled in with the colour green<term>c<row>2. Which of the following functions can be used to make the arrow black?
a) turtle.color(0,1,0)
b) turtle.color(1,0,0)
c) turtle.color(0,0,1)
d) turtle.color(0,0,0)<term>d<row>3. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.color(1,1,1)
t.begin_fill()
for i in range(0,3):
 t.forward(100)
 t.right(120)
 t.end_fill()
a) Blank page
b) A triangle filled in with the colour yellow
c) A triangle which is not filled in with any colour
d) Error<term>a<row>4. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.color(0,1,0)
t.begin_fill()
for i in range(0,4):
 t.forward(100)
 t.right(90)
a) A square filled in with the colour green
b) A square outlined with the colour green
c) Blank canvas
d) Error<term>c<row>5. In which direction is the turtle pointed by default?
a) North
b) South
c) East
d) West<term>c<row>6. The command used to set only the x coordinate of the turtle at 45 units is:
a) reset(45)
b) setx(45)
c) xset(45)
d) xreset(45)<term>b<row>7. Which of the following functions returns a value in degrees, counterclockwise from the horizontal right?
a) heading()
b) degrees()
c) position()
d) window_height()<term>a<row>8. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.right(90)
t.forward(100)
t.heading()
a) 0.0
b) 90.0
c) 270.0
d) 360.0<term>c<row>9. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.clear()
t.isvisible()
a) Yes
b) True
c) No
d) False<term>b<row>10. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.forward(100)
t.left(90)
t.clear()
t.position()
a) 0.00, 90.00
b) 0.00, 0.00
c) 100.00, 90.00
d) 100.00, 100.00<term>d<row>1. Which of the following functions results in an error?
a) turtle.shape("turtle")
b) turtle.shape("square")
c) turtle.shape("triangle")
d) turtle.shape("rectangle")<term>d<row>2. What will be the output of the following Python code?
import turtle
t=turtle.Pen
t.tilt(75)
t.forward(100)
a) A straight line of 100 units tiled at 75 degrees from the horizontal
b) A straight line of 100 units tilted at 15 degrees from the horizontal
c) A straight line of 100 units lying along the horizontal
d) Error<term>c<row>3. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.backward(100)
t.penup()
t.right(45)
t.isdown()
a) True
b) False
c) Yes
d) No<term>b<row>4. The function used to alter the thickness of the pen to 'x' units:
a) turtle.width(x)
b) turtle.span(x)
c) turtle.girth(x)
d) turtle.thickness(x)<term>a<row>5. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?
import turtle
t=turtle.Pen()
t.goto(100,0)
t.towards(0,0)
a) 0.0
b) 180.0
c) 270.0
d) 360.0<term>b<row>6. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.position()
(100.00,0.00)
t.goto(100,100)
t.distance(100,0)
a) 0.0
b) Error
c) 100.0, 100.0
d) 100.0<term>d<row>7. The output of the following Python code will result in a shape similar to the alphabet ___________
import turtle
t=turtle.Turtle()
t1=turtle.Turtle()
t.left(45)
t1.left(135)
t.forward(100)
t1.forward(100)
a) V
b) Inverted V
c) X
d) T<term>a<row>8. The output of the following Python code is similar to the alphabet _______________
import turtle
t=turtle.Pen()
t1=turtle.Pen()
t2=turtle.Pen()
t.forward(100)
t1.forward(100)
t2.forward(100)
t1.left(90)
t1.forward(75)
t2.right(90)
t2.forward(75)
a) X
b) N
c) T
d) M<term>c<row>9. The following Python code will result in an error.
import turtle
t=turtle.Pen()
t.speed(-45)
t.circle(30)
a) True
b) False<term>b<row>10. What will be the output of the following Python code?
import turtle()
t=turtle.Pen()
t.goto(50,60)
t1=t.clone()
t1.ycor()
a) 0.0
b) 50.0
c) 60.0
d) Error<term>c<row>11. What will be the output shape of the following Python code?
import turtle
t=turtle.Pen()
for i in range(0,6):
 t.forward(100)
 t.left(60)
a) Hexagon
b) Octagon
c) Pentagon
d) Heptagon<term>a<row>12. What will be the output of the following Python code?
import turtle
t=turtle.Pen()
t.resizemode("sanfoundry")
t.resizemode()
a) user
b) auto
c) nonresize
d) error<term>c<row>1. The process of pickling in Python includes:
a) conversion of a list into a datatable
b) conversion of a byte stream into Python object hierarchy
c) conversion of a Python object hierarchy into byte stream
d) conversion of a datatable into a list<term>c<row>2. To sterilize an object hierarchy, the _____________ function must be called. To desterilize a data stream, the ______________ function must be called.
a) dumps(), undumps()
b) loads(), unloads()
c) loads(), dumps()
d) dumps(), loads()<term>d<row>3. Pick the correct statement regarding pickle and marshal modules.
a) The pickle module supports primarily .pyc files whereas marshal module is used to sterilize Python objects
b) The pickle module keeps track of the objects that have already been sterilized whereas the marshal module does not do this
c) The pickle module cannot be used to sterilize user defined classes and their instances whereas marshal module can be used to perform this task
d) The format of sterilization of the pickle module is not guaranteed to be supported across all versions of Python. The marshal module sterilization is compatible across all the versions of Python<term>b<row>4. What will be the output of the following Python code?
pickle.HIGHEST_PROTOCOL
a) 4
b) 5
c) 3
d) 6<term>a<row>5. Which of the following Python codes will result in an error?
object = 'a'
a) >>> pickle.dumps(object)
b) >>> pickle.dumps(object, 3)
c) >>> pickle.dumps(object, 3, True)
d) >>> pickle.dumps('a', 2)<term>c<row>6. Which of the following functions can be used to find the protocol version of the pickle module currently being used?
a) pickle.DEFAULT
b) pickle.CURRENT
c) pickle.CURRENT_PROTOCOL
d) pickle.DEFAULT_PROTOCOL<term>d<row>7. The output of the following two Python codes is exactly the same.
object
'a'
CODE 1
>>> pickle.dumps('a', 3)
CODE 2
>>> pickle.dumps(object, 3)
a) True
b) False<term>a<row>8. Which of the following functions can accept more than one positional argument?
a) pickle.dumps
b) pickle.loads
c) pickle.dump
d) pickle.load<term>a<row>9. Which of the following functions raises an error when an unpicklable object is encountered by Pickler?
a) pickle.PickleError
b) pickle.PicklingError
c) pickle.UnpickleError
d) pickle.UnpicklingError<term>b<row>10. The pickle module defines ______ exceptions and exports _______ classes.
a) 2, 3
b) 3, 4
c) 3, 2
d) 4, 3<term>c<row>11. Which of the following cannot be pickled?
a) Functions which are defined at the top level of a module with lambda
b) Functions which are defined at the top level of a module with def
c) Built-in functions which are defined at the top level of a module
d) Classes which are defined at the top level of a module<term>a<row>12. If __getstate__() returns _______________ the __setstate__() module will not be called on pickling.
a) True value
b) False value
c) ValueError
d) OverflowError<term>b<row>13. Lambda functions cannot be pickled because:
a) Lambda functions only deal with binary values, that is, 0 and 1
b) Lambda functions cannot be called directly
c) Lambda functions cannot be identified by the functions of the pickle module
d) All lambda functions have the same name, that is, <lambda><term>d<row>14. The module _______________ is a comparatively faster implementation of the pickle module.
a) cPickle
b) nPickle
c) gPickle
d) tPickle<term>a<row>15. The copy module uses the ___________________ protocol for shallow and deep copy.
a) pickle
b) marshal
c) shelve
d) copyreg<term>a<row>1. Which module in Python supports regular expressions?
a) re
b) regex
c) pyregex
d) none of the mentioned<term>a<row>2. Which of the following creates a pattern object?
a) re.create(str)
b) re.regex(str)
c) re.compile(str)
d) re.assemble(str)<term>c<row>3. What does the function re.match do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned<term>a<row>4. What does the function re.search do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned<term>b<row>5. What will be the output of the following Python code?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.groups())
a) ('we', 'are', 'humans')
b) (we, are, humans)
c) ('we', 'humans')
d) 'we are humans'<term>a<row>6. What will be the output of the following Python code?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group())
a) ('we', 'are', 'humans')
b) (we, are, humans)
c) ('we', 'humans')
d) 'we are humans'<term>d<row>7. What will be the output of the following Python code?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group(2))
a) 'are'
b) 'we'
c) 'humans'
d) 'we are humans'<term>c<row>8. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groupdict())
a) {'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}
b) ('horses', 'are', 'fast')
c) 'horses are fast'
d) 'are'<term>a<row>9. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groups())
a) {'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}
b) ('horses', 'are', 'fast')
c) 'horses are fast'
d) 'are'<term>b<row>10. What will be the output of the following Python code?
sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.group(2))
a) {'animal': 'horses', 'verb': 'are', 'adjective': 'fast'}
b) ('horses', 'are', 'fast')
c) 'horses are fast'
d) 'are'<term>d<row>1. The character Dot (that is, '.') in the default mode, matches any character other than _____________
a) caret
b) ampersand
c) percentage symbol
d) newline<term>d<row>2. The expression a{5} will match _____________ characters with the previous regular expression.
a) 5 or less
b) exactly 5
c) 5 or more
d) exactly 4<term>b<row>3. ________ matches the start of the string.
________ matches the end of the string.
a) '^', '$'
b) '$', '^'
c) '$', '?'
d) '?', '^'<term>a<row>'$' (dollar sign) matches the end of the string.
4. Which of the following will result in an error?
a)
>>> p = re.compile("d")
>>> p.search("door")
b) >>> p = re.escape('hello')
c) >>> p = re.subn()
d) >>> p = re.purge()<term>c<row>5. What will be the output of the following Python code?
re.split('\W+', 'Hello, hello, hello.')
a) ['Hello', 'hello', 'hello.']
b) ['Hello, 'hello', 'hello']
c) ['Hello', 'hello', 'hello', '.']
d) ['Hello', 'hello', 'hello', "]<term>d<row>6. What will be the output of the following Python function?
re.findall("hello world", "hello", 1)
a) ["hello"]
b) [ ]
c) hello
d) hello world<term>b<row>>>> re.findall("hello", "hello", 1) The output is: ['hello'] Hence the output of the code shown in this question is [].
7. Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match='aaaa'>.
a) >>> re.search('aaaa', "alohaaaa", 0)
b) >>> re.match('aaaa', "alohaaaa", 0)
c) >>> re.match('aaa', "alohaaa", 0)
d) >>> re.search('aaa', "alohaaa", 0)<term>a<row>>>> re.search('aaaa', "alohaaaa", 0)
8. Which of the following functions clears the regular expression cache?
a) re.sub()
b) re.pos()
c) re.purge()
d) re.subn()<term>c<row>9. What will be the output of the following Python code?
import re
re.ASCII
a) 8
b) 32
c) 64
d) 256<term>d<row>10. Which of the following functions results in case insensitive matching?
a) re.A
b) re.U
c) re.I
d) re.X<term>c<row>1. What will be the output of the following Python code?
re.compile('hello', re.X)
a) ['h', 'e', 'l', 'l', 'o']
b) re.compile('hello', re.VERBOSE)
c) Error
d) Junk value<term>b<row>2. What will be the output of the following Python code?
re.split('[a-c]', '0a3B6', re.I)
a) Error
b) ['a', 'B']
c) ['0', '3B6']
d) ['a']<term>c<row>3. What will be the output of the following Python code?
re.sub('morning', 'evening', 'good morning')
a) 'good evening'
b) 'good'
c) 'morning'
d) 'evening'<term>a<row>4. The function re.error raises an exception if a particular string contains no match for the given pattern.
a) True
b) False<term>b<row>5. What will be the output of the following Python code?
re.escape('new**world')
a) 'new world'
b) 'new\\*\\*world'
c) '**'
d) 'new', '*', '*', 'world'<term>b<row>6. What will be the output of the following Python code?
re.fullmatch('hello', 'hello world')
a) No output
b) []
c) <_sre.sre_match match="hello" object="" span="(0,">
d) Error<term>a<row>7. Choose the option wherein the two choices do not refer to the same option.
a)
 re.I
 re.IGNORECASE
b)
 re.M
 re.MULTILINE
c)
 re.X
 re.VERBOSE
d)
 re.L
 re.LOWERCASE<term>d<row>8. The difference between the functions re.sub and re.subn is that re.sub returns a _______________ whereas re.subn returns a __________________
a) string, list
b) list, tuple
c) string, tuple
d) tuple, list<term>c<row>9. What will be the output of the following Python code?
re.split('mum', 'mumbai*', 1)
a) Error
b) [", 'bai*']
c) [", 'bai']
d) ['bai*']<term>b<row>10. What will be the output of the following Python code?
re.findall('good', 'good is good')
re.findall('good', 'bad is good')
a)
['good', 'good']
['good']
b)
('good', 'good')
(good)
c)
('good')
('good')
d)
['good']
['good']<term>a<row>1. What will be the output of the following Python code?
re.split(r'(n\d)=', 'n1=3.1, n2=5, n3=4.565')
a) Error
b) [", 'n1', '3.1, ', 'n2', '5, ', 'n3', '4.565']
c) ['n1', '3.1, ', 'n2', '5, ', 'n3', '4.565']
d) ['3.1, ', '5, ', '4.565']<term>b<row>[", 'n1', '3.1, ', 'n2', '5, ', 'n3', '4.565'].
2. The function of re.search is __________
a) Matches a pattern at the start of the string
b) Matches a pattern at the end of the string
c) Matches a pattern from any part of a string
d) Such a function does not exist<term>c<row>3. Which of the following functions creates a Python object?
a) re.compile(str)
b) re.assemble(str)
c) re.regex(str)
d) re.create(str)<term>a<row>4. Which of the following pattern matching modifiers permits whitespace and comments inside the regular expression?
a) re.L
b) re.S
c) re.U
d) re.X<term>d<row>5. What will be the output of the following Python code?
s = 'welcome home'
m = re.match(r'(.*)(.*?)', s)
print(m.group())
a) ('welcome', 'home')
b) ['welcome', 'home']
c) welcome home
d) ['welcome' // 'home' ]<term>c<row>6. The function of re.match is ____________
a) Error
b) Matches a pattern anywhere in the string
c) Matches a pattern at the end of the string
d) Matches a pattern at the start of the string<term>d<row>7. The special character \B matches the empty string, but only when it is _____________
a) at the beginning or end of a word
b) not at the beginning or end of a word
c) at the beginning of the word
d) at the end of the word<term>b<row>8. What will be the output of the following Python code?
import re
s = "A new day"
m = re.match(r'(.*)(.*?)', s)
print(m.group(2))
 
print(m.group(0))
a)
No output
A new day
b)
No output
No output
c)
['A', 'new', 'day']
('A', 'new', 'day')
d)
Error
['A', 'new', 'day']<term>a<row>9. Which of the following special characters matches a pattern only at the end of the string?
a) \B
b) \X
c) \Z
d) \A<term>c<row>10. The output of the following two Python codes are the same.
p = re.compile('hello')
r = p.match('hello everyone')
print(r.group(0))
 
r = re.match('hello', 'hello everyone')
print(r.group(0))
a) True
b) False<term>a<row>11. What will be the output of the following Python code?
re.match('sp(.*)am', 'spam')
a) <_sre.SRE_Match object; span=(1, 4), match='spam'>
b) <_sre.SRE_Match object; span=(0, 4), match='spam'>
c) No output
d) Error<term>b<row>12. Which of the following special characters represents a comment (that is, the contents of the parenthesis are simply ignores)?
a) (?:...)
b) (?=...)
c) (?!...)
d) (?#...)<term>d<row>13. Which of the codes shown below results in a match?
a) re.match('George(?=Washington)', 'George Washington')
b) re.match('George(?=Washington)', 'George')
c) re.match('George(?=Washington)', 'GeorgeWashington')
d) re.match('George(?=Washington)', 'Georgewashington')<term>c<row>re.match('George(?=Washington)', 'GeorgeWashington')
1. What will be the output of the following Python code?
re.split(r'(a)(t)', 'Maths is a difficult subject')
a) ['M a t h s i s a d i f f i c u l t s u b j e c t']
b) ['Maths', 'is', 'a', 'difficult', 'subject']
c) 'Maths is a difficult subject'
d) ['M', 'a', 't', 'hs is a difficult subject']<term>d<row>2. The output of the following two Python codes are the same.
CODE 1
>>> re.split(r'(a)(t)', 'The night sky')
CODE 2
>>> re.split(r'\s+', 'The night sky')
a) True
b) False<term>b<row>3. What will be the output of the following Python code?
import re
s = 'abc123 xyz666 lmn-11 def77'
re.sub(r'\b([a-z]+)(\d+)', r'\2\1:', s)
a) '123abc: 666xyz: lmn-11 77def:'
b) '77def: lmn-11: 666xyz: 123abc'
c) 'abc123:', 'xyz666:', 'lmn-11:', 'def77:'
d) 'abc123: xyz666: lmn-11: def77'<term>a<row>4. What will be the output of the following Python code?
re.subn('A', 'X', 'AAAAAA', count=4)
a) 'XXXXAA, 4'
b) ('AAAAAA', 4)
c) ('XXXXAA', 4)
d) 'AAAAAA, 4'<term>c<row>5. What will be the output of the following Python code?
n = re.sub(r'\w+', 'Hello', 'Cats and dogs')
a)
 Hello
 Hello
 Hello
b) 'Hello Hello Hello'
c) ['Hello', 'Hello', 'Hello']
d) ('Hello', 'Hello', 'Hello')<term>b<row>6. What will be the output of the following Python code?
w = re.compile('[A-Za-z]+')
w.findall('It will rain today')
a) 'It will rain today'
b) ('It will rain today')
c) ['It will rain today']
d) ['It', 'will', 'rain', 'today']<term>d<row>7. In the functions re.search.start(group) and re.search.end(group), if the argument groups not specified, it defaults to __________
a) Zero
b) None
c) One
d) Error<term>a<row>8. What will be the output of the following Python code?
re.split(r'\s+', 'Chrome is better than explorer', maxspilt=3)
a) ['Chrome', 'is', 'better', 'than', 'explorer']
b) ['Chrome', 'is', 'better', 'than explorer']
c) ('Chrome', 'is', 'better', 'than explorer')
d) 'Chrome is better' 'than explorer'<term>b<row>9. What will be the output of the following Python code?
a=re.compile('[0-9]+')
a.findall('7 apples and 3 mangoes')
a) ['apples' 'and' 'mangoes']
b) (7, 4)
c) ['7', '4']
d) Error<term>c<row>1. Which of the following functions returns a dictionary mapping group names to group numbers?
a) re.compile.group
b) re.compile.groupindex
c) re.compile.index
d) re.compile.indexgroup<term>b<row>2. Which of the following statements regarding the output of the function re.match is incorrect?
a) 'pq*' will match 'pq'
b) 'pq?' matches 'p'
c) 'p{4}, q' does not match 'pppq'
d) 'pq+' matches 'p'<term>d<row>3. The following Python code snippet results in an error.
c=re.compile(r'(\d+)(\[A-Z]+)([a-z]+)')
c.groupindex
a) True
b) False<term>b<row>4. Which of the following functions does not accept any argument?
a) re.purge
b) re.compile
c) re.findall
d) re.match<term>a<row>5. What will be the output of the following Python code?
a = re.compile('0-9')
a.findall('3 trees')
a) []
b) ['3']
c) Error
d) ['trees']<term>c<row>>>> a = re.compile('[0-9]')
>>> a.findall('3 trees')
['3'].
6. Which of the following lines of code will not show a match?
a) >>> re.match('ab*', 'a')
b) >>> re.match('ab*', 'ab')
c) >>> re.match('ab*', 'abb')
d) >>> re.match('ab*', 'ba')<term>d<row>>>> re.match('ab*', 'ba').
7. What will be the output of the following Python code?
m = re.search('a', 'The blue umbrella')
m.re.pattern
a) {}
b) 'The blue umbrella'
c) 'a'
d) No output<term>c<row>8. What will be the output of the following Python code?
re.sub('Y', 'X', 'AAAAAA', count=2)
a) 'YXAAAA'
b) ('YXAAAA')
c) ('AAAAAA')
d) 'AAAAAA'<term>d<row>1. To open a file c:\scores.txt for reading, we use _____________
a) infile = open("c:\scores.txt", "r")
b) infile = open("c:\\scores.txt", "r")
c) infile = open(file = "c:\scores.txt", "r")
d) infile = open(file = "c:\\scores.txt", "r")<term>b<row>2. To open a file c:\scores.txt for writing, we use ____________
a) outfile = open("c:\scores.txt", "w")
b) outfile = open("c:\\scores.txt", "w")
c) outfile = open(file = "c:\scores.txt", "w")
d) outfile = open(file = "c:\\scores.txt", "w")<term>b<row>3. To open a file c:\scores.txt for appending data, we use ____________
a) outfile = open("c:\\scores.txt", "a")
b) outfile = open("c:\\scores.txt", "rw")
c) outfile = open(file = "c:\scores.txt", "w")
d) outfile = open(file = "c:\\scores.txt", "w")<term>a<row>4. Which of the following statements are true?
a) When you open a file for reading, if the file does not exist, an error occurs
b) When you open a file for writing, if the file does not exist, a new file is created
c) When you open a file for writing, if the file exists, the existing file is overwritten with the new file
d) All of the mentioned<term>d<row>5. To read two characters from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()<term>a<row>6. To read the entire remaining contents of the file as a string from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()<term>b<row>7. What will be the output of the following Python code?
f = None
for i in range (5):
 with open("data.txt", "w") as f:
 if i > 2:
 break
print(f.closed)
a) True
b) False
c) None
d) Error<term>a<row>8. To read the next line of the file from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()<term>c<row>9. To read the remaining lines of the file from a file object infile, we use ____________
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()<term>d<row>10. The readlines() method returns ____________
a) str
b) a list of lines
c) a list of single characters
d) a list of integers<term>b<row>1. Which are the two built-in functions to read a line of text from standard input, which by default comes from the keyboard?
a) Raw_input & Input
b) Input & Scan
c) Scan & Scanner
d) Scanner<term>a<row>raw_input and input
2. What will be the output of the following Python code?
str = raw_input("Enter your input: ");
print "Received input is : ", str
a)
Enter your input: Hello Python
Received input is : Hello Python
b)
Enter your input: Hello Python
Received input is : Hello 
c)
Enter your input: Hello Python
Received input is : Python
d) None of the mentioned<term>a<row>3. What will be the output of the following Python code?
str = input("Enter your input: ");
print "Received input is : ", str
a)
Enter your input: [x*5 for x in range(2,10,2)]
Received input is : [x*5 for x in range(2,10,2)]
b)
Enter your input: [x*5 for x in range(2,10,2)]
Received input is : [10, 30, 20, 40]
c)
Enter your input: [x*5 for x in range(2,10,2)]
Received input is : [10, 10, 30, 40]
d) None of the mentioned<term>a<row>4. Which one of the following is not attributes of file?
a) closed
b) softspace
c) rename
d) mode<term>c<row>Attribute Description
file.closed Returns true if file is closed, false otherwise.
file.mode Returns access mode with which file was opened.
file.name Returns name of the file.
file.softspace Returns false if space explicitly required with print, true otherwise.
5. What is the use of tell() method in python?
a) tells you the current position within the file
b) tells you the end position within the file
c) tells you the file is opened or not
d) none of the mentioned<term>a<row>6. What is the current syntax of rename() a file?
a) rename(current_file_name, new_file_name)
b) rename(new_file_name, current_file_name,)
c) rename(()(current_file_name, new_file_name))
d) none of the mentioned<term>a<row>rename(current_file_name, new_file_name)
7. What is the current syntax of remove() a file?
a) remove(file_name)
b) remove(new_file_name, current_file_name,)
c) remove(() , file_name))
d) none of the mentioned<term>a<row>8. What will be the output of the following Python code?
fo = open("foo.txt", "rw+")
print "Name of the file: ", fo.name
 
# Assuming file has following 5 lines
# This is 1st line
# This is 2nd line
# This is 3rd line
# This is 4th line
# This is 5th line
 
for index in range(5):
 line = fo.next()
 print "Line No %d - %s" % (index, line)
 
# Close opened file
fo.close()
a) Compilation Error
b) Syntax Error
c) Displays Output
d) None of the mentioned<term>c<row>Output:
Name of the file: foo.txt
Line No 0 - This is 1st line
Line No 1 - This is 2nd line
Line No 2 - This is 3rd line
Line No 3 - This is 4th line
Line No 4 - This is 5th line
9. What is the use of seek() method in files?
a) sets the file's current position at the offset
b) sets the file's previous position at the offset
c) sets the file's current position within the file
d) none of the mentioned<term>a<row>Following is the syntax for seek() method:
fileObject.seek(offset[, whence])
Parameters
offset — This is the position of the read/write pointer within the file.
whence — This is optional and defaults to 0 which means absolute file positioning, other values are 1 which means seek relative to the current position and 2 means seek relative to the file's end.
10. What is the use of truncate() method in file?
a) truncates the file size
b) deletes the content of the file
c) deletes the file size
d) none of the mentioned<term>a<row>fileObject.truncate( [ size ])
Parameters
size — If this optional argument is present, the file is truncated to (at most) that size.
1. Which is/are the basic I/O connections in file?
a) Standard Input
b) Standard Output
c) Standard Errors
d) All of the mentioned<term>d<row>2. What will be the output of the following Python code? (If entered name is sanfoundry)
import sys
print 'Enter your name: ',
name = ''
while True:
 c = sys.stdin.read(1)
 if c == '\n':
 break
 name = name + c
 
print 'Your name is:', name
a) sanfoundry
b) sanfoundry, sanfoundry
c) San
d) None of the mentioned<term>a<row>Output:
Enter your name: sanfoundry
Your name is: sanfoundry
3. What will be the output of the following Python code?
import sys
sys.stdout.write(' Hello\n')
sys.stdout.write('Python\n')
a) Compilation Error
b) Runtime Error
c) Hello Python
d)
Hello
Python<term>d<row>Output:
Hello
Python
4. Which of the following mode will refer to binary data?
a) r
b) w
c) +
d) b<term>d<row>r Reading
w Writing
a Appending
b Binary data
+ Updating.
5. What is the pickling?
a) It is used for object serialization
b) It is used for object deserialization
c) None of the mentioned
d) All of the mentioned<term>a<row>6. What is unpickling?
a) It is used for object serialization
b) It is used for object deserialization
c) None of the mentioned
d) All of the mentioned<term>b<row>7. What is the correct syntax of open() function?
a) file = open(file_name [, access_mode][, buffering])
b) file object = open(file_name [, access_mode][, buffering])
c) file object = open(file_name)
d) none of the mentioned<term>b<row>file object = open(file_name [, access_mode][, buffering])
Here is parameters' detail:
file_name: The file_name argument is a string value that contains the name of the file that you want to access.
access_mode: The access_mode determines the mode in which the file has to be opened, i.e., read, write, append, etc. A complete list of possible values is given below in the table. This is optional parameter and the default file access mode is read (r).
buffering: If the buffering value is set to 0, no buffering will take place. If the buffering value is 1, line buffering will be performed while accessing a file. If you specify the buffering value as an integer greater than 1, then buffering action will be performed with the indicated buffer size. If negative, the buffer size is the system default(default behavior).
8. What will be the output of the following Python code?
fo = open("foo.txt", "wb")
print "Name of the file: ", fo.name
fo.flush()
fo.close()
a) Compilation Error
b) Runtime Error
c) No Output
d) Flushes the file when closing them<term>d<row>9. Correct syntax of file.writelines() is?
a) file.writelines(sequence)
b) fileObject.writelines()
c) fileObject.writelines(sequence)
d) none of the mentioned<term>c<row>Syntax
Following is the syntax for writelines() method:
fileObject.writelines( sequence ).
10. Correct syntax of file.readlines() is?
a) fileObject.readlines( sizehint );
b) fileObject.readlines();
c) fileObject.readlines(sequence)
d) none of the mentioned<term>a<row>Syntax
Following is the syntax for readlines() method:
fileObject.readlines( sizehint );
Parameters
sizehint — This is the number of bytes to be read from the file.
1. In file handling, what does this terms means "r, a"?
a) read, append
b) append, read
c) write, append
d) none of the mentioned<term>a<row>2. What is the use of "w" in file handling?
a) Read
b) Write
c) Append
d) None of the mentioned<term>b<row>fh = open("filename_here", "w").
3. What is the use of "a" in file handling?
a) Read
b) Write
c) Append
d) None of the mentioned<term>c<row>fh =open("filename_here", "a").
4. Which function is used to read all the characters?
a) Read()
b) Readcharacters()
c) Readall()
d) Readchar()<term>a<row>content = fh.read().
5. Which function is used to read single line from file?
a) Readline()
b) Readlines()
c) Readstatement()
d) Readfullline()<term>b<row>content = fh.readline().
6. Which function is used to write all the characters?
a) write()
b) writecharacters()
c) writeall()
d) writechar()<term>a<row>fh = open("hello.txt","w")
write("Hello World").
7. Which function is used to write a list of string in a file?
a) writeline()
b) writelines()
c) writestatement()
d) writefullline()<term>a<row>fh = open("hello.txt", "w")
lines_of_text = ["a line of text", "another line of text", "a third line"] fh.writelines(lines_of_text).
8. Which function is used to close a file in python?
a) Close()
b) Stop()
c) End()
d) Closefile()<term>a<row>9. Is it possible to create a text file in python?
a) Yes
b) No
c) Machine dependent
d) All of the mentioned<term>a<row>file = open("newfile.txt", "w")
file.write("hello world in the new file\n")
file.write("and another line\n")
file.close().
10. Which of the following are the modes of both writing and reading in binary format in file?
a) wb+
b) w
c) wb
d) w+<term>a<row>"w" Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.
"wb" Opens a file for writing only in binary format. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.
"w+" Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.
"wb+" Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.
1. Which of the following is not a valid mode to open a file?
a) ab
b) rw
c) r+
d) w+<term>b<row>2. What is the difference between r+ and w+ modes?
a) no difference
b) in r+ the pointer is initially placed at the beginning of the file and the pointer is at the end for w+
c) in w+ the pointer is initially placed at the beginning of the file and the pointer is at the end for r+
d) depends on the operating system<term>b<row>3. How do you get the name of a file from a file object (fp)?
a) fp.name
b) fp.file(name)
c) self.__name__(fp)
d) fp.__name__()<term>a<row>4. Which of the following is not a valid attribute of a file object (fp)?
a) fp.name
b) fp.closed
c) fp.mode
d) fp.size<term>d<row>5. How do you close a file object (fp)?
a) close(fp)
b) fclose(fp)
c) fp.close()
d) fp.__close__()<term>c<row>6. How do you get the current position within the file?
a) fp.seek()
b) fp.tell()
c) fp.loc
d) fp.pos<term>b<row>7. How do you rename a file?
a) fp.name = 'new_name.txt'
b) os.rename(existing_name, new_name)
c) os.rename(fp, new_name)
d) os.set_name(existing_name, new_name)<term>b<row>8. How do you delete a file?
a) del(fp)
b) fp.delete()
c) os.remove('file')
d) os.delete('file')<term>c<row>9. How do you change the file position to an offset value from the start?
a) fp.seek(offset, 0)
b) fp.seek(offset, 1)
c) fp.seek(offset, 2)
d) none of the mentioned<term>a<row>10. What happens if no arguments are passed to the seek function?
a) file position is set to the start of file
b) file position is set to the end of file
c) file position remains unchanged
d) error<term>d<row>1. Which function is called when the following Python code is executed?
f = foo()
format(f)
a) format()
b) __format__()
c) str()
d) __str__()<term>d<row>2. Which of the following Python code will print True?
a = foo(2)
b = foo(3)
print(a < b)
a)
class foo:
 def __init__(self, x):
 self.x = x
 def __lt__(self, other):
 if self.x < other.x:
 return False
 else:
 return True
b)
class foo:
 def __init__(self, x):
 self.x = x
 def __less__(self, other):
 if self.x > other.x:
 return False
 else:
 return True
c)
class foo:
 def __init__(self, x):
 self.x = x
 def __lt__(self, other):
 if self.x < other.x:
 return True
 else:
 return False
d)
class foo:
 def __init__(self, x):
 self.x = x
 def __less__(self, other):
 if self.x < other.x:
 return False
 else:
 return True<term>c<row>3. Which function overloads the + operator?
a) __add__()
b) __plus__()
c) __sum__()
d) none of the mentioned<term>a<row>4. Which operator is overloaded by __invert__()?
a) !
b) ~
c) ^
d) -<term>b<row>5. Which function overloads the == operator?
a) __eq__()
b) __equ__()
c) __isequal__()
d) none of the mentioned<term>a<row>6. Which operator is overloaded by __lg__()?
a) <
b) >
c) !=
d) none of the mentioned<term>d<row>7. Which function overloads the >> operator?
a) __more__()
b) __gt__()
c) __ge__()
d) none of the mentioned<term>d<row>8. Let A and B be objects of class Foo. Which functions are called when print(A + B) is executed?
a) __add__(), __str__()
b) __str__(), __add__()
c) __sum__(), __str__()
d) __str__(), __sum__()<term>a<row>9. Which operator is overloaded by the __or__() function?
a) ||
b) |
c) //
d) /<term>b<row>10. Which function overloads the // operator?
a) __div__()
b) __ceildiv__()
c) __floordiv__()
d) __truediv__()<term>c<row>1. _____ represents an entity in the real world with its identity and behaviour.
a) A method
b) An object
c) A class
d) An operator<term>b<row>2. _____ is used to create an object.
a) class
b) constructor
c) User-defined functions
d) In-built functions<term>b<row>3. What will be the output of the following Python code?
class test:
 def __init__(self,a="Hello World"):
 self.a=a
 
 def display(self):
 print(self.a)
obj=test()
obj.display()
a) The program has an error because constructor can't have default arguments
b) Nothing is displayed
c) "Hello World" is displayed
d) The program has an error display function doesn't have parameters<term>c<row>4. What is setattr() used for?
a) To access the attribute of the object
b) To set an attribute
c) To check if an attribute exists or not
d) To delete an attribute<term>b<row>5. What is getattr() used for?
a) To access the attribute of the object
b) To delete an attribute
c) To check if an attribute exists or not
d) To set an attribute<term>a<row>6. What will be the output of the following Python code?
class change:
 def __init__(self, x, y, z):
 self.a = x + y + z
 
x = change(1,2,3)
y = getattr(x, 'a')
setattr(x, 'a', y+1)
print(x.a)
a) 6
b) 7
c) Error
d) 0<term>b<row>7. What will be the output of the following Python code?
 class test:
 def __init__(self,a):
 self.a=a
 
 def display(self):
 print(self.a)
obj=test()
obj.display()
a) Runs normally, doesn't display anything
b) Displays 0, which is the automatic default value
c) Error as one argument is required while creating the object
d) Error as display function requires additional argument<term>c<row>8. Is the following Python code correct?
>>> class A:
 def __init__(self,b):
 self.b=b
 def display(self):
 print(self.b)
>>> obj=A("Hello")
>>> del obj
a) True
b) False<term>a<row>9. What will be the output of the following Python code?
class test:
 def __init__(self):
 self.variable = 'Old'
 self.Change(self.variable)
 def Change(self, var):
 var = 'New'
obj=test()
print(obj.variable)
a) Error because function change can't be called in the __init__ function
b) 'New' is printed
c) 'Old' is printed
d) Nothing is printed<term>c<row>10. What is Instantiation in terms of OOP terminology?
a) Deleting an instance of class
b) Modifying an instance of class
c) Copying an instance of class
d) Creating an instance of class<term>d<row>11. What will be the output of the following Python code?
class fruits:
 def __init__(self, price):
 self.price = price
obj=fruits(50)
 
obj.quantity=10
obj.bags=2
 
print(obj.quantity+len(obj.__dict__))
a) 12
b) 52
c) 13
d) 60<term>c<row>12. What will be the output of the following Python code?
 class Demo:
 def __init__(self):
 pass
 
 def test(self):
 print(__name__)
 
obj = Demo()
obj.test()
a) Exception is thrown
b) __main__
c) Demo
d) test<term>b<row>1. The assignment of more than one function to a particular operator is _______
a) Operator over-assignment
b) Operator overriding
c) Operator overloading
d) Operator instance<term>c<row>2. Which of the following is not a class method?
a) Non-static
b) Static
c) Bounded
d) Unbounded<term>a<row>3. What will be the output of the following Python code?
def add(c,k):
 c.test=c.test+1
 k=k+1
class A:
 def __init__(self):
 self.test = 0
def main():
 Count=A()
 k=0
 
 for i in range(0,25):
 add(Count,k)
 print("Count.test=", Count.test)
 print("k =", k)
main()
a) Exception is thrown
b)
Count.test=25
k=25
c)
Count.test=25
k=0
d)
Count.test=0
k=0<term>c<row>4. Which of the following Python code creates an empty class?
a)
class A:
 return
b)
class A:
 pass
c)
class A:
d) It is not possible to create an empty class<term>b<row>5. Is the following Python code valid?
class B(object):
 def first(self):
 print("First method called")
 def second():
 print("Second method called")
ob = B()
B.first(ob)
a) It isn't as the object declaration isn't right
b) It isn't as there isn't any __init__ method for initializing class members
c) Yes, this method of calling is called unbounded method call
d) Yes, this method of calling is called bounded method call<term>c<row>6. What are the methods which begin and end with two underscore characters called?
a) Special methods
b) In-built methods
c) User-defined methods
d) Additional methods<term>a<row>7. Special methods need to be explicitly called during object creation.
a) True
b) False<term>b<row>8. What will be the output of the following Python code?
>>> class demo():
 def __repr__(self):
 return '__repr__ built-in function called'
 def __str__(self):
 return '__str__ built-in function called'
>>> s=demo()
>>> print(s)
a) Error
b) Nothing is printed
c) __str__ called
d) __repr__ called<term>c<row>9. What will be the output of the following Python code?
>>> class demo():
 def __repr__(self):
 return '__repr__ built-in function called'
 def __str__(self):
 return '__str__ built-in function called'
>>> s=demo()
>>> print(s)
a) __str__ called
b) __repr__ called
c) Error
d) Nothing is printed<term>a<row>10. What is hasattr(obj,name) used for?
a) To access the attribute of the object
b) To delete an attribute
c) To check if an attribute exists or not
d) To set an attribute<term>c<row>11. What will be the output of the following Python code?
class stud:
 def __init__(self, roll_no, grade):
 self.roll_no = roll_no
 self.grade = grade
 def display (self):
 print("Roll no : ", self.roll_no, ", Grade: ", self.grade)
stud1 = stud(34, 'S')
stud1.age=7
print(hasattr(stud1, 'age'))
a) Error as age isn't defined
b) True
c) False
d) 7<term>b<row>12. What is delattr(obj,name) used for?
a) To print deleted attribute
b) To delete an attribute
c) To check if an attribute is deleted or not
d) To set an attribute<term>b<row>13. __del__ method is used to destroy instances of a class.
a) True
b) False<term>a<row>14. What will be the output of the following Python code?
class stud:
 'Base class for all students'
 def __init__(self, roll_no, grade):
 self.roll_no = roll_no
 self.grade = grade
 def display (self):
 print("Roll no : ", self.roll_no, ", Grade: ", self.grade)
print(student.__doc__)
a) Exception is thrown
b) __main__
c) Nothing is displayed
d) Base class for all students<term>d<row>15. What does print(Test.__name__) display (assuming Test is the name of the class)?
a) ()
b) Exception is thrown
c) Test
d) __main__<term>c<row>1. Which of the following best describes inheritance?
a) Ability of a class to derive members of another class as a part of its own definition
b) Means of bundling instance variables and methods in order to restrict access to certain class members
c) Focuses on variables and passing of variables to functions
d) Allows for implementation of elegant software that is well designed and easily modified<term>a<row>2. Which of the following statements is wrong about inheritance?
a) Protected members of a class can be inherited
b) The inheriting class is called a subclass
c) Private members of a class can be inherited and accessed
d) Inheritance is one of the features of OOP<term>c<row>3. What will be the output of the following Python code?
class Demo:
 def __new__(self):
 self.__init__(self)
 print("Demo's __new__() invoked")
 def __init__(self):
 print("Demo's __init__() invoked")
class Derived_Demo(Demo):
 def __new__(self):
 print("Derived_Demo's __new__() invoked")
 def __init__(self):
 print("Derived_Demo's __init__() invoked")
def main():
 obj1 = Derived_Demo()
 obj2 = Demo()
main()
a)
Derived_Demo's __init__() invoked
Derived_Demo's __new__() invoked
Demo's __init__() invoked
Demo's __new__() invoked
b)
Derived_Demo's __new__() invoked
Demo's __init__() invoked
Demo's __new__() invoked
c)
Derived_Demo's __new__() invoked
Demo's __new__() invoked
d)
Derived_Demo's __init__() invoked
Demo's __init__() invoked<term>b<row>4. What will be the output of the following Python code?
class Test:
 def __init__(self):
 self.x = 0
class Derived_Test(Test):
 def __init__(self):
 self.y = 1
def main():
 b = Derived_Test()
 print(b.x,b.y)
main()
a) 0 1
b) 0 0
c) Error because class B inherits A but variable x isn't inherited
d) Error because when object is created, argument must be passed like Derived_Test(1)<term>c<row>5. What will be the output of the following Python code?
class A():
 def disp(self):
 print("A disp()")
class B(A):
 pass
obj = B()
obj.disp()
a) Invalid syntax for inheritance
b) Error because when object is created, argument must be passed
c) Nothing is printed
d) A disp()<term>d<row>6. All subclasses are a subtype in object-oriented programming.
a) True
b) False<term>b<row>7. When defining a subclass in Python that is meant to serve as a subtype, the subtype Python keyword is used.
a) True
b) False<term>b<row>8. Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write?
a) A.__init__(self)
b) B.__init__(self)
c) A.__init__(B)
d) B.__init__(A)<term>a<row>9. What will be the output of the following Python code?
class Test:
 def __init__(self):
 self.x = 0
class Derived_Test(Test):
 def __init__(self):
 Test.__init__(self)
 self.y = 1
def main():
 b = Derived_Test()
 print(b.x,b.y)
main()
a) Error because class B inherits A but variable x isn't inherited
b) 0 0
c) 0 1
d) Error, the syntax of the invoking method is wrong<term>c<row>10. What will be the output of the following Python code?
class A:
 def __init__(self, x= 1):
 self.x = x
class der(A):
 def __init__(self,y = 2):
 super().__init__()
 self.y = y
def main():
 obj = der()
 print(obj.x, obj.y)
main()
a) Error, the syntax of the invoking method is wrong
b) The program runs fine but nothing is printed
c) 1 0
d) 1 2<term>d<row>11. What does built-in function type do in context of classes?
a) Determines the object name of any value
b) Determines the class name of any value
c) Determines class description of any value
d) Determines the file name of any value<term>b<row>12. Which of the following is not a type of inheritance?
a) Double-level
b) Multi-level
c) Single-level
d) Multiple<term>a<row>13. What does built-in function help do in context of classes?
a) Determines the object name of any value
b) Determines the class identifiers of any value
c) Determines class description of any built-in type
d) Determines class description of any user-defined built-in type<term>c<row>14. What will be the output of the following Python code?
class A:
 def one(self):
 return self.two()
 
 def two(self):
 return 'A'
 
class B(A):
 def two(self):
 return 'B'
obj1=A()
obj2=B()
print(obj1.two(),obj2.two())
a) A A
b) A B
c) B B
d) An exception is thrown<term>b<row>15. What type of inheritance is illustrated in the following Python code?
class A():
 pass
class B():
 pass
class C(A,B):
 pass
a) Multi-level inheritance
b) Multiple inheritance
c) Hierarchical inheritance
d) Single-level inheritance<term>b<row>1. What type of inheritance is illustrated in the following Python code?
class A():
 pass
class B(A):
 pass
class C(B):
 pass
a) Multi-level inheritance
b) Multiple inheritance
c) Hierarchical inheritance
d) Single-level inheritance<term>a<row>2. What does single-level inheritance mean?
a) A subclass derives from a class which in turn derives from another class
b) A single superclass inherits from multiple subclasses
c) A single subclass derives from a single superclass
d) Multiple base classes inherit a single derived class<term>c<row>3. What will be the output of the following Python code?
class A:
 def __init__(self):
 self.__i = 1
 self.j = 5
 
 def display(self):
 print(self.__i, self.j)
class B(A):
 def __init__(self):
 super().__init__()
 self.__i = 2
 self.j = 7 
c = B()
c.display()
a) 2 7
b) 1 5
c) 1 7
d) 2 5<term>c<row>4. Which of the following statements isn't true?
a) A non-private method in a superclass can be overridden
b) A derived class is a subset of superclass
c) The value of a private variable in the superclass can be changed in the subclass
d) When invoking the constructor from a subclass, the constructor of superclass is automatically invoked<term>c<row>5. What will be the output of the following Python code?
class A:
 def __init__(self,x):
 self.x = x
 def count(self,x):
 self.x = self.x+1
class B(A):
 def __init__(self, y=0):
 A.__init__(self, 3)
 self.y = y
 def count(self):
 self.y += 1 
def main():
 obj = B()
 obj.count()
 print(obj.x, obj.y)
main()
a) 3 0
b) 3 1
c) 0 1
d) An exception in thrown<term>b<row>6. What will be the output of the following Python code?
>>> class A:
 pass
>>> class B(A):
 pass
>>> obj=B()
>>> isinstance(obj,A)
a) True
b) False
c) Wrong syntax for isinstance() method
d) Invalid method for classes<term>a<row>7. Which of the following statements is true?
a) The __new__() method automatically invokes the __init__ method
b) The __init__ method is defined in the object class
c) The __eq(other) method is defined in the object class
d) The __repr__() method is defined in the object class<term>c<row>8. Method issubclass() checks if a class is a subclass of another class.
a) True
b) False<term>a<row>9. What will be the output of the following Python code?
class A:
 def __init__(self):
 self.__x = 1
class B(A):
 def display(self):
 print(self.__x)
def main():
 obj = B()
 obj.display()
main()
a) 1
b) 0
c) Error, invalid syntax for object declaration
d) Error, private class member can't be accessed in a subclass<term>d<row>10. What will be the output of the following Python code?
class A:
 def __init__(self):
 self._x = 5 
class B(A):
 def display(self):
 print(self._x)
def main():
 obj = B()
 obj.display()
main()
a) Error, invalid syntax for object declaration
b) Nothing is printed
c) 5
d) Error, private class member can't be accessed in a subclass<term>c<row>11. What will be the output of the following Python code?
class A:
 def __init__(self,x=3):
 self._x = x 
class B(A):
 def __init__(self):
 super().__init__(5)
 def display(self):
 print(self._x)
def main():
 obj = B()
 obj.display()
 
main()
a) 5
b) Error, class member x has two values
c) 3
d) Error, protected class member can't be accessed in a subclass<term>a<row>12. What will be the output of the following Python code?
class A:
 def test1(self):
 print(" test of A called ")
class B(A):
 def test(self):
 print(" test of B called ")
class C(A):
 def test(self):
 print(" test of C called ")
class D(B,C):
 def test2(self):
 print(" test of D called ") 
obj=D()
obj.test()
a)
test of B called
test of C called
b)
test of C called
test of B called
c) test of B called
d) Error, both the classes from which D derives has same method test()<term>c<row>13. What will be the output of the following Python code?
class A:
 def test(self):
 print("test of A called")
class B(A):
 def test(self):
 print("test of B called")
 super().test() 
class C(A):
 def test(self):
 print("test of C called")
 super().test()
class D(B,C):
 def test2(self):
 print("test of D called") 
obj=D()
obj.test()
a)
test of B called
test of C called
test of A called
b)
test of C called
test of B called
c)
test of B called
test of C called
d) Error, all the three classes from which D derives has same method test()<term>a<row>1. Which of the following best describes polymorphism?
a) Ability of a class to derive members of another class as a part of its own definition
b) Means of bundling instance variables and methods in order to restrict access to certain class members
c) Focuses on variables and passing of variables to functions
d) Allows for objects of different types and behaviour to be treated as the same general type<term>d<row>2. What is the biggest reason for the use of polymorphism?
a) It allows the programmer to think at a more abstract level
b) There is less program code to write
c) The program will have a more elegant design and will be easier to maintain and update
d) Program code takes up less space<term>c<row>3. What is the use of duck typing?
a) More restriction on the type values that can be passed to a given method
b) No restriction on the type values that can be passed to a given method
c) Less restriction on the type values that can be passed to a given method
d) Makes the program code smaller<term>c<row>4. What will be the output of the following Python code?
class A:
 def __str__(self):
 return '1'
class B(A):
 def __init__(self):
 super().__init__()
class C(B):
 def __init__(self):
 super().__init__()
def main():
 obj1 = B()
 obj2 = A()
 obj3 = C()
 print(obj1, obj2,obj3)
main()
a) 1 1 1
b) 1 2 3
c) '1' '1' '1'
d) An exception is thrown<term>a<row>5. What will be the output of the following Python code?
class Demo:
 def __init__(self):
 self.x = 1
 def change(self):
 self.x = 10
class Demo_derived(Demo):
 def change(self):
 self.x=self.x+1
 return self.x
def main():
 obj = Demo_derived()
 print(obj.change())
 
main()
a) 11
b) 2
c) 1
d) An exception is thrown<term>b<row>6. A class in which one or more methods are only implemented to raise an exception is called an abstract class.
a) True
b) False<term>a<row>7. Overriding means changing behaviour of methods of derived class methods in the base class.
a) True
b) False<term>b<row>8. What will be the output of the following Python code?
class A:
 def __repr__(self):
 return "1"
class B(A):
 def __repr__(self):
 return "2"
class C(B):
 def __repr__(self):
 return "3"
o1 = A()
o2 = B()
o3 = C()
print(obj1, obj2, obj3)
a) 1 1 1
b) 1 2 3
c) '1' '1' '1'
d) An exception is thrown<term>b<row>9. What will be the output of the following Python code?
class A:
 def __init__(self):
 self.multiply(15)
 print(self.i)
 
 def multiply(self, i):
 self.i = 4 * i;
class B(A):
 def __init__(self):
 super().__init__()
 
 def multiply(self, i):
 self.i = 2 * i;
obj = B()
a) 15
b) 60
c) An exception is thrown
d) 30<term>d<row>10. What will be the output of the following Python code?
class Demo:
 def check(self):
 return " Demo's check " 
 def display(self):
 print(self.check())
class Demo_Derived(Demo):
 def check(self):
 return " Derived's check "
Demo().display()
Demo_Derived().display()
a) Demo's check Derived's check
b) Demo's check Demo's check
c) Derived's check Demo's check
d) Syntax error<term>a<row>11. What will be the output of the following Python code?
class A:
 def __init__(self):
 self.multiply(15)
 def multiply(self, i):
 self.i = 4 * i;
class B(A):
 def __init__(self):
 super().__init__()
 print(self.i)
 
 def multiply(self, i):
 self.i = 2 * i;
obj = B()
a) 15
b) 30
c) An exception is thrown
d) 60<term>b<row>12. What will be the output of the following Python code?
class Demo:
 def __check(self):
 return " Demo's check "
 def display(self):
 print(self.check())
class Demo_Derived(Demo):
 def __check(self):
 return " Derived's check "
Demo().display()
Demo_Derived().display()
a) Demo's check Derived's check
b) Demo's check Demo's check
c) Derived's check Demo's check
d) Syntax error<term>b<row>13. What will be the output of the following Python code?
class A:
 def __init__(self, x, y):
 self.x = x
 self.y = y
 def __str__(self):
 return 1
 def __eq__(self, other):
 return self.x * self.y == other.x * other.y
obj1 = A(5, 2)
obj2 = A(2, 5)
print(obj1 == obj2)
a) False
b) 1
c) True
d) An exception is thrown<term>c<row>14. What will be the output of the following Python code?
class A:
 def one(self):
 return self.two() 
 def two(self):
 return 'A' 
class B(A):
 def two(self):
 return 'B'
obj2=B()
print(obj2.two())
a) A
b) An exception is thrown
c) A B
d) B<term>d<row>15. Which of the following statements is true?
a) A non-private method in a superclass can be overridden
b) A subclass method can be overridden by the superclass
c) A private method in a superclass can be overridden
d) Overriding isn't possible in Python<term>a<row>1. Which of these is not a fundamental features of OOP?
a) Encapsulation
b) Inheritance
c) Instantiation
d) Polymorphism<term>c<row>2. Which of the following is the most suitable definition for encapsulation?
a) Ability of a class to derive members of another class as a part of its own definition
b) Means of bundling instance variables and methods in order to restrict access to certain class members
c) Focuses on variables and passing of variables to functions
d) Allows for implementation of elegant software that is well designed and easily modified<term>b<row>3. What will be the output of the following Python code?
class Demo:
 def __init__(self):
 self.a = 1
 self.__b = 1
 
 def display(self):
 return self.__b
obj = Demo()
print(obj.a)
a) The program has an error because there isn't any function to return self.a
b) The program has an error because b is private and display(self) is returning a private member
c) The program runs fine and 1 is printed
d) The program has an error as you can't name a class member using __b<term>c<row>4. What will be the output of the following Python code?
class Demo:
 def __init__(self):
 self.a = 1
 self.__b = 1
 
 def display(self):
 return self.__b
 
obj = Demo()
print(obj.__b)
a) The program has an error because there isn't any function to return self.a
b) The program has an error because b is private and display(self) is returning a private member
c) The program has an error because b is private and hence can't be printed
d) The program runs fine and 1 is printed<term>c<row>5. Methods of a class that provide access to private members of the class are called as ______ and ______
a) getters/setters
b) __repr__/__str__
c) user-defined functions/in-built functions
d) __init__/__del__<term>a<row>6. Which of these is a private data field?
def Demo:
def __init__(self):
 __a = 1
 self.__b = 1
 self.__c__ = 1
 __d__= 1
a) __a
b) __b
c) __c__
d) __d__<term>b<row>7. What will be the output of the following Python code?
class Demo:
 def __init__(self):
 self.a = 1
 self.__b = 1
 
 def get(self):
 return self.__b
 
obj = Demo()
print(obj.get())
a) The program has an error because there isn't any function to return self.a
b) The program has an error because b is private and display(self) is returning a private member
c) The program has an error because b is private and hence can't be printed
d) The program runs fine and 1 is printed<term>d<row>8. What will be the output of the following Python code?
class Demo:
 def __init__(self):
 self.a = 1
 self.__b = 1
 def get(self):
 return self.__b
obj = Demo()
obj.a=45
print(obj.a)
a) The program runs properly and prints 45
b) The program has an error because the value of members of a class can't be changed from outside the class
c) The program runs properly and prints 1
d) The program has an error because the value of members outside a class can only be changed as self.a=45<term>a<row>9. Private members of a class cannot be accessed.
a) True
b) False<term>b<row>10. The purpose of name mangling is to avoid unintentional access of private class members.
a) True
b) False<term>a<row>11. What will be the output of the following Python code?
class fruits:
 def __init__(self):
 self.price = 100
 self.__bags = 5
 def display(self):
 print(self.__bags)
obj=fruits()
obj.display()
a) The program has an error because display() is trying to print a private class member
b) The program runs fine but nothing is printed
c) The program runs fine and 5 is printed
d) The program has an error because display() can't be accessed<term>c<row>12. What will be the output of the following Python code?
 class student:
 def __init__(self):
 self.marks = 97
 self.__cgpa = 8.7
 def display(self):
 print(self.marks)
obj=student()
print(obj._student__cgpa)
a) The program runs fine and 8.7 is printed
b) Error because private class members can't be accessed
c) Error because the proper syntax for name mangling hasn't been implemented
d) The program runs fine but nothing is printed<term>a<row>13. Which of the following is false about protected class members?
a) They begin with one underscore
b) They can be accessed by subclasses
c) They can be accessed by name mangling method
d) They can be accessed within a class<term>c<row>14. What will be the output of the following Python code?
class objects:
 def __init__(self):
 self.colour = None
 self._shape = "Circle" 
 
 def display(self, s):
 self._shape = s
obj=objects()
print(obj._objects_shape)
a) The program runs fine because name mangling has been properly implemented
b) Error because the member shape is a protected member
c) Error because the proper syntax for name mangling hasn't been implemented
d) Error because the member shape is a private member<term>b<row>1. How many except statements can a try-except block have?
a) zero
b) one
c) more than one
d) more than zero<term>d<row>2. When will the else part of try-except-else be executed?
a) always
b) when an exception occurs
c) when no exception occurs
d) when an exception occurs in to except block<term>c<row>3. Is the following Python code valid?
try:
 # Do something
except:
 # Do something
finally:
 # Do something
a) no, there is no such thing as finally
b) no, finally cannot be used with except
c) no, finally must come before except
d) yes<term>b<row>4. Is the following Python code valid?
try:
 # Do something
except:
 # Do something
else:
 # Do something
a) no, there is no such thing as else
b) no, else cannot be used with except
c) no, else must come before except
d) yes<term>d<row>5. Can one block of except statements handle multiple exception?
a) yes, like except TypeError, SyntaxError [,...]
b) yes, like except [TypeError, SyntaxError]
c) no
d) none of the mentioned<term>a<row>6. When is the finally block executed?
a) when there is no exception
b) when there is an exception
c) only if some condition that has been specified is satisfied
d) always<term>d<row>7. What will be the output of the following Python code?
def foo():
 try:
 return 1
 finally:
 return 2
k = foo()
print(k)
a) 1
b) 2
c) 3
d) error, there is more than one return statement in a single try-finally block<term>b<row>8. What will be the output of the following Python code?
def foo():
 try:
 print(1)
 finally:
 print(2)
foo()
a) 1 2
b) 1
c) 2
d) none of the mentioned<term>a<row>9. What will be the output of the following Python code?
try:
 if '1' != 1:
 raise "someError"
 else:
 print("someError has not occurred")
except "someError":
 print ("someError has occurred")
a) someError has occurred
b) someError has not occurred
c) invalid code
d) none of the mentioned<term>c<row>10. What happens when '1' == 1 is executed?
a) we get a True
b) we get a False
c) an TypeError occurs
d) a ValueError occurs<term>b<row>1. The following Python code will result in an error if the input value is entered as -5.
assert False, 'Spanish'
a) True
b) False<term>a<row>Traceback (most recent call last):
File "<pyshell#0>", line 1, in <module>
assert False, 'Spanish'
AssertionError: Spanish
Hence, this statement is true.
2. What will be the output of the following Python code?
x=10
y=8
assert x>y, 'X too small'
a) Assertion Error
b) 10 8
c) No output
d) 108<term>c<row>3. What will be the output of the following Python code?
#generator
def f(x):
 yield x+1
g=f(8)
print(next(g))
a) 8
b) 9
c) 7
d) Error<term>b<row>4. What will be the output of the following Python code?
def f(x):
 yield x+1
 print("test")
 yield x+2
g=f(9)
a) Error
b) test
c)
test
10
12
d) No output<term>d<row>5. What will be the output of the following Python code?
def f(x):
 yield x+1
 print("test")
 yield x+2
g=f(10)
print(next(g))
print(next(g))
a) No output
b)
11
test
12
c)
11
test
d) 11<term>b<row>11
test
12
This is because we have used next(g) twice. Had we not used next, there would be no output.
6. What will be the output of the following Python code?
def a():
 try:
 f(x, 4)
 finally:
 print('after f')
 print('after f?')
a()
a) No output
b) after f?
c) error
d) after f<term>c<row>7. What will be the output of the following Python code?
def f(x):
 for i in range(5):
 yield i
g=f(8)
print(list(g))
a) [0, 1, 2, 3, 4]
b) [1, 2, 3, 4, 5, 6, 7, 8]
c) [1, 2, 3, 4, 5]
d) [0, 1, 2, 3, 4, 5, 6, 7]<term>a<row>8. The error displayed in the following Python code is?
import itertools
l1=(1, 2, 3)
l2=[4, 5, 6]
l=itertools.chain(l1, l2)
print(next(l1))
a) 'list' object is not iterator
b) 'tuple' object is not iterator
c) 'list' object is iterator
d) 'tuple' object is iterator<term>b<row>9. Which of the following is not an exception handling keyword in Python?
a) try
b) except
c) accept
d) finally<term>c<row>10. What will be the output of the following Python code?
g = (i for i in range(5))
type(g)
a) class <'loop'>
b) class <'iteration'>
c) class <'range'>
d) class <'generator'><term>d<row>1. What happens if the file is not found in the following Python code?
a=False
while not a:
 try:
 f_n = input("Enter file name")
 i_f = open(f_n, 'r')
 except:
 print("Input file not found")
a) No error
b) Assertion error
c) Input output error
d) Name error<term>a<row>2. What will be the output of the following Python code?
lst = [1, 2, 3]
lst[3]
a) NameError
b) ValueError
c) IndexError
d) TypeError<term>c<row>3. What will be the output of the following Python code?
t[5]
a) IndexError
b) NameError
c) TypeError
d) ValeError<term>b<row>4. What will be the output of the following Python code, if the time module has already been imported?
4 + '3'
a) NameError
b) IndexError
c) ValueError
d) TypeError<term>d<row>5. What will be the output of the following Python code?
int('65.43')
a) ImportError
b) ValueError
c) TypeError
d) NameError<term>b<row>6. Compare the following two Python codes shown below and state the output if the input entered in each case is -6?
CODE 1
import math
num=int(input("Enter a number of whose factorial you want to find"))
print(math.factorial(num))
 
CODE 2
num=int(input("Enter a number of whose factorial you want to find"))
print(math.factorial(num))
a) ValueError, NameError
b) AttributeError, ValueError
c) NameError, TypeError
d) TypeError, ValueError<term>a<row>7. What will be the output of the following Python code?
def getMonth(m):
 if m<1 or m>12:
 raise ValueError("Invalid")
 print(m)
getMonth(6)
a) ValueError
b) Invalid
c) 6
d) ValueError("Invalid")<term>c<row>8. What will be the output of the following Python code if the input entered is 6?
valid = False
while not valid:
 try:
 n=int(input("Enter a number"))
 while n%2==0:
 print("Bye")
 valid = True
 except ValueError:
 print("Invalid")
a) Bye (printed once)
b) No output
c) Invalid (printed once)
d) Bye (printed infinite number of times)<term>d<row>9. Identify the type of error in the following Python codes?
Print("Good Morning")
print("Good night)
a) Syntax, Syntax
b) Semantic, Syntax
c) Semantic, Semantic
d) Syntax, Semantic<term>b<row>10. Which of the following statements is true?
a) The standard exceptions are automatically imported into Python programs
b) All raised standard exceptions must be handled in Python
c) When there is a deviation from the rules of a programming language, a semantic error is thrown
d) If any exception is thrown in try block, else block is executed<term>a<row>11. Which of the following is not a standard exception in Python?
a) NameError
b) IOError
c) AssignmentError
d) ValueError<term>c<row>12. Syntax errors are also known as parsing errors.
a) True
b) False<term>a<row>13. An exception is ____________
a) an object
b) a special function
c) a standard module
d) a module<term>a<row>14. _______________________ exceptions are raised as a result of an error in opening a particular file.
a) ValueError
b) TypeError
c) ImportError
d) IOError<term>d<row>15. Which of the following blocks will be executed whether an exception is thrown or not?
a) except
b) else
c) finally
d) assert<term>c<row>Which Python code is used to capture username from a Cisco Router through a prompt in Python 3?
a) tn.read_until(b"Login:")
b) tn.read_until(b"user:")
c) tn.read_until(b"Username: ")
d) tn.read_until(b"user: ")<term>c<row>Which Python code is used to configure Hostname on a Cisco Router in Python 3?
a) write(b"hostname nw_Router1\n")
b) tn.write("hostname nw_Router1\n")
c) tn.write(b hostname nw_Router1\n)
d) tn.write(b"hostname nw_Router1\n")<term>d<row>Which method of the socket module allows a server socket to accept requests from a client socket from another host?
a) socket.accept()
b) socket.sendto(address)
c) socket.acceptsocket
d) accept.socket()<term>a<row>Which method of the socket module allows you to send data to a given address?
a) socket.sendto(address, data)
b) socket.address()
c) socket.sendto(data, address)
d) socket.data<term>c<row>Which method of the socket module allows you to associate a host and a port with a specific socket?
a) The socket.sendto(PORT) method
b) The bind(IP,PORT) method
c) The bind(PORT,IP) method
d) The socket.accept(PORT) method<term>b<row>What is the difference between the TCP and UDP protocols, and how do you implement them in Python with the socket module?
a) TCP is compatible with Python, while UDP is not
b) There are no differences
c) TCP is not connection-oriented, while UDP is
d) TCP is connection-oriented, while UDP is not<term>d<row>Which method of the socket module allows you to implement port scanning with sockets and to check the port state?
a) The sock.connect_ex((ip_address,port)) method
b) The socket.accept() method
c) The sock.connect_ex(port,IP) method
d) The socket.connect(port) method<term>a<row>You must have seen the show "How I met your mother". Do you remember the game where they played, in which each person drinks a shot whenever someone says "but, um". I thought of adding a twist to the game. What if you could use your technical skills to play this game?
To identify how many shots a person is having in the entire game, you are supposed to write a code.
Below is the subtitle sample script.
Note: Python regular expression library has been imported as re.
txt = '''450
00:17:53,457 --> 00:17:56,175
Okay, but, um,
thanks for being with us.
451
00:17:56,175 --> 00:17:58,616
But, um, if there's any
college kids watching,
452
00:17:58,616 --> 00:18:01,610
But, um, but, um, but, um,
but, um, but, um,
453
00:18:01,610 --> 00:18:03,656
We have to drink, professor.
454
00:18:03,656 --> 00:18:07,507
It's the rules.
She said "But, um"
455
00:18:09,788 --> 00:18:12,515
But, um, but, um, but, um...
god help us all.
'''
1) Which of the following codes would be appropriate for this task?
A) len(re.findall('But, um', txt))
B) re.search('But, um', txt).count()
C) len(re.findall('[B,b]ut, um', txt))
D) re.search('[B,b]ut, um', txt)).count()<term>c<row>Suppose you are given the below string
str = """Email_Address,Nickname,Group_Status,Join_Yearaa@aaa.com,aa,Owner,2014bb@bbb.com,bb,Member,2015cc@ccc.com,cc,Member,2017dd@ddd.com,dd,Member,2016ee@eee.com,ee,Member,2020"""
In order to extract only the domain names from the email addresses from the above string (for eg. "aaa", "bbb"..) you write the following code:
for i in re.finditer('([a-zA-Z]+)@([a-zA-Z]+).(com)', str):
 print i.group(__)
2) What number should be mentioned instead of "__" to index only the domains?
Note: Python regular expression library has been imported as re.
A) 0
B) 1
C) 2
D) 3<term>c<row>Your friend has a hypothesis - "All those people who have names ending with the sound of "y" (Eg: Hollie) are intelligent people." Please note: The name should end with the sound of 'y' but not end with alphabet 'y'.
Now you being a data freak, challenge the hypothesis by scraping data from your college's website. Here's data you have collected.
Name Marks
Andy 0
Mandi 10
Sandy 20
Hollie 18
Molly 19
Dollie 15
You want to make a list of all people who fall in this category. You write following code do to the same:
temp = []
for i in re.finditer(pattern, str):
 temp.append(i.group(1))
3) What should be the value of "pattern" in regular expression?
Note: Python regular expression library has been imported as re.
A) pattern = '(i|ie)(,)'
B) pattern = '(i$|ie$)(,)'
C) pattern = '([a-zA-Z]+i|[a-zA-Z]+ie)(,)'
D) None of these<term>b<row>Assume, you are given two lists:
a = [1,2,3,4,5]
b = [6,7,8,9]
The task is to create a list which has all the elements of a and b in one dimension.
Output:
a = [1,2,3,4,5,6,7,8,9]
4) Which of the following option would you choose?
A) a.append(b)
B) a.extend(b)
C) Any of the above
D) None of these<term>b<row>You have built a machine learning model which you wish to freeze now and use later. Which of the following command can perform this task for you?
Note: Pickle library has been imported as pkl.
A) push(model, "file")
B) save(model, "file")
C) dump(model, "file")
D) freeze(model, "file")<term>c<row>We want to convert the below string in date-time value:
import time
str = '21/01/2017'
datetime_value = time.strptime(str,date_format)
6) To convert the above string, what should be written in place of date_format?
A) "%d/%m/%y"
B) "%D/%M/%Y"
C) "%d/%M/%y"
D) "%d/%m/%Y"<term>d<row>I have built a simple neural network for an image recognition problem. Now, I want to test if I have assigned the weights & biases for the hidden layer correctly. To perform this action, I am giving an identity matrix as input. Below is my identity matrix:
A = [ 1, 0, 00, 1, 00, 0, 1]
7) How would you create this identity matrix in python?
Note: Library numpy has been imported as np.
A) np.eye(3)
B) identity(3)
C) np.array([1, 0, 0], [0, 1, 0], [0, 0, 1])
D) All of these<term>a<row>To check whether the two arrays occupy same space, what would you do?
I have two numpy arrays "e" and "f".
You get the following output when you print "e" & "f"
print e
[1, 2, 3, 2, 3, 4, 4, 5, 6]
print f
[[1, 2, 3], [2, 3, 4], [4, 5, 6]]
When you change the values of the first array, the values for the second array also changes. This creates a problem while processing the data.
For example, if you set the first 5 values of e as 0; i.e.
print e[:5]
0
the final values of e and f are
print e
[0, 0, 0, 0, 0, 4, 4, 5, 6]
print f
[[0, 0, 0], [0, 0, 4], [4, 5, 6]]
You surmise that the two arrays must have the same space allocated.
A) Check memory of both arrays, if they match that means the arrays are same.
B) Do "np.array_equal(e, f)" and if the output is "True" then they both are same
C) Print flags of both arrays by e.flags and f.flags; check the flag "OWNDATA". If one of them is False, then both the arrays have same space allocated.
D) None of these<term>c<row>Suppose you want to join train and test dataset (both are two numpy arrays train_set and test_set) into a resulting array (resulting_set) to do data processing on it simultaneously. This is as follows:
train_set = np.array([1, 2, 3])
test_set = np.array([[0, 1, 2], [1, 2, 3]])
resulting_set --> [[1, 2, 3], [0, 1, 2], [1, 2, 3]]
9) How would you join the two arrays?
Note: Numpy library has been imported as np
A) resulting_set = train_set.append(test_set)
B) resulting_set = np.concatenate([train_set, test_set])
C) resulting_set = np.vstack([train_set, test_set])
D) None of these<term>c<row>Suppose you are tuning hyperparameters of a random forest classifier for the Iris dataset.
Sepal_length | Sepal_width | Petal_length | Petal_width | Species
4.6 | 3.2 | 1.4 | 0.2 | Iris-setosa
5.3 | 3.7 | 1.5 | 0.2 | Iris-setosa
5.0 | 3.3 | 1.4 | 0.2 | Iris-setosa
7.0 | 3.2 | 4.7 | 1.4 | Iris-versicolor
6.4 | 3.2 | 4.5 | 1.5 | Iris-versicolor

What would be the best value for "random_state (Seed value)"?
A) np.random.seed(1)
B) np.random.seed(40)
C) np.random.seed(32)
D) Can't say<term>d<row>While reading a csv file with numpy, you want to automatically fill missing values of column "Date_Of_Joining" with date "01/01/2010".
Name Age Date_Of_Joining Total_Experience
Andy 20 01/02/2013 0
Mandy 30 01/05/2014 10
Sandy 10 None 0
Bandy 40 01/10/2009 20

Which command will be appropriate to fill missing value while reading the file with numpy?
Note: numpy has been imported as np
A) filling_values = ("-", 0, 01/01/2010, 0)temp = np.genfromtxt(filename, filling_values=filling_values)
B) filling_values = ("-", 0, 01/01/2010, 0)temp = np.loadtxt(filename, filling_values=filling_values)
C) filling_values = ("-", 0, 01/01/2010, 0)temp = np.gentxt(filename, filling_values=filling_values)
D) None of these<term>a<row>How would you import a decision tree classifier in sklearn?
A) from sklearn.decision_tree import DecisionTreeClassifier
B) from sklearn.ensemble import DecisionTreeClassifier
C) from sklearn.tree import DecisionTreeClassifier
D) None of these<term>c<row>You have uploaded the dataset in csv format on google spreadsheet and shared it publicly. You want to access it in python, how can you do this?
Note: Library StringIO has been imported as StringIO.
A)
link = https://docs.google.com/spreadsheets/d/...source = StringIO.StringIO(requests.get(link).content))
data = pd.read_csv(source)
B)
link = https://docs.google.com/spreadsheets/d/...source = StringIO(request.get(link).content))
data = pd.read_csv(source)
C)
link = https://docs.google.com/spreadsheets/d/...source = StringIO(requests.get(link).content))
data = pd.read_csv(source)
D) None of these<term>a<row>Imagine, you have a dataframe train file with 2 columns & 3 rows, which is loaded in pandas.
import pandas as pd
train = pd.DataFrame({'id':[1,2,4],'features':[["A","B","C"],["A","D","E"],["C","D","F"]]})
Now you want to apply a lambda function on "features" column:
train['features_t'] = train["features"].apply(lambda x: " ".join(["_".join(i.split(" ")) for i in x]))
What will be the output of following print command?
print train['features_t']
A)
0 A B C
1 A D E
2 C D F
B)
0 AB
1 ADE
2 CDF
C) Error
D) None of these<term>a<row>Which of the following codes would help you perform this task?
Note: Numpy has been imported as np and dataframe is set as df.
A)
Y = df[quality].values
Y = np.array([1 if y >= 6 else 0 for y in Y])
B)
Y = df[quality].values()
Y = np.array([0 if y >= 6 else 1 for y in Y])
C)
Y = df[quality]
Y = np.array([0 if y >= 6 else 1 for y in Y])
D)None of these<term>a<row>Suppose we make a dataframe as
df = pd.DataFrame(['ff', 'gg', 'hh', 'yy'],
 [24, 12, 48, 30],
 columns = ['Name', 'Age'])
16) What is the difference between the two data series given below?
1. df['Name'] and
2. df.loc[:, 'Name']
Note: Pandas has been imported as pd
A) 1 is view of original dataframe and 2 is a copy of original dataframe.
B) 2 is view of original dataframe and 1 is a copy of original dataframe.
C) Both are copies of original dataframe.
D) Both are views of original dataframe<term>b<row>Consider a function "fun" which is defined below:
def fun(x):
 x[0] = 5
 return x
Now you define a list which has three numbers in it.
g = [10,11,12]
17) Which of the following will be the output of the given print statement:
print fun(g), g
A) [5, 11, 12] [5, 11, 12]
B) [5, 11, 12] [10, 11, 12]
C) [10, 11, 12] [10, 11, 12]
D) [10, 11, 12] [5, 11, 12]<term>a<row>Sigmoid function is usually used for creating a neural network activation function. A sigmoid function is denoted as
def sigmoid(x):
 return (1 / (1 + math.exp(-x)))
18) It is necessary to know how to find the derivatives of sigmoid, as it would be essential for backpropagation. Select the option for finding derivative?
A)
import scipy
Dv = scipy.misc.derive(sigmoid)
B)
from sympy import *
x = symbol(x)
y = sigmoid(x)
Dv = y.differentiate(x)
C)
Dv = sigmoid(x) * (1 - sigmoid(x))
D) None of these<term>c<row>Suppose you are given a monthly data and you have to convert it to daily data.
For example,
For this, first you have to expand the data for every month (considering that every month has 30 days)
19) Which of the following code would do this?
Note: Numpy has been imported as np and dataframe is set as df.
A) new_df = pd.concat([df]*30, index = False)
B) new_df = pd.concat([df]*30, ignore_index=True)
C) new_df = pd.concat([df]*30, ignore_index=False)
D) None of these<term>b<row>Suppose you are given a dataframe df.
df = pd.DataFrame({'Click_Id':['A','B','C','D','E'],'Count':[100,200,300,400,250]})
20) Now you want to change the name of the column 'Count' in df to 'Click_Count'. So, for performing that action you have written the following code.
df.rename(columns = {'Count':'Click_Count'})
What will be the output of print statement below?
print df.columns
Note: Pandas library has been imported as pd.
A) ['Click_Id', 'Click_Count']
B) ['Click_Id', 'Count']
C) Error
D) None of these<term>b<row>Suppose you are given a data frame df.
df = pd.DataFrame({'Click_Id':['A','B','C','D','E'],'Count':[100,200,300,400,250]})
21) In many data science projects, you are required to convert a dataframe into a dictionary. Suppose you want to convert "df" into a dictionary such that 'Click_Id' will be the key and 'Count' will be the value for each key. Which of the following options will give you the desired result?
Note: Pandas library has been imported as pd
A) set_index('Click_Id')['Count'].to_dict()
B) set_index('Count')['Click_Id'].to_dict()
C) We cannot perform this task since dataframe and dictionary are different data structures
D) None of these<term>a<row>22) In above dataframe df. Suppose you want to assign a df to df1, so that you can recover original content of df in future using df1 as below.
df1 = df
Now you want to change some values of "Count" column in df.
df.loc[df.Click_Id == 'A', 'Count'] += 100
Which of the following will be the right output for the below print statement?
print df.Count.values,df1.Count.values
Note: Pandas library has been imported as pd.
A) [200 200 300 400 250] [200 200 300 400 250]
B) [100 200 300 400 250] [100 200 300 400 250]
C) [200 200 300 400 250] [100 200 300 400 250]
D) None of these<term>a<row>You write a code for preprocessing data, and you notice it is taking a lot of time. To amend this, you put a bookmark in the code so that you come to know how much time is spent on each code line. To perform this task, which of the following actions you would take?
1. You put bookmark as time.sleep() so that you would know how much the code has "slept" literally
2. You put bookmark as time.time() and check how much time elapses in each code line
3. You put bookmark as datetime.timedelta(), so that you would find out differences of execution times
4. You copy whole code in an Ipython / Jupyter notebook, with each code line as a separate block and write magic function %%timeit in each block
A) 1 & 2
B) 1,2 & 3
C) 1,2 & 4
D) All of the above<term>c<row>How would you read data from the file using pandas by skipping the first three lines?
Note: pandas library has been imported as pd In the given file (email.csv), the first three records are empty.
,,,
,,,
,,,
Email_Address,Nickname,Group_Status,Join_Year
aa@aaa.com,aa,Owner,2014
bb@bbb.com,bb,Member,2015
cc@ccc.com,cc,Member,2017
dd@ddd.com,dd,Member,2016
A) read_csv('email.csv', skip_rows=3)
B) read_csv('email.csv', skiprows=3)
C) read_csv('email.csv', skip=3)
D) None of these<term>b<row>What should be written in-place of "method" to produce the desired outcome?
Given below is dataframe "df":
Now, you want to know whether BMI and Gender would influence the sales.
For this, you want to plot a bar graph as shown below:
The code for this is:
var = df.groupby(['BMI','Gender']).Sales.sum()
var.unstack().plot(kind='bar', method, color=['red','blue'], grid=False)
A) stacked=True
B) stacked=False
C) stack=False
D) None of these<term>a<row>Suppose, you are given 2 list - City_A and City_B.
City_A = ['1′,'2′,'3′,'4']
City_B = ['2′,'3′,'4′,'5']
In both cities, some values are common. Which of the following code will find the name of all cities which are present in "City_A" but not in "City_B".
A) [i for i in City_A if i not in City_B]
B) [i for i in City_B if i not in City_A]
C) [i for i in City_A if i in City_B]
D) None of these<term>a<row>Suppose you are trying to read a file "temp.csv" using pandas and you get the following error.
Traceback (most recent call last):
File "<input>", line 1, in<module>
UnicodeEncodeError: 'ascii' codec can't encode character.
27) Which of the following would likely correct this error?
Note: pandas has been imported as pd
A) pd.read_csv("temp.csv", compression='gzip')
B) pd.read_csv("temp.csv", dialect='str')
C) pd.read_csv("temp.csv", encoding='utf-8′)
D) None of these<term>c<row>Suppose you are defining a tuple given below:
tup = (1, 2, 3, 4, 5 )
Now, you want to update the value of this tuple at 2nd index to 10. Which of the following option will you choose?
A) tup(2) = 10
B) tup[2] = 10
C) tup{2} = 10
D) None of these<term>d<row>You want to read a website which has url as "www.abcd.org". Which of the following options will perform this task?
A) urllib2.urlopen(www.abcd.org)
B) requests.get(www.abcd.org)
C) Both A and B
D) None of these<term>c<row>Suppose you are given the below web page
html_doc = """
<!DOCTYPE html>
<htmllang="en">
<head>
<metacharset="utf-8">
<metaname="viewport" content="width=device-width">
<title>udacity/deep-learning: Repo for the Deep Learning Nanodegree Foundations program.</title>
<linkrel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
<linkrel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
<metaproperty="fb:app_id" content="1401488693436528">
<linkrel="assets" href="https://assets-cdn.github.com/">
...
"""
30) To read the title of the webpage you are using BeautifulSoup. What is the code for this?
Hint: You have to extract text in title tag
A. from bs4 import BeautifulSoupsoup =BeautifulSoup(html_doc,'html.parser')print soup.title.name
B. from bs4 import BeautifulSoupsoup =BeautifulSoup(html_doc,'html.parser')print soup.title.string
C. from bs4 import BeautifulSoupsoup=BeautifulSoup(html_doc,'html.parser')print soup.title.get_text
D. None of these<term>b<row>Question Context 31
Imagine, you are given a list of items in a DataFrame as below.
D = ['A','B','C','D','E','AA','AB']
Now, you want to apply label encoding on this list for importing and transforming, using LabelEncoder.
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
31) What will be the output of the print statement below ?
print le.fit_transform(D)
A. array([0, 2, 3, 4, 5, 6, 1])
B. array([0, 3, 4, 5, 6, 1, 2])
C. array([0, 2, 3, 4, 5, 1, 6])
D. Any of the above<term>d<row>Which of the following will be the output of the below print statement?
print df.val == np.nan
Assume, you have defined a data frame which has 2 columns.
import numpy as np
df = pd.DataFrame({'Id':[1,2,3,4],'val':[2,5,np.nan,6]})
A) 0 False 1 False 2 False 3 False
B) 0 False 1 False 2 True 3 False
C) 0 True 1 True 2 True 3 True
D) None of these<term>a<row>Suppose the data is stored in HDFS format and you want to find how the data is structured. For this, which of the following command would help you find out the names of HDFS keys?
Note: HDFS file has been loaded by h5py as hf.
A) hf.key()
B) hf.key
C) hf.keys()
D) None of these<term>c<row>You are given reviews for movies below:
reviews = ['movie is unwatchable no matter how decent the first half is . ', 'somewhat funny and well paced action thriller that has jamie foxx as a hapless fast talking hoodlum who is chosen by an overly demanding', 'morse is okay as the agent who comes up with the ingenious plan to get whoever did it at all cost .']
Your task is to find sentiments from the review above. For this, you first write a code to find count of individual words in all the sentences.
counts = Counter()
for i in range(len(reviews)):
for word in reviews[i].split(value):
counts[word] += 1
34)What value should we split on to get individual words?
A. ' '
B. ','
C. '.'
D. None of these<term>a<row>How to set a line width in the plot given below?
For the above graph, the code for producing the plot was
import matplotlib.pyplot as plt
plt.plot([1,2,3,4])
plt.show()
A. In line two, write plt.plot([1,2,3,4], width=3)
B. In line two, write plt.plot([1,2,3,4], line_width=3
C. In line two, write plt.plot([1,2,3,4], lw=3)
D. None of these<term>c<row>How would you reset the index of a dataframe to a given list? The new index is given as:
new_index=['Safari','Iceweasel','Comodo Dragon','IE10′,'Chrome']
Note: df is a pandas dataframe
http_status response_time
Firefox 200 0.04
Chrome 200 0.02
Safari 404 0.07
IE10 404 0.08
Konqueror 301 1.00
A) df.reset_index(new_index,)
B) df.reindex(new_index,)
C) df.reindex_like(new_index,)
D) None of these<term>a<row>You want to write a generic code to calculate n-gram of the text. The 2-gram of this sentence would be [["this, "is"], ["is", "a"], ["a, "sample"], ["sample", "text"]]
Which of the following code would be correct?
For a given a sentence:'this is a sample text'.
A. def generate_ngrams(text, n):words = text.split('\n')output = [] for i in range(len(words)-n+1):append(words[i+1:i+n])return output
B. def generate_ngrams(text, n):words = text.split()output = [] for i in range(len(words)-n+1):append(words[i:i+n])return output
C. def generate_ngrams(text, n):words = text.split()output = [] for i in range(len(words)-n+1):append(words[i+1:i+n])return output
D. None of these<term>b<row>Which of the following code will export dataframe (df) in CSV file, encoded in UTF-8 after hiding index & header labels.
A. df_1.to_csv('../data/file.csv',encoding='utf-8′,index=True,header=False)
B. df_1.to_csv('../data/file.csv',encoding='utf-8′,index=False,header=True)
C. df_1.to_csv('../data/file.csv',encoding='utf-8′,index=False,header=False)
D. None of these<term>c<row>Which of the following is a correct implementation of mean squared error (MSE) metric?
Note: numpy library has been imported as np.
A. def MSE(real_target, predicted_target):return np.mean((np.square(real_target) - np.square(predicted_target)))
B. def MSE(real_target, predicted_target):return np.mean((real_target - predicted_target)**2)
C. def MSE(real_target, predicted_target):return np.sqrt(np.mean((np.square(real_target) - np.square(predicted_target))))
D. None of the above<term>b<row>How do you create a window?
A. window = newWindow()
B. window = Window()
C. window = Frame()
D. window = Tk()<term>d<row>How do you create a frame?
A. frame = newWindow()
B. frame = Window()
C. frame = Frame()
D. frame = Tk()<term>c<row>How do you create an event loop?
A. window.loop()
B. window.main()
C. window.mainloop()
D. window.eventloop()<term>c<row>To create a label under parent window, use _______.
A. label = Label(text = "Welcome to Python")
B. label = Label(window, text = "Welcome to Python")
C. label = Label(text = "Welcome to Python", fg = " red")
D. label = Label(text = "Welcome to Python", fg = " red", bg = "white")<term>b<row>To create a button under parent window with command processButton, use _______.
A. Button(text = "OK", fg = "red", command = processButton)
B. Button(window, text = "OK", fg = "red")
C. Button(window, text = "OK", fg = "red")
D. Button(window, text = "OK", command = processButton)<term>d<row>Assume v1 = IntVar(), how do you set a new value 5 to v1.
A. v1 = 5
B. v1.setValue(5)
C. v1.set(5)
D. v1.get(5)<term>c<row>Assume v1 = IntVar(), how do you create a check button under parent frame1 with variable bound to v1?
A. Checkbutton(frame1, text = "Bold", command = processCheckbutton)
B. Checkbutton(frame1, text = "Bold", variable = v1.get())
C. Checkbutton(frame1, text = "Bold", variable = v1, command = processCheckbutton)
D. Checkbutton(frame1, text = "Bold", variable = v1.set(), command = processCheckbutton)<term>c<row>Assume v1 = IntVar(), how do you create a radio button under parent frame1 with variable bound to v1 and value 1?
A. Checkbutton(frame1, text = "Bold", command = processCheckbutton)
B. Checkbutton(frame1, text = "Bold", variable = v1.get())
C. Checkbutton(frame1, text = "Bold", variable = v1, command = processCheckbutton)
D. Radiobutton(frame1, text = "Yellow", bg = "yellow", variable = v1, value = 1, command = processRadiobutton)<term>d<row>Assume name = StringVar(), how do you create a text field (entry) under parent frame2 with variable bound to name?
A. entryName = Entry(frame2, textvariable = name)
B. entryName = Entry(frame2, variable = name, value = "")
C. entryName = Entry(frame2, textvariable = name, command = processEntry)
D. entryName = Entry(frame2, text = name, command = processEntry)<term>a<row>How do you create a GUI component for displaying multiple-lines of text?
A. use Label
B. Use Button
C. Use Text
D. Use Message<term>d<row>How do you create a text area?
A. use Label
B. Use Button
C. Use Text
D. Use Message<term>c<row>How do you create a canvas under parent frame1 with background color white and foregroung color green?
A. Canvas(frame1, bg = "white", fg = "green")
B. Canvas(frame1, bg = "white", fg = "green", command = processEvent)
C. Canvas(frame1, bg = "white", command = processEvent)
D. Canvas(frame1, fg = "green", command = processEvent)<term>a<row>How do you draw a rectangle centered at 100, 100 with width 100 and height 100 on canvas?
A. canvas.create_rect(100, 100, 100, 100)
B. canvas.create_rectangle(100, 100, 100, 100)
C. canvas.create_rect(100 - 50, 100 - 50, 100 + 50, 100 + 50)
D. canvas.create_rectangle(100 - 50, 100 - 50, 100 + 50, 100 + 50)<term>d<row>How do you draw a circle rectangle centered at 100, 100 with radius 100 on canvas?
A. canvas.create_oval(100, 100, 100, 100)
B. canvas.create_oval(100 - 100, 100 - 100, 100 + 100, 100 + 100)
C. canvas.create_oval(100 - 50, 100 - 50, 100 + 50, 100 + 50)
D. canvas.create_circle(100 - 100, 100 - 100, 100 + 100, 100 + 100)<term>b<row>How do you draw an arc centered at 100, 100 with radius 20, starting angle 15, ending angle 50, filled with red color on canvas?
A. canvas.create_arc(100 - 20, 100 - 20, 100 + 20, 100 + 20, fill = "red", start = 15, extent = 50)
B. canvas.create_arc(100 - 20, 100 - 20, 100 + 20, 100 + 20, fill = "red", start = 15, extent = 35)
C. canvas.create_arc(100 - 20, 100 - 20, 100 + 20, 100 + 20, filled = "red", start = 15, extent = 50)
D. canvas.create_arc(100 - 20, 100 - 20, 100 + 20, 100 + 20, fill = "red", start = 15, end = 50)<term>b<row>How do you draw a red line from 100, 100 to 400, 500?
A. canvas.create_line(100, 100, 100, 500, fill = "red")
B. canvas.create_line(100, 100, 400, 100, fill = "Red")
C. canvas.create_line(100, 100, 400, 500, filled = "red")
D. canvas.create_line(100, 100, 400, 500, fill = "red")<term>d<row>How do you draw a polygon consisting of points (30, 40), (50, 50), (10, 100) filled with red color?
A. canvas.create_poly(30, 40, 50, 50, 10, 100, fill = "red")
B. canvas.create_polygon(30, 40, 50, 50, 10, 100, filled = "red")
C. canvas.create_polygon(30, 40, 50, 50, 10, 100, fill = "red")
D. canvas.create_polygon((30, 40), (50, 50), (10, 100), fill = "red")<term>c<row>How do you display a text "Good morning" centered at 30, 40 with color red?
A. canvas.create_text(30, 40, text = "Good morning", fill = "red")
B. canvas.create_polygon(30, 40, 50, 50, 10, 100, filled = "red")
C. canvas.create_polygon(30, 40, 50, 50, 10, 100, fill = "red")
D. canvas.create_polygon((30, 40), (50, 50), (10, 100), fill = "red")<term>a<row>To place a button in a specified row and column in its parent container, use ________.
A. pack manager
B. grid manager
C. place manager
D. flow manager<term>b<row>Which option do you use to put the components in a container using the pack manager in the same row?
A. component.pack(LEFT)
B. component.pack(side = LEFT)
C. component.pack(side = "LEFT")
D. component.pack("LEFT")<term>b<row>To create an image, use ______________________.
A. image = PhotoImage(imagefilename)
B. image = Image(file = imagefilename)
C. image = PhotoImage(file = imagefilename)
D. image = PhotoImage(imagefilename)<term>c<row>You can create an image from a ____________ file.
A. .png
B. .gif
C. .bmp
D. .jpg<term>b<row>To create a menu in a window, use __________
A. menubar = Menu(window)
B. menubar = MenBar(window)
C. menubar = Menu()
D. menubar = MenBar()<term>a<row>To add a menubar, use __________
A. window.configure(menu = menubar)
B. window.config(menubar)
C. window.config(menu = menubar)
D. window.configure(menubar)<term>c<row>To display a popup menu, use __________
A. menu.display()
B. menu.post()
C. menu.display(300, 300)
D. menu.post(300, 300)<term>d<row>To bind a canvas with a left mouse click event p, use __________
A. canvas.left(p)
B. canvas.bind("<Button-1>", p)
C. canvas.bind("Button-1", p)
D. canvas.bind(<Button-1>, p)<term>b<row>To bind a canvas with a right mouse click event p, use __________
A. canvas.left(p)
B. canvas.bind("<Button-1>", p)
C. canvas.bind("Button-1", p)
D. canvas.bind(<Button-1>, p)
E. canvas.bind("<Button-3>", p)<term>e<row>To bind a canvas with a mouse entered event p, use __________
A. canvas.entered(p)
B. canvas.bind("<Enter>", p)
C. canvas.bind("<Entered>", p)
D. canvas.bind(<Enter>, p)<term>b<row>The event _____________ is fired when the mouse is moved while the middle mouse is being held down.
A. <B1-Motion>
B. <B2-Motion>
C. <B3-Motion>
D. <Button-1>
E. <Button-2><term>b<row>The event _____________ is fired when the right mouse button is released.
A. <ButtonReleased-1>
B. <ButtonReleased-2>
C. <ButtonReleased-3>
D. <ButtonPressed-1>
E. <ButtonPressed-2><term>c<row>The event _____________ is fired when the right mouse button is double-clicked.
A. <Double-Button-1>
B. <Double-Button-2>
C. <Double-Button-3>
D. <Triple-Button-1>
E. <Triple-Button-2><term>c<row>To bind a canvas with a key event p, use __________
A. canvas.entered(p)
B. canvas.bind("<Enter>", p)
C. canvas.bind("<Key>", p)
D. canvas.bind(<Enter>, p)
E. canvas.bind("<Enter>", p)<term>c<row>To display a message dialog named "Programming is fun", use __________
A. tkinter.messagebox.showinfo("showinfo", "Programming is fun")
B. tkinter.messagebox.showwarning("showwarning", "Programming is fun")
C. tkinter.messagebox.showerror("showerror", "Programming is fun")
D. tkinter.messagebox.askyesno("ashyesno", "Programming is fun")<term>a<row>To display an error dialog named "Variable is not assigned", use __________
A. tkinter.messagebox.showinfo("showinfo", "Variable is not assigned")
B. tkinter.messagebox.showwarning("showwarning", "Variable is not assigned")
C. tkinter.messagebox.showerror("showerror", "Variable is not assigned")
D. tkinter.messagebox.askyesno("ashyesno", "Variable is not assigned")<term>c<row>To display an input dialog named "Is this an integer?", use __________
A. tkinter.messagebox.showinfo("showinfo", "Is this an integer?")
B. tkinter.messagebox.showwarning("showwarning", "Is this an integer?")
C. tkinter.messagebox.showerror("showerror", "Is this an integer?")
D. tkinter.messagebox.askyesno("ashyesno", "Is this an integer?")<term>d<row>What is a correct syntax to return the first character in a string?get first ("Hello")
a) x = "Hello".sub(0, 1)
b) x = "Hello"[1]
c) x = "Hello"[0]
d) x = sub("Hello", 0, 1)<term>c<row>Which collection is ordered, changeable, and allows duplicate members?
a) TUPLE
b) LIST
c) DICTIONARY
d) SET<term>b<row>Which collection does not allow duplicate members?
a) TUPLE
b) LIST
c) DICTIONARY
d) SET<term>d<row>What is the purpose of a foreign primary key?
a) To look up a row based on a string that comes from outside the program
b) To look up a particular row in a table very quickly
c) To track the number of duplicate values in another column
d) To link two tables together<term>d<row>When Python is running in the interactive mode and displaying the chevron prompt (>>>) - what question is Python asking you?

A. What Python script would you like me to run?
B. What is your favourite color?
C. What would you like to do?
D. What is the next machine language instruction to run?<term>C<row>What will the following program print out:
>>> x = 15
>>> x = x + 5
>>> print(x)

A. 20
B. 5
C. 15
D. "print x"
E. x + 5<term>A<row>Python scripts (files) have names that end with:

A) .py
B) .exe
C) .png
D) .doc<term>A<row>Which of these words is a reserved word in Python ?

A. while
B. payroll
C. names
D. pizza<term>A<row>What is the proper way to say "good-bye" to Python?

A. while
B. // stop
C. #EXIT
D. quit()<term>D<row>Which of the parts of a computer actually executes the program instructions?

A. Main Memory
B. Central Processing Unit
C. Input/Output Devices
D. Secondary Memory<term>B<row>What is "code" in the context of this course?

A. A password we use to unlock Python features
B. A sequence of instructions in a programming language
C. A way to encrypt data during World War II
D. A set of rules that govern the style of programs<term>B<row>A USB memory stick is an example of which of the following components of computer architecture?

A. Central Processing Unit
B. Main Memory
C. Output Device
D. Secondary Memory<term>D<row>What is the best way to think about a "Syntax Error" while programming?

A. The computer is overheating and just wants you to stop to let it cool down
B. The computer has used GPS to find your location and hates everyone from your town
C. The computer did not understand the statement that you entered
D. The computer needs to have its software upgraded<term>C<row>Which of the following is not one of the programming patterns covered in Chapter 1?

A. Random steps
B. Sequential Steps
C. Conditional Steps
D. Repeated Steps<term>A<row>Which of the following is a comment in Python?

A. // This is a test
B. * This is a test
C. /** This is a test **/
D. # This is a test<term>D<row>What does the following code print out?

print("123" + "abc")

A. 123+abc
B. This is a syntax error because you cannot add strings
C. 123abc
D. hello world<term>C<row>Which of the following variables is the "most mnemonic"?

A. x
B. x1q3z9ocd
C. hours
D. variable_173<term>C<row>Which of the following is not a Python reserved word?

A. spam
B. break
C. continue
D. for<term>A<row>Assume the variable x has been initialized to an integer value (e.g., x = 3). What does the following statement do?

x = x + 2

A. Create a function called "x" and put the value 2 in the function
B. Produce the value "false" because "x" can never equal "x+2"
C. This would fail as it is a syntax error
D. Retrieve the current value for x, add two to it and put the sum back into x<term>D<row>Which of the following elements of a mathematical expression in Python is evaluated first?

A. Addition +
B. Subtraction -
C. Parentheses ( )
D. Multiplication *<term>C<row>What is the value of the following expression

42 % 10

Hint - the "%" is the remainder operator

A. 4210
B. 2
C. 0.42
D. 10<term>B<row>What will be the value of x after the following statement executes:

x = 1 + 2 * 3 - 8 / 4

A. 2.0
B. 5.0
C. 8
D. 4<term>B<row>What will be the value of x when the following statement is executed:

x = int(98.6)

A. 98
B. 6
C. 100
D. 99<term>A<row>What does the Python input() function do?

A. Pause the program and read data from the user
B. Connect to the network and retrieve a web page.
C. Read the memory of the running program
D. Take a screen shot from an area of the screen<term>A<row>What do we do to a Python statement that is immediately after an if statement to indicate that the statement is to be executed only when the if statement is true?

A. Indent the line below the if statement
B. Underline all of the conditional code
C. Start the statement with a "#" character
D. Begin the statement with a curly brace {<term>A<row>Which of these operators is not a comparison / logical operator?
A. <
B. =
C. !=
D. ==
E. >=<term>B<row>What is true about the following code segment:

if x == 5 :
 print('Is 5')
 print('Is Still 5')
 print('Third 5')

A. Depending on the value of x, either all three of the print statements will execute or none of the statements will execute
B. The string 'Is 5' will always print out regardless of the value for x.
C. The string 'Is 5' will never print out regardless of the value for x.
D. Only two of the three print statements will print out if the value of x is less than zero.<term>A<row>When you have multiple lines in an if block, how do you indicate the end of the if block?

A. You de-indent the next line past the if block to the same level of indent as the original if statement
B. You omit the semicolon ; on the last line of the if block
C. You use a curly brace { after the last line of the if block
D. You put the colon : character on a line by itself to indicate we are done with the if block<term>A<row>You look at the following text:

if x == 6 :
 print('Is 6')
 print('Is Still 6')
 print('Third 6')

It looks perfect but Python is giving you an 'Indentation Error' on the second print statement. What is the most likely reason?

A. You have mixed tabs and spaces in the file
B. Python thinks 'Still' is a mis-spelled word in the string
C. Python has reached its limit on the largest Python program that can be run
D. In order to make humans feel inadequate, Python randomly emits 'Indentation Errors' on perfectly good code - after about an hour the error will just go away without any changes to your program<term>A<row>What is the Python reserved word that we use in two-way if tests to indicate the block of code that is to be executed if the logical test is false?

A. A closing curly brace followed by an open curly brace like this }{
B. else
C. otherwise
D. iterate<term>B<row>What will the following code print out?

x = 0
if x < 2 :
 print('Small')
elif x < 10 :
 print('Medium')
else :
 print('LARGE')

print('All done')

A. All done
B. Small
 Medium
 LARGE
 All done
C. Small
 All done
D. LARGE
 All done<term>C<row>For the following code,

if x < 2 :
 print('Below 2')
elif x >= 2 :
 print('Two or more')
else :
 print('Something else')

What value of 'x' will cause 'Something else' to print out?

A. x = 2.0
B. This code will never print 'Something else' regardless of the value for 'x'
C. x = 2
D. x = -2<term>B<row>In the following code (numbers added) - which will be the last line to execute successfully?

(1) astr = 'Hello Bob'
(2) istr = int(astr)
(3) print('First', istr)
(4) astr = '123'
(5) istr = int(astr)
(6) print('Second', istr)

A. 2
B. 1
C. 5
D. 4<term>B<row>For the following code:

astr = 'Hello Bob'
istr = 0
try:
 istr = int(astr)
except:
 istr = -1

What will the value be for istr after this code executes?

A. The istr variable will not have a value
B. It will be the 'Not a number' value (i.e. NaN)
C. -1
D. It depends on the position in the collating sequence for the letter 'H'<term>C<row>Which Python keyword indicates the start of a function definition?

A. return
B. rad
C. def
D. continue<term>C<row>In Python, how do you indicate the end of the block of code that makes up the function?

A. You add a line that has at least 10 dashes
B. You put the colon character (:) in the first column of a line
C. You add the matching curly brace that was used to start the function }
D. You de-indent a line of code to the same indent level as the def keyword<term>D<row>In Python what is the input() feature best described as?

A. A reserved word
B. A data structure that can hold multiple values using strings as keys
C. A user-defined function
D. A built-in function<term>D<row>What does the following code print out?

def thing():
 print('Hello')

print('There')

A. Hello
B. There
C. Hello
 There
D. thing
 Hello
 There<term>B<row>In the following Python code, which of the following is an "argument" to a function?

x = 'banana'
y = max(x)
print(y)

A. max
B. 'banana'
C. print
D. x<term>D<row>What will the following Python code print out?

def func(x) :
 print(x)

func(10)
func(20)

A. x
 10
 x
 20
B. func
 func
C. 10
 20
D. x
 20<term>C<row>Which line of the following Python program will never execute?

def stuff():
 print('Hello')
 return
 print('World')

stuff()

A. print('Hello')
B. stuff()
C. print ('World')
D. return
E. def stuff():<term>C<row>What will the following Python program print out?

def greet(lang):
 if lang == 'es':
 return 'Hola'
 elif lang == 'fr':
 return 'Bonjour'
 else:
 return 'Hello'

print(greet('fr'),'Michael')

A. Bonjour Michael
B. Hola Michael
C. Hello Michael
D. def
 Hola
 Bonjour
 Hello
 Michael<term>A<row>What does the following Python code print out? (Note that this is a bit of a trick question and the code has what many would consider to be a flaw/bug - so read carefully).

def addtwo(a, b):
 added = a + b
 return a

x = addtwo(2, 7)
print(x)

A. 9
B. 7
C. 14
D. 2<term>D<row>What is the most important benefit of writing your own functions?

A. Following the rule that no function can have more than 10 statements in it
B. Avoiding writing the same non-trivial code more than once in your program
C. To avoid having more than 10 lines of sequential code without an indent or de-indent
D. Following the rule that whenever a program is more than 10 lines you must use a function<term>B<row>What is wrong with this Python loop:

n = 5
while n > 0 :
 print(n)

print('All done')

A. This loop will run forever
B. The print('All done') statement should be indented four spaces
C. There should be no colon on the while statement
D. while is not a Python reserved word<term>A<row>What does the *break* statement do?

A. Exits the program
B. Jumps to the "top" of the loop and starts the next iteration
C. Resets the iteration variable to its initial value
D. Exits the currently executing loop<term>D<row>What does the *continue* statement do?

A. Resets the iteration variable to its initial value
B. Exits the program
C. Jumps to the "top" of the loop and starts the next iteration
D. Exits the currently executing loop<term>C<row>What does the following Python program print out?

tot = 0
for i in [5, 4, 3, 2, 1] :
 tot = tot + 1

print(tot)

A. 10
B. 5
C. 0
D. 15<term>B<row>What is the iteration variable in the following Python code:

friends = ['Joseph', 'Glenn', 'Sally']
for friend in friends :
 print('Happy New Year:', friend)

print('Done!')

A. friend
B. Sally
C. Glenn
D. Joseph<term>A<row>What is a good description of the following bit of Python code?

zork = 0
for thing in [9, 41, 12, 3, 74, 15] :
zork = zork + thing

print('After', zork)

A. Count all of the elements in a list
B. Compute the average of the elements in a list
C. Find the smallest item in a list
D. Sum all the elements of a list<term>D<row>What will the following code print out?

smallest_so_far = -1
for the_num in [9, 41, 12, 3, 74, 15] :
 if the_num < smallest_so_far :
 smallest_so_far = the_num

print(smallest_so_far)

Hint: This is a trick question and most would say this code has a bug - so read carefully

A. -1
B. 74
C. 42
D. 3<term>A<row>What is a good statement to describe the *is* operator as used in the following if statement:

if smallest is None :
 smallest = value

A. matches both type and value
B. Looks up 'None' in the smallest variable if it is a string
C. Is true if the smallest variable has a value of -1
D. The if statement is a syntax error<term>A<row>Which reserved word indicates the start of an "indefinite" loop in Python?

A. for
B. break
C. while
D. def
E. indef<term>C<row>How many times will the body of the following loop be executed?

n = 0
while n > 0 :
 print('Lather')
 print('Rinse')

print('Dry off!')

A. 1
B. 0
C. 5
D. This is an infinite loop<term>B<row>What does the following Python Program print out?

str1 = "Hello"
str2 = 'there'
bob = str1 + str2
print(bob)

A. Hello
there
B. Hello there
C. Hellothere
D. Hello<term>C<row>What does the following Python program print out?

x = '40'
y = int(x) + 2
print(y)

A. int402
B. 42
C. x2
D. 402<term>B<row>How would you use the index operator [] to print out the letter q from the following string?

x = 'From marquard@uct.ac.za'

A. print(x[8])
B. print(x[9])
C. print x[-1]
D. print(x[7])
E. print(x[q])<term>A<row>How would you use string slicing [:] to print out 'uct' from the following string?

x = 'From marquard@uct.ac.za'

A. print(x[14:17])
B. print(x[14:3])
C. print(x[15:18])
D. print(x[14/17])
E. print(x[15:3])
F. print(x[14+17])<term>A<row>What is the iteration variable in the following Python code?

for letter in 'banana' :
 print(letter)

A. 'banana'
B. for
C. in
D. print
E. letter<term>E<row>What does the following Python code print out?

print(len('banana')*7)

A. -1
B. banana banana banana banana banana banana banana
C. 42
D. banana7<term>C<row>How would you print out the following variable in all upper case in Python?

greet = 'Hello Bob'

A. print(uc($greet));
B. console.log(greet.toUpperCase());
C. puts(greet.ucase);
D. print(greet.upper())<term>D<row>Which of the following is not a valid string method in Python?

A. twist()
B. startswith()
C. join()
D. split()<term>A<row>What will the following Python code print out?

data = 'From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008'
pos = data.find('.')
print(data[pos:pos+3])

A. uct
B. 09:14
C. .ma
D. mar<term>C<row>Which of the following string methods removes whitespace from both the beginning and end of a string?

A. strtrunc()
B. strip()
C. rltrim()
D. wsrem()<term>B<row>Given the architecture and terminology we introduced in Chapter 1, where are files stored?

A. Main Memory
B. Motherboard
C. Secondary memory
D. Central Processor<term>C<row>What is stored in a "file handle" that is returned from a successful *open()* call?

A. All the data from the file is read into memory and stored in the handle
B. The handle has a list of all of the files in a particular folder on the hard drive
C. The handle contains the first 10 lines of a file
D. The handle is a connection to the file's data<term>D<row>What do we use the second parameter of the *open()* call to indicate?

A. What disk drive the file is stored on
B. The list of folders to be searched to find the file we want to open
C. How large we expect the file to be
D. Whether we want to read data from the file or write data to the file<term>D<row>What Python function would you use if you wanted to prompt the user for a file name to open?

A. gets()
B. file_input()
C. alert()
D. input()<term>D<row>What is the purpose of the newline character in text files?

A. It enables random movement throughout the file
B. It allows us to open more than one files and read them in a synchronized manner
C. It adds a new network connection to retrieve files from the network
D. It indicates the end of one line of text and the beginning of another line of text<term>D<row>If we open a file as follows:

xfile = open('mbox.txt')

What statement would we use to read the file one line at a time?

A. READ (xfile,*,END=10) line
B. while (<xfile>) {
C. for line in xfile:
D. while ( getline (xfile,line) ) {<term>C<row>What is the purpose of the following Python code?

fhand = open('mbox.txt')
x = 0
for line in fhand:
 x = x + 1

print(x)

A. Count the lines in the file 'mbox.txt'
B. Reverse the order of the lines in mbox.txt
C. Convert the lines in mbox.txt to lower case
D. Remove the leading and trailing spaces from each line in mbox.txt<term>A<row>If you write a Python program to read a text file and you see extra blank lines in the output that are not present in the file input as shown below, what Python string function will likely solve the problem?

From: stephen.marquard@uct.ac.za
From: louis@media.berkeley.edu
From: zqian@umich.edu
From: rjlowe@iupui.edu
...

A. rstrip()
B. ljust()
C. startswith()
D. trim()<term>A<row>The following code sequence fails with a traceback when the user enters a file that does not exist. How would you avoid the traceback and make it so you could print out your own error message when a bad file name was entered?

fname = input('Enter the file name: ')
fhand = open(fname)

A. setjmp / longjmp
B. signal handlers
C. try / except
D. try / catch / finally<term>C<row>What does the following Python code do?

fhand = open('mbox-short.txt')
inp = fhand.read()

A. Turns the text in the file into a graphic image like a PNG or JPG
B. Prompts the user for a file name
C. Reads the entire file into the variable inp as a string
D. Checks to see if the file exists and can be written<term>C<row>How are "collection" variables different from normal variables?

A. Collection variables can only store a single value
B. Collection variables can store multiple values in a single variable
C. Collection variables merge streams of output into a single stream
D. Collection variables pull multiple network documents together<term>B<row>What are the Python keywords used to construct a loop to iterate through a list?

A. foreach / in
B. for / in
C. try / except
D. def / return<term>B<row>For the following list, how would you print out 'Sally'?

friends = [ 'Joseph', 'Glenn', 'Sally' ]

A. print friends[3]
B. print(friends[2:1])
C. print(friends[2])
D. print(friends['Sally'])<term>C<row>What would the following Python code print out?

fruit = 'Banana'
fruit[0] = 'b'
print(fruit)

A. [0]
B. Banana
C. banana
D. B
E. b
F. Nothing would print - the program fails with a traceback error<term>F<row>Which of the following Python statements would print out the length of a list stored in the variable data?

A. print(data.length)
B. print(data.Len)
C. print(strlen(data))
D. print(data.length())
E. print(length(data))
F. print(len(data))<term>F<row>What type of data is produced when you call the range() function?

x = list(range(5))

A. A string
B. A list of characters
C. A list of integers
D. A list of words
E. A boolean (true/false) value<term>C<row>What does the following Python code print out?

a = [1, 2, 3]
b = [4, 5, 6]
c = a + b
print(len(c))

A. [4, 5, 6]
B. [1, 2, 3]
C. 15
D. [1, 2, 3, 4, 5, 6]
E. 6
F. 21<term>E<row>Which of the following slicing operations will produce the list [12, 3]?

t = [9, 41, 12, 3, 74, 15]

A. t[2:4]
B. t[2:2]
C. t[12:3]
D. t[:]
E. t[1:3]<term>A<row>What list method adds a new item to the end of an existing list?

A. pop()
B. append()
C. index()
D. add()
E. push()
F. forward()<term>B<row>What will the following Python code print out?

friends = [ 'Joseph', 'Glenn', 'Sally' ]
friends.sort()
print(friends[0])

A. Glenn
B. Joseph
C. Sally
D. friends<term>A<row>How are Python dictionaries different from Python lists?

A. Python lists can store strings and dictionaries can only store words
B. Python lists store multiple values and dictionaries store a single value
C. Python dictionaries are a collection and lists are not a collection
D. Python lists maintain order and dictionaries do not maintain order<term>D<row>What is a term commonly used to describe the Python dictionary feature in other programming languages?

A. Sequences
B. Closures
C. Associative arrays
D. Lambdas<term>C<row>What would the following Python code print out?

stuff = dict()
print(stuff['candy'])

A. The program would fail with a traceback
B. 0
C. candy
D. -1<term>A<row>What would the following Python code print out?

stuff = dict()
print(stuff.get('candy',-1))

A. 'candy'
B. The program would fail with a traceback
C. -1
D. 0<term>C<row>(T/F) When you add items to a dictionary they remain in the order in which you added them.

A. False
B. True<term>A<row>What is a common use of Python dictionaries in a program?

A. Sorting a list of names into alphabetical order
B. Computing an average of a set of numbers
C. Building a histogram counting the occurrences of various strings in a file
D. Splitting a line of input into words using a space as a delimiter<term>C<row>Which of the following lines of Python is equivalent to the following sequence of statements assuming that counts is a dictionary?

if key in counts:
 counts[key] = counts[key] + 1
else:
 counts[key] = 1

A. counts[key] = (key in counts) + 1
B. counts[key] = (counts[key] * 1) + 1
C. counts[key] = counts.get(key,0) + 1
D. counts[key] = counts.get(key,-1) + 1
E. counts[key] = key + 1<term>C<row>In the following Python, what does the *for* loop iterate through?

x = dict()
...
for y in x :
 ...

A. It loops through the integers in the range from zero through the length of the dictionary
B. It loops through the values in the dictionary
C. It loops through all of the dictionaries in the program
D. It loops through the keys in the dictionary<term>D<row>Which method in a dictionary object gives you a list of the values in the dictionary?

A. items()
B. all()
C. values()
D. each()
E. keys()<term>C<row>What is the purpose of the second parameter of the *get()* method for Python dictionaries?

A. The key to retrieve
B. An alternate key to use if the first key cannot be found
C. To provide a default value if the key is not found
D. The value to retrieve<term>C<row>What is the difference between a Python tuple and Python list?

A. Lists are mutable and tuples are not mutable
B. Tuples can be expanded after they are created and lists cannot
C. Lists maintain the order of the items and tuples do not maintain order
D. Lists are indexed by integers and tuples are indexed by strings<term>A<row>Which of the following methods work both in Python lists and Python tuples?

A. append()
B. reverse()
C. index()
D. pop()
E. sort()<term>C<row>What will end up in the variable y after this code is executed?

x , y = 3, 4

A. A two item tuple
B. A dictionary with the key 3 mapped to the value 4
C. 3
D. A two item list
E. 4<term>E<row>In the following Python code, what will end up in the variable y?

x = { 'chuck' : 1 , 'fred' : 42, 'jan': 100}
y = x.items()

A. A list of integers
B. A list of strings
C. A tuple with three integers
D. A list of tuples<term>D<row>Which of the following tuples is greater than x in the following Python sequence?

x = (5, 1, 3)
if ??? > x :
 ...

A. (6, 0, 0)
B. (0, 1000, 2000)
C. (5, 0, 300)
D. (4, 100, 200)<term>A<row>What does the following Python code accomplish, assuming the c is a non-empty dictionary?

tmp = list()
for k, v in c.items() :
 tmp.append( (v, k) )

A. It sorts the dictionary based on its key values
B. It computes the largest of all of the values in the dictionary
C. It creates a list of tuples where each tuple is a value, key pair
D. It computes the average of all of the values in the dictionary<term>C<row>If the variable data is a Python list, how do we sort it in reverse order?

A. data = sortrev(data)
B. data.sort(reverse=True)
C. data = data.sort(-1)
D. data.sort.reverse()<term>B<row>Using the following tuple, how would you print 'Wed'?

days = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')

A. print(days(2))
B. print[days(2)]
C. print(days{2})
D. print(days[2])
E. print(days[1])
F. print(days.get(1,-1))<term>D<row>In the following Python loop, why are there two iteration variables (k and v)?

c = {'a':10, 'b':1, 'c':22}
for k, v in c.items() :
 ...

A. Because the items() method in dictionaries returns a list of tuples
B. Because for each item we want the previous and current key
C. Because there are two items in the dictionary
D. Because the keys for the dictionary are strings<term>A<row>Given that Python lists and Python tuples are quite similar - when might you prefer to use a tuple over a list?

A. For a list of items you intend to sort in place
B. For a temporary variable that you will use and discard without modifying
C. For a list of items that want to use strings as key values instead of integers
D. For a list of items that will be extended as new items are found<term>B<row>Which of the following best describes "Regular Expressions"?

A. A small programming language unto itself
B. A way to calculate mathematical values paying attention to operator precedence
C. A way to solve Algebra formulas for the unknown value
D. The way Python handles and recovers from errors that would otherwise cause a traceback<term>A<row>What will the '\$' regular expression match?

A. The end of a line
B. An empty line
C. The beginning of a line
D. A new line at the end of a line
E. A dollar sign<term>E<row>What would the following mean in a regular expression? [a-z0-9]

A. Match any text that is surrounded by square braces
B. Match anything but a lowercase letter or digit
C. Match a lowercase letter or a digit
D. Match any number of lowercase letters followed by any number of digits
E. Match an entire line as long as it is lowercase letters or digits<term>C<row>What is the type of the return value of the re.findall() method?

A. A string
B. A list of strings
C. An integer
D. A single character
E. A boolean<term>B<row>What is the "wild card" character in a regular expression (i.e., the character that matches any character)?

A. *
B. +
C. ^
D. $
E. .
F. ?<term>E<row>What is the difference between the "+" and "*" character in regular expressions?

A. The "+" matches at least one character and the "*" matches zero or more characters
B. The "+" matches upper case characters and the "*" matches lowercase characters
C. The "+" matches the beginning of a line and the "*" matches the end of a line
D. The "+" matches the actual plus character and the "*" matches any character
E. The "+" indicates "start of extraction" and the "*" indicates the "end of extraction"<term>A<row>What does the "[0-9]+" match in a regular expression?

A. Any mathematical expression
B. One or more digits
C. Any number of digits at the beginning of a line
D. Several digits followed by a plus sign
E. Zero or more digits<term>B<row>What does the following Python sequence print out?

x = 'From: Using the : character'
y = re.findall('^F.+:', x)
print(y)

A. ^F.+:
B. From:
C. :
D. ['From:']
E. ['From: Using the :']<term>E<row>What character do you add to the "+" or "*" to indicate that the match is to be done in a non-greedy manner?

A. ++
B. ^
C. **
D. $
E. \g
F. ?<term>F<row>Given the following line of text:

From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008

What would the regular expression '\S+?@\S+' match?

A. From
B. stephen.marquard@uct.ac.za
C. marquard@uct
D. \@\
E. d@uct.ac.za<term>B<row>Which of the following regular expressions would extract 'uct.ac.za' from this string using re.findall?

From stephen.marquard@uct.ac.za Sat Jan 5 09:14:16 2008

A. @\S+
B. F.+:
C. @(\S+)
D. ..@\S+..<term>C<row>Which of the following is the way we match the "start of a line" in a regular expression?

A. ^
B. str.startswith()
C. \linestart
D. String.startsWith()
E. variable[0:1]<term>A<row>What do we call it when a browser uses the HTTP protocol to load a file or page from a server and display it in the browser?

A. SMTP
B. DECNET
C. The Request/Response Cycle
D. Internet Protocol (IP)
E. IMAP<term>C<row>Which of the following is most similar to a TCP port number?

A. The distance between two locations
B. The GPS coordinates of a building
C. A street number in an address
D. A telephone number
E. A telephone extension<term>E<row>What must you do in Python before opening a socket?

A. _socket = true
B. open socket
C. import socket
D. import tcp
E. import tcp-socket<term>C<row>In a client-server application on the web using sockets, which must come up first?

A. server
B. client
C. it does not matter<term>A<row>Which of the following is most like an open socket in an application?

A. An "in-progress" phone conversation
B. Fiber optic cables
C. The wheels on an automobile
D. The chain on a bicycle
E. The ringer on a telephone<term>A<row>What does the "H" of HTTP stand for?

A. Simple
B. HyperText
C. wHolsitic
D. Hyperspeed
E. Manual<term>B<row>What is an important aspect of an Application Layer protocol like HTTP?

A. How long do we wait before packets are retransmitted?
B. What is the IP address for a domain like www.dr-chuck.com?
C. How much memory does the server need to serve requests?
D. Which application talks first? The client or server?<term>D<row>What are the three parts of this URL (Uniform Resource Locator)?

http://www.dr-chuck.com/page1.htm

A. Protocol, document, and offset
B. Protocol, host, and document
C. Document, page, and protocol
D. Page, offset, and count
E. Host, offset, and page<term>B<row>When you click on an anchor tag in a web page like below, what HTTP request is sent to the server?

<p>Please click <a href="page1.htm">here</a>.</p>

A. GET
B. POST
C. PUT
D. DELETE
E. INFO<term>A<row>Which organization publishes Internet Protocol Standards?

A. SCORM
B. IETF
C. LDAP
D. IMS
E. SIFA<term>B<row>What separates the HTTP headers from the body of the HTTP document?

A. A less-than sign indicating the start of an HTML tag
B. Four dashes
C. A blank line
D. X-End-Header: true<term>C<row>Which of the following TCP sockets is most commonly used for the web protocol (HTTP)?

A. 25
B. 22
C. 119
D. 80
E. 23<term>D<row>Which of the following Python data structures is most similar to the value returned in this line of Python:

x = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')

A. file handle
B. regular expression
C. dictionary
D. socket
E. list<term>A<row>In this Python code, which line actually reads the data?

import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mysock.connect(('data.pr4e.org', 80))
cmd = 'GET http://data.pr4e.org/romeo.txt HTTP/1.0\n\n'.encode()
mysock.send(cmd)

while True:
 data = mysock.recv(512)
 if (len(data) < 1):
 break
 print(data.decode())

mysock.close()

A. mysock.recv()
B. socket.socket()
C. mysock.close()
D. mysock.connect()
E. mysock.send()<term>A<row>Which of the following regular expressions would extract the URL from this line of HTML:

<p>Please click <a href="http://www.dr-chuck.com">here</a></p>

A. href="(.+)"
B. href=".+"
C. http://.*
D. <.*><term>A<row>In this Python code, which line is most like the open() call to read a file:

import socket
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mysock.connect(('data.pr4e.org', 80))
cmd = 'GET http://data.pr4e.org/romeo.txt HTTP/1.0\n\n'.encode()
mysock.send(cmd)

while True:
data = mysock.recv(512)
if (len(data) < 1):
break
print(data.decode())

mysock.close()

A. mysock.connect()
B. import socket
C. mysock.recv()
D. mysock.send()
E. socket.socket()<term>A<row>Which HTTP header tells the browser the kind of document that is being returned?

A. Document-Type:
B. Content-Type:
C. HTML-Document:
D. Metadata:
E. ETag:<term>B<row>What should you check before scraping a web site?

A. That the web site only has links within the same site
B. That the web site supports the HTTP GET command
C. That the web site returns HTML for all pages
D. That the web site allows scraping<term>D<row>What is the purpose of the BeautifulSoup Python library?

A. It optimizes files that are retrieved many times
B. It allows a web site to choose an attractive skin
C. It repairs and parses HTML to make it easier for a program to understand
D. It builds word clouds from web pages
E. It animates web operations to make them more attractive<term>C<row>What ends up in the "x" variable in the following code:

html = urllib.request.urlopen(url).read()
soup = BeautifulSoup(html, 'html.parser')
x = soup('a')

A. A list of all the anchor tags (<a..) in the HTML from the URL
B. True if there were any anchor tags in the HTML from the URL
C. All of the externally linked CSS files in the HTML from the URL
D. All of the paragraphs of the HTML from the URL<term>A<row>What is the most common Unicode encoding when moving data between systems?

A. UTF-64
B. UTF-128
C. UTF-32
D. UTF-8
E. UTF-16<term>D<row>What is the decimal (Base-10) numeric value for the upper case letter "G" in the ASCII character set?

A. 71
B. 7
C. 103
D. 25073
E. 14<term>A<row>What word does the following sequence of numbers represent in ASCII:
108, 105, 110, 101

A. ping
B. lost
C. func
D. tree
E. line<term>E<row>How are strings stored internally in Python 3?

A. EBCDIC
B. UTF-8
C. Byte Code
D. Unicode
E. ASCII<term>D<row>When reading data across the network (i.e. from a URL) in Python 3, what method must be used to convert it to the internal format used by strings?

A. trim()
B. upper()
C. encode()
D. find()
E. decode()<term>E<row>What is the ASCII character that is associated with the decimal value 42?

A. !
B. *
C. /
D. +
E. ^<term>B<row>What is "serialization" when we are talking about web services?

A. Making it so that dictionaries can maintain their keys in sorted order
B. Sorting all the data stored in a tuple
C. The act of taking data stored in a program and formatting it so it can be sent across the network
D. Marking each network packet so it can be put back into order on the receiving system<term>C<row>Which of the following are not commonly used serialization formats?

A. Dictionaries
B. JSON
C. XML
D. HTTP
E. TCP<term>ADE<row>In this XML, which are the "complex elements"?

<people>
<person>
<name>Chuck</name>
<phone>303 4456</phone>
</person>
<person>
<name>Noah</name>
<phone>622 7421</phone>
</person>
</people>

A. people
B. person
C. phone
D. name
E. Noah<term>AB<row>In the following XML, which are attributes?

<person>
<name>Chuck</name>
<phone type="intl">
 +1 734 303 4456
</phone>
<email hide="yes" />
</person>

A. hide
B. person
C. name
D. email
E. type<term>AE<row>In the following XML, which node is the parent node of node e

<a>
 <b>X</b>
 <c>
 <d>Y</d>
 <e>Z</e>
 </c>
</a>

A. a
B. c
C. b
D. e<term>B<row>Looking at the following XML, what text value would we find at path "/a/c/e"

<a>
 <b>X</b>
 <c>
 <d>Y</d>
 <e>Z</e>
 </c>
</a>

A. b
B. a
C. Y
D. e
E. Z<term>E<row>What is the purpose of XML Schema?

A. To transfer XML data reliably during network outages
B. To compute SHA1 checksums on data to make sure it is not modified in transit
C. To establish a contract as to what is valid XML
D. A Python program to tranform XML files<term>C<row>For this XML Schema:

<xs:complexType name="person">
 <xs:sequence>
 <xs:element name="lastname" type="xs:string"/>
 <xs:element name="age" type="xs:integer"/>
 <xs:element name="dateborn" type="xs:date"/>
 </xs:sequence>
</xs:complexType>

And this XML,

<person>
 <lastname>Severance</lastname>
 <Age>17</Age>
 <dateborn>2001-04-17</dateborn>
</person>

Which tag is incorrect?

A. person
B. Age
C. lastname
D. dateborn
E. age<term>B<row>What does the "Z" mean in this representation of a time:

2002-05-30T09:30:10Z

A. This time is in the UTC timezone
B. The hours value is in the range 0-12
C. The local timezone for this time is New Zealand
D. This time is Daylight Savings Time<term>A<row>Which of the following dates is in ISO8601 format?

A. May 30, 2002
B. 2002-05-30T09:30:10Z
C. 2002-May-30
D. 05/30/2002<term>B<row>What is a good time zone to use when computers are exchanging data over APIs?

A. The local time zone of the receiving computer
B. The local time zone of the sending computer
C. Universal Time / GMT
D. The local time zone of the sending computer without daylight savings time<term>C<row>What is the method to cause Python to parse XML that is stored in a string?

A. fromstring()
B. parse()
C. readall()
D. extract()
E. xpath()<term>A<row>In this XML, which are the "simple elements"?

<people>
 <person>
 <name>Chuck</name>
 <phone>303 4456</phone>
 </person>
 <person>
 <name>Noah</name>
 <phone>622 7421</phone>
 </person>
</people>

A. name
B. phone
C. person
D. Noah
E. people<term>AB<row>If you were building an XML Schema and wanted to limit the values allowed in an xs:string field to only those in a particular list, what XML tag would you use in your XML Schema definition?

A. xs:element
B. xs:enumeration
C. xs:sequence
D. xs:complexType
E. maxOccurs<term>B<row>What is the name of the Python 2.x library to parse XML data?

A. xml2 
B. xml.etree.ElementTree 
C. xml.json 
D. xml-misc<term>B<row>Who is credited with getting the JSON movement started?

A. Pooja Sankar
B. Bjarne Stroustrup
C. Douglas Crockford
D. Mitchell Baker<term>C<row>Which of the following is true about an API?

A. An API defines the pin-outs for the USB connectors
B. An API keeps servers running even when the power is off
C. An API defines the header bits in the first 8 bits of all IP packets
D. An API is a contract that defines how to use a software library<term>D<row>Which of the following is a web services approach used by the Twitter API?

A. CORBA
B. REST
C. SOAP
D. XML-RPC<term>B<row>What kind of variable will you get in Python when the following JSON is parsed:

{ "id" : "001",
"x" : "2",
"name" : "Chuck"
}

A. A list with three items
B. A list of tuples
C. A tuple with three items
D. A dictionary with three key / value pairs
E. A list with six items<term>D<row>Which of the following is not true about the service-oriented approach?

A. Standards are developed where many pairs of applications must work together
B. An application runs together all in one place
C. An application makes use of the services provided by other applications
D. Web services and APIs are used to transfer data between applications<term>B<row>If the following JSON were parsed and put into the variable x,

{
"users": [
{
"status": {
"text": "@jazzychad I just bought one .__.",
},
"location": "San Francisco, California",
"screen_name": "leahculver",
"name": "Leah Culver",
},
 ...

what Python code would extract "Leah Culver" from the JSON?

A. x["users"]["name"]
B. x[0]["name"]
C. x["users"][0]["name"]
D. x["name"]
E. x->name<term>C<row>What library call do you make to append properly encoded parameters to the end of a URL like the following:

http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address=Ann+Arbor%2C+MI

A. re.match()
B. urllib.parse.urlencode()
C. urllib.urlcat()
D. re.encode()<term>B<row>What happens when you exceed the Google geocoding API rate limit?

A. Your application starts to perform very slowly
B. The API starts to perform very slowly
C. You cannot use the API for 24 hours
D. You canot use the API until you respond to an email that contains a survey question<term>C<row>What protocol does Twitter use to protect its API?

A. PKI-HMAC
B. Java Web Tokens
C. OAuth
D. SOAP
E. SHA1-MD5
F. WS*Security<term>C<row>What header does Twitter use to tell you how many more API requests you can make before you will be rate limited?

A. x-request-count-down
B. x-max-requests
C. x-rate-limit-remaining
D. content-type<term>C<row>Who is credited with the REST approach to web services?

A. Roy Fielding
B. Leonard Klienrock
C. Bjarne Stroustrup
D. Vint Cerf
E. Daphne Koller<term>A<row>What Python library do you have to import to parse and handle JSON?

A. import json
B. import re
C. ElementTree
D. BeautifulSoup<term>A<row>What is the method used to parse a string containing JSON data so that you can work with the data in Python?

A. json.read() 
B. json.loads()
C. json.parse() 
D. json.connect()<term>B<row>Which of these two web service approaches is preferred in most modern service-oriented applications?

A. REST - Representational state transfer
B. SOAP - Simple Object Access Protocol<term>A<row>What word does the following sequence of numbers represent in ASCII:

108, 105, 115, 116

A. mist
B. list
C. dict
D. webs
E. first<term>B<row>Which came first, the instance or the class?

A. method
B. function
C. class
D. instance<term>C<row>In Object Oriented Programming, what is another name for the "attributes" of an object?

A. messages
B. forms
C. methods
D. fields
E. portions<term>D<row>At the moment of creation of a new object, Python looks at the _________ definition to define the structure and capabilities of the newly created object.

A. cache
B. method
C. constructor
D. class
E. instance<term>D<row>Which of the following is NOT a good synonym for "class" in Python?

A. pattern
B. blueprint
C. direction
D. template<term>C<row>What does this Python statement do if PartyAnimal is a class?

zap = PartyAnimal()

A. Subtract the value of the zap variable from the value in the PartyAnimal variable and put the difference in zap
B. Clear out all the data in the PartyAnimal variable and put the old values for the data in zap
C. Copy the value from the PartyAnimal variable to the variable zap
D. Use the PartyAnimal template to make a new object and assign it to zap<term>D<row>What is the syntax to look up the fullname attribute in an object stored in the variable colleen?

A. colleen.fullname
B. colleen::fullname
C. colleen['fullname']
D. colleen->fullname<term>A<row>Which of these statements is used to indicate that class A will inherit all the features of class B?

A. class A(B) :
B. A=B++;
C. class A instanceOf B :
D. class A inherits B :
E. class A extends B :<term>A<row>What keyword is used to indicate the start of a method in a Python class?

A. continue
B. def
C. function
D. break<term>B<row>What is "self" typically used for in a Python method within a class?

A. The number of parameters to the method
B. To terminate a loop
C. To refer to the instance in which the method is being called
D. To set the residual value in an expression where the method is used<term>C<row>What does the Python dir() function show when we pass an object into it as a parameter?

A. It shows the methods and attributes of the object
B. It shows the number of parameters to the constructor
C. It shows the type of the object
D. It shows the parent class<term>A<row>Which of the following is rarely used in Object Oriented Programming?

A. Attribute
B. Constructor
C. Method
D. Destructor<term>D<row>Structured Query Language (SQL) is used to (check all that apply)

A. Delete data
B. Insert data
C. Create a table
D. Check Python code for errors<term>ABC<row>Which of these is the right syntax to make a new table?

A. MAKE people;
B. MAKE DATASET people;
C. CREATE TABLE people;
D. CREATE people;<term>C<row>Which SQL command is used to insert a new row into a table?

A. INSERT AFTER
B. INSERT ROW
C. INSERT INTO
D. ADD ROW<term>C<row>Which command is used to retrieve all records from a table?

A. RETRIEVE * FROM Users
B. RETRIEVE all FROM User
C. SELECT all FROM Users
D. SELECT * FROM Users<term>D<row>Which keyword will cause the results of the query to be displayed in sorted order?

A. GROUP BY
B. ORDER BY
C. WHERE
D. None of these<term>B<row>In database terminology, another word for table is

A. relation
B. attribute
C. row
D. field<term>A<row>In a typical online production environment, who has direct access to the production database?

A. Database Administrator
B. UI/UX Designer
C. Project Manager
D. Developer<term>A<row>Which of the following is the database software used in this class?

A. SQL Server
B. MySQL
C. Oracle
D. SQLite
E. Postgres<term>D<row>What happens if a DELETE command is run on a table without a WHERE clause?

A. It is a syntax error
B. The first row of the table will be deleted
C. All the rows in the table are deleted
D. All the rows without a primary key will be deleted<term>C<row>Which of the following commands would update a column named "name" in a table named "Users"?

A. Users->name = 'new name' WHERE ...
B. UPDATE Users (name) VALUES ('new name') WHERE ...
C. Users.name='new name' WHERE ...
D. UPDATE Users SET name='new name' WHERE ...<term>D<row>What does this SQL command do?

SELECT COUNT(*) FROM Users

A. It only retrieves the rows of Users if there are at least two rows
B. It is a syntax errror
C. It adds a COUNT column to the Users table
D. It counts the rows in the table Users<term>D<row>What is the primary added value of relational databases over flat files?

A. Ability to execute JavaScript in the file
B. Ability to execute Python code within the file
C. Ability to scan large amounts of data quickly
D. Ability to quickly convert data to HTML
E. Ability to store data in a format that can be sent across a network<term>C<row>What is the purpose of a primary key?

A. To point to a particular row in another table
B. To look up a row based on a string that comes from outside the program
C. To track the number of duplicate values in another column
D. To look up a particular row in a table very quickly<term>D<row>Which of the following is NOT a good rule to follow when developing a database model?

A. Never repeat string data in more than one table in a data model
B. Model each "object" in the application as one or more tables
C. Use a person's email address as their primary key
D. Use integers as primary keys<term>C<row>If our user interface (i.e., like iTunes) has repeated strings on one column of the user interface, how should we model this properly in a database?

A. Put the string in the last row where it occurs and put the number of that row in the column of all of the rest of the rows where the string occurs
B. Put the string in the first row where it occurs and then put that row number in the column of all of the rest of the rows where the string occurs
C. Encode the entire row as JSON and store it in a TEXT column in the database
D. Make a table that maps the strings in the column to numbers and then use those numbers in the column
E. Put the string in the first row where it occurs and then put NULL in all of the other rows<term>D<row>Which of the following is the label we give a column that the "outside world" uses to look up a particular row?

A. Local key
B. Remote key
C. Primary key
D. Logical key
E. Foreign key<term>D<row>What is the label we give to a column that is an integer and used to point to a row in a different table?

A. Remote key
B. Primary key
C. Logical key
D. Foreign key
E. Local key<term>D<row>What SQLite keyword is added to primary keys in a CREATE TABLE statement to indicate that the database is to provide a value for the column when records are inserted?

A. AUTO_INCREMENT
B. AUTOINCREMENT
C. INSERT_AUTO_PROVIDE
D. ASSERT_UNIQUE<term>B<row>What is the SQL keyword that reconnects rows that have foreign keys with the corresponding data in the table that the foreign key points to?

A. COUNT
B. CONNECT
C. JOIN
D. CONSTRAINT
E. APPEND<term>C<row>What happens when you JOIN two tables together without an ON clause?

A. Leaving out the ON clause when joining two tables in SQLite is a syntax error
B. The rows of the left table are connected to the rows in the right table when their primary key matches
C. You get all of the rows of the left table in the JOIN and NULLs in all of the columns of the right table
D. The number of rows you get is the number of rows in the first table times the number of rows in the second table
E. You get no rows at all<term>D<row>When you are doing a SELECT with a JOIN across multiple tables with identical column names, how do you distinguish the column names?

A. tablename/columnname
B. tablename.columnname
C. tablename['columnname']
D. tablename->columnname<term>B<row>How do we model a many-to-many relationship between two database tables?

A. We add a table with two foreign keys
B. We use the ARRAY column type in both of the tables
C. We add 10 foreign keys to each table with names like artict_id_1, artist_id2, etc.
D. We use a BLOB column in both tables<term>A<row>In Python, what is a database "cursor" most like?

A. A method within a class
B. A Python dictionary
C. A function
D. A file handle<term>D<row>What method do you call in an SQLIte cursor object in Python to run an SQL command?

A. send()
B. execute()
C. socket()
D. run()<term>B<row>In the following SQL,

cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))

what is the purpose of the "?"?

A. It allows more than one boolean operation in the WHERE clause
B. It is a syntax error
C. It is a search wildcard
D. It is a placeholder for the contents of the "org" variable<term>D<row>In the following Python code sequence (assuming cur is a SQLite cursor object),

cur.execute('SELECT count FROM Counts WHERE org = ? ', (org, ))
row = cur.fetchone()

what is the value in row if no rows match the WHERE clause?

A. An empty list
B. An empty dictionary
C. -1
D. None<term>D<row>What does the LIMIT clause in the following SQL accomplish?

SELECT org, count FROM Counts
ORDER BY count DESC LIMIT 10

A. It only retrieves the first 10 rows from the table
B. It only sorts on the first 10 characters of the column
C. It reverses the sort order if there are more than 10 rows
D. It avoids reading data from any table other than Counts<term>A<row>What does the executescript() method in the Python SQLite cursor object do that the normal execute() method does not do?

A. It allows multiple SQL statements separated by semicolons
B. It allows database tables to be created
C. It allows embeded Python to be executed
D. It allows embedded JavaScript to be executed<term>A<row>What is the purpose of "OR IGNORE" in the following SQL:

INSERT OR IGNORE INTO Course (title) VALUES ( ? )

A. It makes sure that if a particular title is already in the table, there are no duplicate rows inserted
B. It ignores errors in the SQL syntax for the statement
C. It updates the created_at value if the title already exists in the table
D. It ignores any foreign key constraint errors<term>A<row>For the following Python code to work, what must be added to the title column in the CREATE TABLE statement for the Course table:

cur.execute('''INSERT OR IGNORE INTO Course (title) VALUES ( ? )''', ( title, ) )
cur.execute('SELECT id FROM Course WHERE title = ? ', (title, ))
course_id = cur.fetchone()[0]

A. A PRIMARY KEY indication
B. A NOT NULL constraint
C. A UNIQUE constraint
D. An AUTOINCREMENT indication<term>C<row>What do we generally avoid in a many-to-many junction table?

A. An AUTOINCREMENT primary key column
B. A logical key
C. Two foreign keys
D. Data items specific to the many-to-many relationship<term>AB<row>Which of the following lines will never print out regardless of the value of "x"?

if x < 2 :
 print("Below 2")
elif x < 0 :
 print("Negative")
else :
 print("Something else")

A. All the lines will print out
B. Below 2
C. Something else
D. Negative<term>D<row>Which of the following lines will never print out regardless of the value for x?

if x < 2 :
print("Below 2")
elif x < 20 :
print("Below 20")
elif x < 10 :
print("Below 10")
else :
print("Something else")

A. Below 10
B. Below 20
C. Something else
D. Below 2<term>A<row>What would the following Python code sequence print out?

zap = "hello there bob"
print(zap[4])

A. zap
B. e
C. hello
D. o
E. You would get an out-of-range error and the program would fail
F. l<term>D<row>What will the following Python program print out?

def fred():
 print("Zap")

def jane(): 
 print("ABC")

jane()
fred()
jane()

A. Zap Zap Zap
B. ABC Zap ABC
C. Zap ABC Zap
D. Zap ABC jane fred jane
E. ABC Zap jane<term>B<row>Where in the computer is a variable such as "X" stored?

x = 123

A. Central processing unit
B. Output Devices
C. Secondary Memory
D. Input Devices
E. Main Memory<term>E<row>What is the primary use of the Python dictionary?

A. To insure that all Python reserved words are properly spelled
B. To store key / value pairs
C. To look up all of the methods which are available on a Python object
D. To make sure that the definitions of the Python reserved words are available in different languages (French, Spanish, etc)<term>B<row>What does the following Python code print out?

stuff = ['joseph', 'sally', 'walter', 'tim']
print(stuff[2])

A. walter
B. tim
C. sally
D. joseph<term>A<row>What will the following Python program print out? (This is a bit tricky so look carefully).

def hello():
 print("Hello")
 print("There")

x = 10
x = x + 1

A. x = 11
B. Nothing will print
C. 11
D. Hello
There
11<term>B<row>What will the following Python program print out?

x = -1
for value in [3, 41, 12, 9, 74, 15] :
if value > x :
x = value

print(x)

A. 74
B. 9
C. -1
D. 15
E. 3<term>A<row>What will the following Python program print out?

total = 0
for abc in range(5):
 total = total + abc

print(total)

A. 6
B. 16
C. 10
D. 4
E. 5<term>C<row>The following Python code causes a traceback:

(1) a = "123"
(2) b = 456
(3) c = a + b
(4) print(c)

Which line fails with a traceback?

A. 3
B. 1
C. 2
D. 4<term>A<row>In the following example, an error occurs in "line3" that normally causes a traceback if it were not in a try/except.

line1
try:
line2
line3
line4
except:
line5

line6

What is the sequence of lines executed in this program?

A. line1, line2, line3, line5, line6
B. line1, line2, line3, line6
C. line1, line5, line6
D. line1, line4, line5, line6
E. line1, line2, line3, line4, line5, line6<term>A<row>What would the following Python code print out?

abc = "With three words"
stuff = abc.split()
print(stuff)

A. ['With', 'three', 'words']
B. ['With the', 'ee words']
C. ['With three words']
D. ['With', 'three words']
E. ['w', 'i', 't', 'h']<term>A<row>What would the following Python code print out?

abc = "With three words"
stuff = abc.split()
print(len(stuff))

A. 2
B. 1
C. 14
D. 16
E. 3<term>E<row>How is a Python socket different than a Python file handle?

A. Opening a socket will never fail, while opening a file can fail
B. The socket does not read all of the data when it is opened
C. You can read and write using the same socket<term>C<row>In the following XML, what is "type"?

<person>
<name>Chuck</name>
<phone type="intl">
 +1 734 303 4456
</phone>
<email hide="yes" />
</person>

A. An attribute
B. XML syntax error
C. Simple element
D. Tag
E. Complex element
F. Value<term>A<row>Which programming language serves as the basis for the JSON syntax?

A. JavaScript
B. Java
C. PHP
D. Python
E. SCALA<term>A<row>